<?xml version="1.0" encoding="UTF-8"?><l7:Bundle xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management">
            <l7:References>
                <l7:Item>
                    <l7:Name>IFTTT</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bc9792</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.489Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="0000000000000000ffffffffffffec76" id="5dbe8b411167eae8d109f6a968bc9792" version="0">
                            <l7:Name>IFTTT</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>Policy Fragments</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bca4f8</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.490Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="5dbe8b411167eae8d109f6a968bc9792" id="5dbe8b411167eae8d109f6a968bca4f8" version="0">
                            <l7:Name>Policy Fragments</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>authentication</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bca968</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.490Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="5dbe8b411167eae8d109f6a968bca4f8" id="5dbe8b411167eae8d109f6a968bca968" version="0">
                            <l7:Name>authentication</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>Services</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bca5ac</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.490Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="5dbe8b411167eae8d109f6a968bc9792" id="5dbe8b411167eae8d109f6a968bca5ac" version="0">
                            <l7:Name>Services</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>DMZ</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bca569</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.490Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="5dbe8b411167eae8d109f6a968bca5ac" id="5dbe8b411167eae8d109f6a968bca569" version="0">
                            <l7:Name>DMZ</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>IFTTT-Services</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bca63a</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.490Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="5dbe8b411167eae8d109f6a968bca569" id="5dbe8b411167eae8d109f6a968bca63a" version="0">
                            <l7:Name>IFTTT-Services</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>Triggers</l7:Name>
                    <l7:Id>457652ee7bfc6625aa2134eb519226d9</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.490Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="5dbe8b411167eae8d109f6a968bca63a" id="457652ee7bfc6625aa2134eb519226d9" version="0">
                            <l7:Name>Triggers</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>Actions</l7:Name>
                    <l7:Id>457652ee7bfc6625aa2134eb51922719</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.490Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="5dbe8b411167eae8d109f6a968bca63a" id="457652ee7bfc6625aa2134eb51922719" version="0">
                            <l7:Name>Actions</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>IFTTT-System</l7:Name>
                    <l7:Id>457652ee7bfc6625aa2134eb51924873</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.490Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="5dbe8b411167eae8d109f6a968bca569" id="457652ee7bfc6625aa2134eb51924873" version="0">
                            <l7:Name>IFTTT-System</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>Services</l7:Name>
                    <l7:Id>457652ee7bfc6625aa2134eb51926919</l7:Id>
                    <l7:Type>FOLDER</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.490Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Folder folderId="5dbe8b411167eae8d109f6a968bca569" id="457652ee7bfc6625aa2134eb51926919" version="0">
                            <l7:Name>Services</l7:Name>
                        </l7:Folder>
                    </l7:Resource>
                </l7:Item>
                
                <l7:Item>
                    <l7:Name>OTK Caching Customization</l7:Name>
                    <l7:Id>c2656fd5ff575252902a7e330e355f53</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.494Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="a2206e7c-28e8-489d-862d-3b7c6da78079" id="c2656fd5ff575252902a7e330e355f53" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d169147d0" guid="a2206e7c-28e8-489d-862d-3b7c6da78079" id="c2656fd5ff575252902a7e330e355f53" version="0">
<l7:Name>OTK Caching Customization</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**********************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="This policy gets executed whenever an OTK Cache * assertion                                 is used."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="This policy can be modified in order to set default                                 configuration values for caches that are introduced."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="For each cache follow the example shown below:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="- Add an 'All assertions must evaluate to true' assertion"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="- Check for the cacheID (name) and set values                                 appropriately"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="***** OTK Cache Look Up Customization *****"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Customizable hook for cache lookup. This is used by OTK                                 Cache Handler as a policy fragment"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Available context variables:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** cacheID (String) - the ID of the cache to be stored"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** cacheKey - the key associated with the value to be                                 looked up"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** maxEntryAge - the max age in seconds for entries into                                 this cache"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="***** OTK Cache Store Customization *****"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Customizable hook for cache store. This is used by OTK                                 Cache Handler as a policy fragment, and is called for REMOVE, STORE and FLUSH                                 operations"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Available context variables:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** cacheID (String) - the ID of the cache to be stored"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** cacheKey - the key associated with the given value for                                 the cache identified by cacheID"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** maxEntries - the maximum number of entries allowed in                                 the cache. Adding more than this limit would force some existing items to be removed."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** maxEntryAge - the max age in seconds for entries into                                 this cache"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** maxEntrySize - the maximum size in bytes allowable for                                 the value"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**********************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** NOTE: only one maxEntryAge, maxEntrySize and maxEntries                                 value is supported per cacheID "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Changing any of these values after the cache has been                                 created will result in the cache configuration being updated."/&gt;
            &lt;/L7p:CommentAssertion&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**********************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cacheID}"/&gt;
                    &lt;L7p:Expression2 stringValue="myCache"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="myCache"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${maxEntryAge}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="new"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// configure the new lifetime"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="MTIwMA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="maxEntryAge"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="maxEntryAge"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// check if an entryAge has been given"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="new"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// configure number of valid entries"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="MTAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="maxEntries"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="new"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// configure entrySize for cache entries"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="MTAwMDA="/&gt;
                    &lt;L7p:VariableToSet stringValue="maxEntrySize"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="myCache"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// sample configuration where a given maxEntryAge is accepted                                 but maxEntrySize, maxEntries given in the Cache UI are being ignored"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cacheID}"/&gt;
                    &lt;L7p:Expression2 stringValue="anotherCache"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="anotherCache"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="new"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// configure the new lifetime"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="MTIwMA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="maxEntryAge"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="new"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// configure number of valid entries"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="MTAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="maxEntries"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="new"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// configure entrySize for cache entries"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="MTAwMDA="/&gt;
                    &lt;L7p:VariableToSet stringValue="maxEntrySize"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="anotherCache"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// sample configuration where maxEntryAge, maxEntrySize,                                 maxEntries given in the Cache UI are being ignored"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="example"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// configure default values per cacheID"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Cache Look Up Customization</l7:Name>
                    <l7:Id>161861da3a78c5dcdc62696d16914896</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.495Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="df0a2c11-cf6e-47da-84c0-032bf7f3b6d2" id="161861da3a78c5dcdc62696d16914896" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d169147d0" guid="df0a2c11-cf6e-47da-84c0-032bf7f3b6d2" id="161861da3a78c5dcdc62696d16914896" version="0">
<l7:Name>OTK Cache Look Up Customization</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="***** OTK Cache Look Up Customization *****"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Available context variables:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** cacheID (String) - the ID of the cache to be stored"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** cacheKey - the key associated with the value to be                                 looked up"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** maxEntryAge - the max age that the cache was originally                                 created with"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Must return: the variable 'resp' as a Message for found                                 content"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Must fail if the looked up value does not exist!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Replace the assertion below if desired with an assertion                                 that supports key- value data structures"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** If this assertion is replaced also replace it at 'OTK                                 Cache Store Customization'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CacheLookup&gt;
            &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
            &lt;L7p:CacheId stringValue="${actualCacheID}"/&gt;
            &lt;L7p:ContentTypeOverride stringValue=""/&gt;
            &lt;L7p:MaxEntryAgeSeconds stringValue="${maxEntryAge}"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="resp"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:CacheLookup&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Cache Store Customization</l7:Name>
                    <l7:Id>161861da3a78c5dcdc62696d16914883</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.496Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="2294fc5e-0adf-4d4b-b44d-8d1252f024c9" id="161861da3a78c5dcdc62696d16914883" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d169147d0" guid="2294fc5e-0adf-4d4b-b44d-8d1252f024c9" id="161861da3a78c5dcdc62696d16914883" version="0">
<l7:Name>OTK Cache Store Customization</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="***** OTK Cache Store Customization *****"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**********************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Available context variables:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** cacheID (String) - the ID of the cache to be stored"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** cacheKey - the key associated with the given value for                                 the cache identified by cacheID"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** maxEntries - the maximum number of entries allowed in                                 the cache. Adding more than this limit would force some existing items to be removed."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** maxEntryAge - the maximum length (seconds) to keep                                 entries in the cache. "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** maxEntrySize - the maximum size in bytes allowable for                                 the value"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Replace the assertion below if desired with an assertion                                 that support key- value data structures"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** If this assertion is replaced also replace it at 'OTK                                 Cache Look Up Customization'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CacheStorage&gt;
            &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
            &lt;L7p:CacheId stringValue="${actualCacheID}"/&gt;
            &lt;L7p:MaxEntries stringValue="${maxEntries}"/&gt;
            &lt;L7p:MaxEntryAgeSeconds stringValue="${maxEntryAge}"/&gt;
            &lt;L7p:MaxEntrySizeBytes stringValue="${maxEntrySize}"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="msg"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:CacheStorage&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Cache Handler</l7:Name>
                    <l7:Id>161861da3a78c5dcdc62696d16914861</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.504Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="65eff071-9a97-415b-8ebb-8e711ffd738d" id="161861da3a78c5dcdc62696d16914861" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d1691481a" guid="65eff071-9a97-415b-8ebb-8e711ffd738d" id="161861da3a78c5dcdc62696d16914861" version="0">
<l7:Name>OTK Cache Handler</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Required changes can be implemented in policies in the 'Customizations' folder "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === The policies within that folder are named: "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === OTK Caching Customization, OTK Cache Look Up Customization, OTK Cache Store Customization"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you find you cannot add your customizations using the policies in the 'Customizations' folder"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="******** OTK Cache Handler *******"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="******** DO NOT CALL or use this policy directly.  It is included as a Policy Fragment in the following policies:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="******** 1. OTK Cache Look Up"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="******** 2. OTK Cache Store"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="******** 3. OTK Cache Remove"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="******** 4. OTK Cache Flush"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="******** Please use one of the above policies instead"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${maxEntryAge}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="new"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// configure default lifetime"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:VariableToSet stringValue="maxEntryAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="maxEntryAge"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check if an maxEntryAge has been given"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${maxEntrySize}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="new"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// configure default size in byte"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MTAwMDA="/&gt;
                &lt;L7p:VariableToSet stringValue="maxEntrySize"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="maxEntrySize"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check if an maxEntrySize has been given"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${maxEntries}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="new"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// configure default number of entries"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MTAwMDA="/&gt;
                &lt;L7p:VariableToSet stringValue="maxEntries"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="maxEntries"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check if an maxEntries has been given"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="a2206e7c-28e8-489d-862d-3b7c6da78079"/&gt;
        &lt;/L7p:Include&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtjYWNoZUlEfSR7bWF4RW50cnlBZ2V9"/&gt;
            &lt;L7p:VariableToSet stringValue="actualCacheID"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cache.op}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="GET"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="GET"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue="df0a2c11-cf6e-47da-84c0-032bf7f3b6d2"/&gt;
                &lt;/L7p:Include&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cache.op}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="GET"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="GET"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${cache.op}"/&gt;
                        &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:RightValue stringValue="FLUSH"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="maxEntryAge"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="== SET"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// maxEntryAge to 0 for FLUSH operation"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:Include&gt;
                        &lt;L7p:PolicyGuid stringValue="2294fc5e-0adf-4d4b-b44d-8d1252f024c9"/&gt;
                    &lt;/L7p:Include&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                    &lt;/wsp:All&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="OTHER"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// STORE, REMOVE, FLUSH"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="operations"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Cache Look Up</l7:Name>
                    <l7:Id>161861da3a78c5dcdc62696d16914bbb</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.508Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="fb88be42-83e7-4d36-a865-34e53d4f4218" id="161861da3a78c5dcdc62696d16914bbb" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d1691481a" guid="fb88be42-83e7-4d36-a865-34e53d4f4218" id="161861da3a78c5dcdc62696d16914bbb" version="0">
<l7:Name>OTK Cache Look Up</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="***** OTK Cache Look Up ********************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Looks up a cache value from the cache identified by cacheID and maxEntryAge by key: cacheKey."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**********************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cacheID}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cacheKey}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${maxEntryAge}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="int"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="valid"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="validate"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check for required fields"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="R0VU"/&gt;
                &lt;L7p:VariableToSet stringValue="cache.op"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:VariableToSet stringValue="maxEntries"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:VariableToSet stringValue="maxEntrySize"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="== SET"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// context variables for OTK Cache Handler"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="65eff071-9a97-415b-8ebb-8e711ffd738d"/&gt;
        &lt;/L7p:Include&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Cache Look Up</l7:Name>
                    <l7:Id>161861da3a78c5dcdc62696d16914c21</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.512Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="161861da3a78c5dcdc62696d16914c21" version="1">
                            <l7:Name>OTK Cache Look Up</l7:Name>
                            <l7:Guid>68ad78a1-f4a1-4568-91e1-0980d95c75cd</l7:Guid>
                            <l7:PolicyReference id="161861da3a78c5dcdc62696d16914bbb" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>cacheID</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>The Cache ID (required)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>cacheKey</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>The Cache Key (identifier) for this entry (required)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>maxEntryAge</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Max. entry age in seconds (optional if a default value exists)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.msg</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>resp</l7:ResultName>
    <l7:ResultType>message</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Looks Up an item associated with key: cacheKey in cache with ID: cacheID and returns it in values, if the item exists. </l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>customAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>lookup16.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>fb88be42-83e7-4d36-a865-34e53d4f4218</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>#OTK Fail with error message</l7:Name>
                    <l7:Id>bc9a31b7578652a08a514d7d4fef9afd</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.514Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="1a55cc2a-9996-4978-8473-c2a75e5c59d1" id="bc9a31b7578652a08a514d7d4fef9afd" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d16914781" guid="1a55cc2a-9996-4978-8473-c2a75e5c59d1" id="bc9a31b7578652a08a514d7d4fef9afd" version="0">
<l7:Name>#OTK Fail with error message</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Target Configuration Policy: &amp;quot;OTK Fail with error                                 message&amp;quot;"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Set custom values for Context Variables below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Set Context Variables to override their values in the                                 target policy below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Customizations:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="DO NOT CHANGE OR OVERWRITE EXISTING ERROR CODES!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Add error codes as desired! Follow the existing pattern!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Create any code in the 700-899 range!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                    &lt;L7p:Expression2 stringValue="103"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="103"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="status"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="ew0KCSJlcnJvcnMiOiBbew0KCQkibWVzc2FnZSI6ICJNaXNzaW5nIHRyaWdnZXIgZmllbGRzIg0KCX1dDQp9"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:RaiseError/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="103"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// missing or invalid parameters"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                    &lt;L7p:Expression2 stringValue="990"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="990"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                    &lt;L7p:VariableToSet stringValue="status"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="ew0KCSJlcnJvcnMiOiBbew0KCQkibWVzc2FnZSI6ICJ2YWxpZGF0aW9uIGVycm9yIg0KCX1dDQp9"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:RaiseError/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="990"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// expired or unknown token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="== custom"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// custom error handling"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Cache Store</l7:Name>
                    <l7:Id>161861da3a78c5dcdc62696d16914be5</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.519Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="58143e14-a1cd-4cca-b25a-e2d637a42bbc" id="161861da3a78c5dcdc62696d16914be5" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d1691481a" guid="58143e14-a1cd-4cca-b25a-e2d637a42bbc" id="161861da3a78c5dcdc62696d16914be5" version="0">
<l7:Name>OTK Cache Store</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="***** OTK Cache Store *********************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Stores the given msg in the cache identified by cacheID and maxEntryAge with key: cacheKey."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**********************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cacheID}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cacheKey}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${maxEntryAge}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="int"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${maxEntries}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="int"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${maxEntrySize}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="int"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="valid"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="validate"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check for required fields"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="U1RPUkU="/&gt;
                &lt;L7p:VariableToSet stringValue="cache.op"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="== SET"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// context variables for OTK Cache Handler"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="65eff071-9a97-415b-8ebb-8e711ffd738d"/&gt;
        &lt;/L7p:Include&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Cache Store</l7:Name>
                    <l7:Id>161861da3a78c5dcdc62696d16914c44</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.519Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="161861da3a78c5dcdc62696d16914c44" version="1">
                            <l7:Name>OTK Cache Store</l7:Name>
                            <l7:Guid>e5ee8bcf-1796-4297-88dd-c838031a6f6a</l7:Guid>
                            <l7:PolicyReference id="161861da3a78c5dcdc62696d16914be5" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>cacheID</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>The Cache ID (required)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>cacheKey</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>The Cache Key (identifier) for this entry (required)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>maxEntries</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Max. number of entries for this cache (optional if a default value exists)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>maxEntryAge</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Max. entry age in seconds (optional if a default value exists)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>maxEntrySize</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Max. size for each entry (optional if a default value exists)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>msg</l7:ArgumentName>
    <l7:ArgumentType>message</l7:ArgumentType>
    <l7:GuiLabel>The message to be cached (required, must exist in the preceeding policy context)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>7</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.msg</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Writes an item to cache with ID: cacheID with key: cacheKey.  If the cache does not exist, one will be created.  If the key exists, the existing item will be overwritten.</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>customAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconBase64">
    <l7:StringValue>R0lGODlhEAAQAPcAAAAAAIAAAACAAICAAAAAgIAAgACAgICAgMDAwP8AAAD/AP//AAAA//8A/wD/&#xD;
/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xD;
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAZgAAmQAAzAAA/wAzAAAzMwAzZgAzmQAzzAAz/wBm&#xD;
AABmMwBmZgBmmQBmzABm/wCZAACZMwCZZgCZmQCZzACZ/wDMAADMMwDMZgDMmQDMzADM/wD/AAD/&#xD;
MwD/ZgD/mQD/zAD//zMAADMAMzMAZjMAmTMAzDMA/zMzADMzMzMzZjMzmTMzzDMz/zNmADNmMzNm&#xD;
ZjNmmTNmzDNm/zOZADOZMzOZZjOZmTOZzDOZ/zPMADPMMzPMZjPMmTPMzDPM/zP/ADP/MzP/ZjP/&#xD;
mTP/zDP//2YAAGYAM2YAZmYAmWYAzGYA/2YzAGYzM2YzZmYzmWYzzGYz/2ZmAGZmM2ZmZmZmmWZm&#xD;
zGZm/2aZAGaZM2aZZmaZmWaZzGaZ/2bMAGbMM2bMZmbMmWbMzGbM/2b/AGb/M2b/Zmb/mWb/zGb/&#xD;
/5kAAJkAM5kAZpkAmZkAzJkA/5kzAJkzM5kzZpkzmZkzzJkz/5lmAJlmM5lmZplmmZlmzJlm/5mZ&#xD;
AJmZM5mZZpmZmZmZzJmZ/5nMAJnMM5nMZpnMmZnMzJnM/5n/AJn/M5n/Zpn/mZn/zJn//8wAAMwA&#xD;
M8wAZswAmcwAzMwA/8wzAMwzM8wzZswzmcwzzMwz/8xmAMxmM8xmZsxmmcxmzMxm/8yZAMyZM8yZ&#xD;
ZsyZmcyZzMyZ/8zMAMzMM8zMZszMmczMzMzM/8z/AMz/M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8A&#xD;
mf8AzP8A//8zAP8zM/8zZv8zmf8zzP8z//9mAP9mM/9mZv9mmf9mzP9m//+ZAP+ZM/+ZZv+Zmf+Z&#xD;
zP+Z///MAP/MM//MZv/Mmf/MzP/M////AP//M///Zv//mf//zP///yH5BAEAABAALAAAAAAQABAA&#xD;
AAhWAFGg+EewoEGDAgceXEgwYUOGCAX+UwixocOKBS9OlBjxIop+/PpRZPgxZMiRBwWCFIkS4amE&#xD;
Lyui4IeqDyqOJE/xexkT4syaN1tm1MlTaEagRjsWDAgAOw==</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>58143e14-a1cd-4cca-b25a-e2d637a42bbc</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Fail with error message</l7:Name>
                    <l7:Id>d1bde3d2021a469e82ebf8cac288bbd1</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.551Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="9e864ce5-1275-477f-a642-b5e867f367a3" id="d1bde3d2021a469e82ebf8cac288bbd1" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fd08e" guid="9e864ce5-1275-477f-a642-b5e867f367a3" id="d1bde3d2021a469e82ebf8cac288bbd1" version="0">
<l7:Name>OTK Fail with error message</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Required changes can be implemented in policies in the 'Customizations' folder "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === The policies within that folder will have the same name as this policy but "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === either prefixed with '#' or suffixed with 'Extensions'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Prefixed policies can be used to overwrite variables of this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Suffixed policies can be used to extend functionality"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you find you cannot add your customizations using the policies in the 'Customizations' folder"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy should be used as an encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="OTK has error responses configured that are specified here"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="OTK policies pass in an error code and this encapsulated assertion will return appropriate errors"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="cache"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="cache errors for performance reasons"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFpbEVycm9yTWVzc2FnZUNhY2hl"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheName"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="cache"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="remember if a value if cache"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="isCached"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04"/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:HandleErrors L7p:Usage="Required"
            includeIOException="false" variablePrefix="errors"&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="From cache"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="68ad78a1-f4a1-4568-91e1-0980d95c75cd"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Cache Look Up"/&gt;
                        &lt;L7p:Parameters mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="cacheID"/&gt;
                                &lt;L7p:value stringValue="${cacheName}"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="cacheKey"/&gt;
                                &lt;L7p:value stringValue="${givenErrorCode}"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="maxAcceptableAge"/&gt;
                                &lt;L7p:value stringValue="300"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="maxEntryAge"/&gt;
                                &lt;L7p:value stringValue="300"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Parameters&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtyZXNwLm1haW5wYXJ0fQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="cacheValue"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Regex&gt;
                        &lt;L7p:AutoTarget booleanValue="false"/&gt;
                        &lt;L7p:CaptureVar stringValue="errordetail"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="cacheValue"/&gt;
                        &lt;L7p:Regex stringValue="status([0-9]{1,10})description(.+)"/&gt;
                        &lt;L7p:Replacement stringValue=""/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtlcnJvcmRldGFpbFsxXX0="/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtlcnJvcmRldGFpbFsyXX0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="cache"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="remember if a value if cache"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="isCached"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="from cache"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue="1a55cc2a-9996-4978-8473-c2a75e5c59d1"/&gt;
                &lt;/L7p:Include&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="CA Mobile API Gateway related"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="15795857-d8a2-4b45-9722-94fc1ce9098a"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="MAG Fail with error message"/&gt;
                        &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.msg}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="OAuth token validation related"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="990"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="990"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJWYWxpZGF0aW9uIGVycm9yIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="990"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="expired or unknown token"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="991"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="991"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJWYWxpZGF0aW9uIGVycm9yIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="991"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="missing SCOPE, permissions"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="992"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="992"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJWYWxpZGF0aW9uIGVycm9yIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="992"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="no or multiple access_token were provided"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="993"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="993"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJWYWxpZGF0aW9uIGVycm9yIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="993"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="disabled token"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="OAuth authorization page related"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="114"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="114"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlZGlyZWN0X3VyaSIsDQogICJlcnJvcl9kZXNjcmlwdGlvbiI6Ik9uZSBvciBtb3JlIHJlZGlyZWN0X3VyaSB2YWx1ZXMgYXJlIGludmFsaWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="114"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="mismatching redirect uri"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="123"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="123"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ewogICJlcnJvciI6ImF1dGhlbnRpY2F0aW9uX2Vycm9yIiwKICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgcmVzb3VyY2Vfb3duZXIgY2FuY2VsbGVkIGF1dGhlbnRpY2F0aW9uIgp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="123"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="resource owner denied authentication"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="124"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="124"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJhY2Nlc3NfZGVuaWVkIiwNCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiVGhlIHJlc291cmNlX293bmVyIGRlbmllZCBhY2Nlc3MgdG8gcmVzb3VyY2VzIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="124"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="resource owner denied access to resources"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="110"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="110"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgc2Vzc2lvbiBoYXMgZXhwaXJlZCBvciBhbHJlYWR5IGJlZW4gZ3JhbnRlZC4gVGhlIGxvZ2luIHByb2Nlc3MgaGFzIHRvIGJlIHJlcGVhdGVkIHRvIGJlIHN1Y2Nlc3NmdWwiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="110"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid session"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Authentication related"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="201"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="201"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX2NsaWVudCIsDQogICJlcnJvcl9kZXNjcmlwdGlvbiI6IlRoZSBnaXZlbiBjbGllbnQgY3JlZGVudGlhbHMgd2VyZSBub3QgdmFsaWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="201"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Invalid client related"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="202"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="202"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJsb2dpbl9yZXF1aXJlZCIsDQogICJlcnJvcl9kZXNjcmlwdGlvbiI6IlRoZSByZXNvdXJjZSBvd25lciBjb3VsZCBub3QgYmUgYXV0aGVudGljYXRlZCBkdWUgdG8gbWlzc2luZyBvciBpbnZhbGlkIGNyZWRlbnRpYWxzIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="202"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Invalid resource owner credentials"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="203"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="203"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAz"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJTU0wgaXMgcmVxdWlyZWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="203"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Missing SSL"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="204"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="204"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAz"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJTU0wgd2l0aCBjbGllbnQgYXV0aGVudGljYXRpb24gaXMgcmVxdWlyZWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="204"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Missing SSL and/or client certificate"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="205"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="205"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICJlcnJvciI6ImludmFsaWRfcmVxdWVzdCIsDQogImVycm9yX2Rlc2NyaXB0aW9uIjoiVGhlIGNsaWVudCBjZXJ0aWZpY2F0ZSBpcyBub3QgdmFsaWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="205"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid client certificate"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Others"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="103"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="103"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="no parameters or duplicate parameters or a missing required parameters"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJNaXNzaW5nIG9yIGR1cGxpY2F0ZSBwYXJhbWV0ZXJzIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="103"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Invalid parameter related"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="111"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="111"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="The number of requests has exceeded the accepted limit"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDI5"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgbnVtYmVyIG9mIHBlcm1pdHRlZCByZXF1ZXN0cyBoYXMgYmVlbiBleGNlZWRlZCINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="111"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="too many requests"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="112"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="112"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="either an invalid code_challenge or code_challenge_method"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJ0aGUgY29kZV9jaGFsbGVuZ2Ugb3IgY29kZV9jaGFsbGVuZ2VfbWV0aG9kIGlzIGludmFsaWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="112"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Invalid PKCE parameter"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="113"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="113"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX2dyYW50IiwNCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiVGhlIGdpdmVuIGdyYW50IGlzIGludmFsaWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="113"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid grant"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="115"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="115"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3Njb3BlIiwNCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiTm8gcmVnaXN0ZXJlZCBzY29wZSB2YWx1ZSBmb3IgdGhpcyBjbGllbnQgaGFzIGJlZW4gcmVxdWVzdGVkIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="115"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="no matching registered SCOPE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="116"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="116"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJ1bnN1cHBvcnRlZF9yZXNwb25zZV90eXBlIiwNCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiTm9uZSBvZiB0aGUgc3VwcG9ydGVkIHJlc3BvbnNlX3R5cGVzIHdlcmUgdXNlZCINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="116"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="unsupported response type"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="117"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="117"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJ1bmF1dGhvcml6ZWRfY2xpZW50IiwNCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiVGhlIGNsaWVudCBtaXNzZXMgYXV0aG9yaXphdGlvbiBmb3IgdGhpcyByZXF1ZXN0Ig0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="117"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="missing client authorization"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="118"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="118"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NTAz"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJ1bnN1cHBvcnRlZF90b2tlbl90eXBlIiwNCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoidGhlIGdpdmVuIHR5cGUgb2YgdG9rZW4gaXMgbm90IHN1cHBvcnRlZCINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="118"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="unsupported token type"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="119"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="119"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJ1bnN1cHBvcnRlZF9ncmFudF90eXBlIiwNCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiVGhlIGdpdmVuIGdyYW50X3R5cGUgaXMgbm90IHN1cHBvcnRlZCINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="119"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="unsupported grant_type"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="120"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="120"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgaWRfdG9rZW4gaGFzIG1pc3NpbmcgY2xhaW1zIG9yIGhhcyBleHBpcmVkIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="120"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid id_token"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="121"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="121"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgZ2l2ZW4gSldUIGlzIGludmFsaWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="121"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid JWT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="122"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="122"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgSldUIC0gaWRfdG9rZW4gY291bGQgbm90IGJlIGNyZWF0ZWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="122"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="JWT - id_token could not be created"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="300"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="300"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJDbGllbnQoX2lkKSB2YWx1ZSBjb3VsZCBub3QgYmUgcGVyc2lzdGVkIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="300"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="client_id could not be persisted"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="301"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="301"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgdmFsdWUgZm9yICdwZXJzaXN0X3R5cGUnIGlzIG5vdCBzdXBwb3J0ZWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="301"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="unknown persist_type"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="303"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="303"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgcGF0aCBjb21wb25lbnQgb2YgdGhlIFVSTCBpcyBpbnZhbGlkIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="303"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invald path"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="304"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="304"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MzAy"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJjb25zZW50X3JlcXVpcmVkIiwNCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiVGhlIGF1dGhvcml6YXRpb24gc2VydmVyIHJlcXVpcmVzIHVzZXIgY29uc2VudCINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="304"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="consent required"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="125"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="125"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJBIHZlcmlmaWVyIGhhcyBhbHJlYWR5IGJlZW4gc2V0Ig0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="125"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Invalid verifier"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="126"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="126"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgZ2l2ZW4gc3RhdHVzIGRvZXMgbm90IG1hdGNoIHRoZSBhY3R1YWwgY2xpZW50IHN0YXR1cyINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="126"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Invalid client_id status"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="127"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="127"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgZ2l2ZW4gY2xpZW50X2lkIGhhcyBleHBpcmVkIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="127"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="expired client_id"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="128"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="128"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgY2xpZW50IG5hbWUgaXMgbm90IHZhbGlkIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="128"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid client name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="129"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="129"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgZW52aXJvbm1lbnQgaXMgbm90IHZhbGlkIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="129"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid environment"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="130"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="130"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgY2xpZW50IHR5cGUgaXMgbm90IHZhbGlkIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="130"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid client type"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="131"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="131"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgaWRfdG9rZW4gY291bGQgbm90IGJlIGNyZWF0ZWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="131"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="id_token error"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="132"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="132"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgc2VydmVyIGNvbmZpZ3VyYXRpb24gaXMgaW52YWxpZC4gQ29udGFjdCB0aGUgYWRtaW5pc3RyYXRvciINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="132"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid server configuration"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="133"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="133"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgZ2l2ZW4gbWVzc2FnZSBpcyBub3QgYSB2YWxpZCBKU09OIG9iamVjdCINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="133"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="invalid JSON object"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="134"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="134"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgcmVxdWVzdCBkaWQgbm90IG1hdGNoIENPUlMgcmVxdWlyZW1lbnRzIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="134"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="CORS requirements did not match"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="135"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="135"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgbWF4aW11bSBudW1iZXIgb2YgdG9rZW5zIGhhcyBiZWVuIHJlYWNoZWQiDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="135"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Max number of OAuth Sessions reached"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="136"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="136"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX2NvbmZpZ3VyYXRpb24iLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgcHVibGljIGtleSBoYXNoIGNvdWxkIG5vdCBiZSBjcmVhdGVkLiBDb250YWN0IHRoZSBhZG1pbmlzdHJhdG9yIg0KfQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="136"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// public key hash could not be created"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="305"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="305"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkIGp3a3MgYW5kIGp3a3NfdXJpIiwNCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiVGhlIGp3a3NfdXJpIGFuZCBqd2tzIHBhcmFtZXRlcnMgTVVTVCBOT1QgYmUgdXNlZCB0b2dldGhlci4iDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="305"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// both jwks and jwks_uri are provided at OIDC registration"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="306"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="306"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkIGNsaWVudCIsDQogICJlcnJvcl9kZXNjcmlwdGlvbiI6IlRoZSBnaXZlbiBKV1QgZm9yIGNsaWVudCBhdXRoZW50aWNhdGlvbiBpcyBpbnZhbGlkLiINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="306"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// client jwt for client authentication is invalid"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="307"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="307"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX2NsaWVudCIsDQogICJlcnJvcl9kZXNjcmlwdGlvbiI6IlJlcXVlc3QgaXMgYSByZXBsYXkgYXR0YWNrLiINCn0="/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="307"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// request is a replay attack"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="308"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="308"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX2NsaWVudCIsDQogICJlcnJvcl9kZXNjcmlwdGlvbiI6IlJlcGxheSBhdHRhY2sgcHJvdGVjdGlvbiBjb3VsZCBub3QgYmUgYXBwbGllZC4iDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="308"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// replay attack protection could not be applied"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="000"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="000"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgcmVxdWVzdCBmYWlsZWQgZHVlIHRvIHNvbWUgdW5rbm93biByZWFzb24iDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="000"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="unknown server side error"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="An unknown or empty error code was given: Given: API-Prefix: '${apiPrefix}', error code: '${givenErrorCode}'. Setting it to '000'"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="override"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set to '000' since none was given"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="givenErrorCode"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ew0KICAiZXJyb3IiOiJpbnZhbGlkX3JlcXVlc3QiLA0KICAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgcmVxdWVzdCBmYWlsZWQgZHVlIHRvIHNvbWUgdW5rbm93biByZWFzb24iDQp9"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:RaiseError/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="no matching"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="the given error code is not handled"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Find the appropriate error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
        &lt;/L7p:HandleErrors&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${isCached}"/&gt;
                &lt;L7p:Expression2 stringValue="true"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="true"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${givenErrorCode}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3RhdHVzJHtzdGF0dXN9ZGVzY3JpcHRpb24ke2Vycm9yLm1zZ30="/&gt;
                    &lt;L7p:ContentType stringValue="text/plain; charset=UTF-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="cacheValue"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="e5ee8bcf-1796-4297-88dd-c838031a6f6a"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Cache Store"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheID"/&gt;
                            &lt;L7p:value stringValue="${cacheName}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheKey"/&gt;
                            &lt;L7p:value stringValue="${givenErrorCode}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="doNotCacheSoapFaults"/&gt;
                            &lt;L7p:value stringValue="true"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="maxEntries"/&gt;
                            &lt;L7p:value stringValue="100"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="maxEntryAge"/&gt;
                            &lt;L7p:value stringValue="300"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="maxEntrySize"/&gt;
                            &lt;L7p:value stringValue="10000"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="msg"/&gt;
                            &lt;L7p:value stringValue="cacheValue"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="cache"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="cache the error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="cache"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="or not to cache"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHthcGlQcmVmaXh9JHtnaXZlbkVycm9yQ29kZX0="/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:FalseAssertion/&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Fail with error message</l7:Name>
                    <l7:Id>d1bde3d2021a469e82ebf8cac288bd97</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.551Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="d1bde3d2021a469e82ebf8cac288bd97" version="1">
                            <l7:Name>OTK Fail with error message</l7:Name>
                            <l7:Guid>56bd8147-3ab4-4d09-9460-8b2de02b7a9e</l7:Guid>
                            <l7:PolicyReference id="d1bde3d2021a469e82ebf8cac288bbd1" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>givenErrorCode</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Error code</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>apiPrefix</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>API prefix for error code</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.msg</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>status</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>This assertion returns an error message, http status and content-type value associated with the given 'Error code'.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Error_Handling</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_apiPrefix">
    <l7:StringValue>A value combined with the given error code. If, for example, an API would be identifiedby the values '1234' and the given error code is '111' the exported variable 'error.code' would contain '1234111'</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_givenErrorCode">
    <l7:StringValue>A value associated with a certain error. If that value is unkown it will be replaced with '000' within the output variable 'error.code'</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>Stop16.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>9e864ce5-1275-477f-a642-b5e867f367a3</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>IFTTT API Key Protection</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bca807</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.553Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="ae9b04c7-0038-4e04-8eaf-d4a44f1bd5ca" id="5dbe8b411167eae8d109f6a968bca807" version="0">
                            <l7:PolicyDetail folderId="5dbe8b411167eae8d109f6a968bca968" guid="ae9b04c7-0038-4e04-8eaf-d4a44f1bd5ca" id="5dbe8b411167eae8d109f6a968bca807" version="0">
<l7:Name>IFTTT API Key Protection</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Used at endpoints found in the IFTTT-System folder"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="The IFTTT service key is a API Key in 'CA Portal' terms"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:Expression1 stringValue="${request.http.header.IFTTT-Service-Key}"/&gt;
                &lt;L7p:Expression2 stringValue="${gateway.ifttt.service.key}"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:RightValue stringValue="${gateway.ifttt.service.key}"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="Missing or invalid service key was provided: '${request.http.header.IFTTT-Service-Key}', expected: '${gateway.ifttt.service.key}'"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// error code 201: invalid client"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="apiPrefix"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="givenErrorCode"/&gt;
                            &lt;L7p:value stringValue="201"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Verify the IFTTT Service Key"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Require SSL (with Client Certificate)</l7:Name>
                    <l7:Id>d1bde3d2021a469e82ebf8cac288b778</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.557Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="b598a733-5faf-439a-9aaf-088ca73d102e" id="d1bde3d2021a469e82ebf8cac288b778" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fd6e8" guid="b598a733-5faf-439a-9aaf-088ca73d102e" id="d1bde3d2021a469e82ebf8cac288b778" version="0">
<l7:Name>OTK Require SSL (with Client Certificate)</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This fragment should be used as an encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This fragment will require SSL and optionally a client certificate"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="The fragment will create an error message and an http status code"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Thie policy should be used at the beginning of an API policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="When OTK/MAG gets installed this policy is used at endpoint the the /storage and /ovp folder"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${requireClientCert}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SslAssertion&gt;
                    &lt;L7p:RequireClientAuthentication booleanValue="true"/&gt;
                &lt;/L7p:SslAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Mutual SSL"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="requires SSL and a client certificate"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${requireClientCert}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SslAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="SSL"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="requires SSL"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${requireClientCert}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                        &lt;L7p:Parameters mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="apiPrefix"/&gt;
                                &lt;L7p:value stringValue="${apiPrefix}"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="givenErrorCode"/&gt;
                                &lt;L7p:value stringValue="204"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Parameters&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="204"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${requireClientCert}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="203"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                        &lt;L7p:Parameters mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="apiPrefix"/&gt;
                                &lt;L7p:value stringValue="${apiPrefix}"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="givenErrorCode"/&gt;
                                &lt;L7p:value stringValue="203"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Parameters&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="203"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="With with error code 203 or 204"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Require TLS"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Require SSL (with Client Certificate)</l7:Name>
                    <l7:Id>d1bde3d2021a469e82ebf8cac288b7c9</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.557Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="d1bde3d2021a469e82ebf8cac288b7c9" version="1">
                            <l7:Name>OTK Require SSL (with Client Certificate)</l7:Name>
                            <l7:Guid>47f768f4-b478-472b-a1ee-10f4b6e76f99</l7:Guid>
                            <l7:PolicyReference id="d1bde3d2021a469e82ebf8cac288b778" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>requireClientCert</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Require Client Certificate</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>apiPrefix</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>API prefix for error code</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.msg</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>status</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Requires a request to use SSL and optionally present a client certificate. It is not authenticating the client, just requiring its certificate.
                    Use this encapsulated assertion at the beginning of the API policy. Preced 'OTK FIP Client Authentication' with this assertion.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Access_Control</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>ssl.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>b598a733-5faf-439a-9aaf-088ca73d102e</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>IFTTT API Access Control</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bca37d</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.558Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="63da1d1c-1984-4844-8a33-f6b662351892" id="5dbe8b411167eae8d109f6a968bca37d" version="0">
                            <l7:PolicyDetail folderId="5dbe8b411167eae8d109f6a968bca968" guid="63da1d1c-1984-4844-8a33-f6b662351892" id="5dbe8b411167eae8d109f6a968bca37d" version="0">
<l7:Name>IFTTT API Access Control</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Used at endpoints found in IFTTT APIs"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="'Require SSL' is turned of for ease of development"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CustomizeErrorResponse&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Default error message"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Content stringValue="${error.msg}"/&gt;
            &lt;L7p:ContentType stringValue="${content-type}"/&gt;
            &lt;L7p:ExtraHeaders nameValuePairArray="included"&gt;
                &lt;L7p:item nameValuePair="included"&gt;
                    &lt;L7p:Key stringValue="Pragma"/&gt;
                    &lt;L7p:Value stringValue="no-cache"/&gt;
                &lt;/L7p:item&gt;
                &lt;L7p:item nameValuePair="included"&gt;
                    &lt;L7p:Key stringValue="Cache-Control"/&gt;
                    &lt;L7p:Value stringValue="no-store"/&gt;
                &lt;/L7p:item&gt;
                &lt;L7p:item nameValuePair="included"&gt;
                    &lt;L7p:Key stringValue="x-ca-err"/&gt;
                    &lt;L7p:Value stringValue="${error.code}"/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:ExtraHeaders&gt;
            &lt;L7p:HttpStatus stringValue="${status}"/&gt;
        &lt;/L7p:CustomizeErrorResponse&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                &lt;L7p:VariableToSet stringValue="status"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="YXBwbGljYXRpb24vanNvbg=="/&gt;
                &lt;L7p:VariableToSet stringValue="content-type"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="eyJlcnJvciI6IklGVFRUIHRlc3Qgc2V0dXAiLCAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgSUZUVFQgdGVzdCBldHVwIEFQSSBmYWlsZWQgZm9yIHVua25vd24gcmVhc29ucyJ9"/&gt;
                &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Initialize variables used with 'Custom Error Response'"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Require plain SSL, no client authentication"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="47f768f4-b478-472b-a1ee-10f4b6e76f99"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Require SSL (with Client Certificate)"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="apiPrefix"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="requireClientCert"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK HTTP Method Validation</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd946</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.560Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="6aa2d277-b510-44e2-88ef-31ff01840c28" id="e001cfd0c1c1ffaa18e187b5e72fd946" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fd08e" guid="6aa2d277-b510-44e2-88ef-31ff01840c28" id="e001cfd0c1c1ffaa18e187b5e72fd946" version="0">
<l7:Name>OTK HTTP Method Validation</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="MjAw"/&gt;
            &lt;L7p:VariableToSet stringValue="status"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHttZXRob2R9"/&gt;
            &lt;L7p:VariableToSet stringValue="http_method_allowed"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAubWV0aG9kfQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="http_method_used"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:Split&gt;
            &lt;L7p:IgnoreEmptyValues booleanValue="true"/&gt;
            &lt;L7p:InputVariable stringValue="method"/&gt;
            &lt;L7p:OutputVariable stringValue="method"/&gt;
            &lt;L7p:SplitPattern stringValue="|"/&gt;
            &lt;L7p:SplitPatternRegEx booleanValue="false"/&gt;
        &lt;/L7p:Split&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:Expression1 stringValue="${method}"/&gt;
                &lt;L7p:Expression2 stringValue="${request.http.method}"/&gt;
                &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:RightValue stringValue="${request.http.method}"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NDA1"/&gt;
                    &lt;L7p:VariableToSet stringValue="status"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="ew0KICAgICAgICAgICAgICAgICJlcnJvciI6ImludmFsaWRfbWV0aG9kIiwNCiAgICAgICAgICAgICAgICAiZXJyb3JfZGVzY3JpcHRpb24iOiIke3JlcXVlc3QuaHR0cC5tZXRob2R9IG5vdCBwZXJtaXR0ZWQiDQogICAgICAgICAgICAgICAgfQ="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04"/&gt;
                    &lt;L7p:VariableToSet stringValue="content-type"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="ALLOW"/&gt;
                    &lt;L7p:HeaderValue stringValue="${method}"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:FalseAssertion/&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK HTTP Method Validation</l7:Name>
                    <l7:Id>3f6b5c92ca2ac3665bc7d8780bc4d876</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.560Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="3f6b5c92ca2ac3665bc7d8780bc4d876" version="1">
                            <l7:Name>OTK HTTP Method Validation</l7:Name>
                            <l7:Guid>b8822449-71ff-455b-8f10-39122e6c549b</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd946" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>method</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Valid HTTP Method (...|...)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.msg</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>http_method_allowed</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>http_method_used</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>status</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Validates the used HTTP method.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Access_Control</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_method">
    <l7:StringValue>A pipe separated list of accepted http methods</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>validate.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>6aa2d277-b510-44e2-88ef-31ff01840c28</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>#OTK OVP Configuration</l7:Name>
                    <l7:Id>24e6fd7c5b6fb3a96690246c8ac492ec</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.561Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="a4448be1-9b0e-417f-b498-8a268cadf8a5" id="24e6fd7c5b6fb3a96690246c8ac492ec" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d16914781" guid="a4448be1-9b0e-417f-b498-8a268cadf8a5" id="24e6fd7c5b6fb3a96690246c8ac492ec" version="0">
<l7:Name>#OTK OVP Configuration</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Target Configuration Policy: &amp;quot;OTK OVP                                 Configuration&amp;quot;"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Set custom values for Context Variables below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Add any new Context Variables or extensions below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// false will issue new refresh tokens, true will reuse old ones"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="reuse_refresh_token"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK OVP Configuration</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd82d</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.562Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="c6bf9e90-5ea0-4650-91f9-7c2a8291902f" id="e001cfd0c1c1ffaa18e187b5e72fd82d" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fc858" guid="c6bf9e90-5ea0-4650-91f9-7c2a8291902f" id="e001cfd0c1c1ffaa18e187b5e72fd82d" version="0">
<l7:Name>OTK OVP Configuration</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Required changes can be implemented in policies in the 'Customizations' folder "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === The policies within that folder will have the same name as this policy but "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === either prefixed with '#' or suffixed with 'Extensions'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Prefixed policies can be used to overwrite variables of this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Suffixed policies can be used to extend functionality"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you find you cannot add your customizations using the policies in the 'Customizations' folder"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This endpoint should point to the server that holds all OAuth validation endpoints."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Usually those endpoints are found within the folder 'SecureZone - OVP'."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0Mw=="/&gt;
            &lt;L7p:VariableToSet stringValue="host_oauth_ovp_server"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// false will issue new refresh tokens, true will reuse old ones"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="reuse_refresh_token"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// false will issue new expiration dates, true will reuse original expiration"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="reuse_refresh_expiration"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="a4448be1-9b0e-417f-b498-8a268cadf8a5"/&gt;
        &lt;/L7p:Include&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK OVP Configuration</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fda9a</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.562Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fda9a" version="1">
                            <l7:Name>OTK OVP Configuration</l7:Name>
                            <l7:Guid>7e2b4f64-e226-4a03-980a-c4603163acc0</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd82d" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>host_oauth_ovp_server</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>reuse_refresh_expiration</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>reuse_refresh_token</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Exports the server location that implements the OVP (OAuth Validation Point) endpoints.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Storage_Access</l7:StringValue>
</l7:Property>
<l7:Property key="doc_usage">
    <l7:StringValue>Internal</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>ServerRegistry.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>c6bf9e90-5ea0-4650-91f9-7c2a8291902f</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Access Token Retrieval</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd86a</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.572Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="14f8a882-e66c-4a70-88d8-0128e2922744" id="e001cfd0c1c1ffaa18e187b5e72fd86a" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcfce" guid="14f8a882-e66c-4a70-88d8-0128e2922744" id="e001cfd0c1c1ffaa18e187b5e72fd86a" version="0">
<l7:Name>OTK Access Token Retrieval</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Allow the auth-header OR parameters but NOT both if both are used"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="auth_scheme"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="access_token"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Initialising access_token_type to uuid"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="dXVpZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="access_token_type"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${allow_header}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${auth_param_token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${given_access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="schema_token"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="auth_header"/&gt;
                    &lt;L7p:Regex stringValue="^\b([Bb][Ee][Aa][Rr][Ee][Rr]|MAC)\b\s([^,\s]*)"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtzY2hlbWFfdG9rZW5bMV19"/&gt;
                    &lt;L7p:VariableToSet stringValue="auth_scheme"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtzY2hlbWFfdG9rZW5bMl19"/&gt;
                    &lt;L7p:VariableToSet stringValue="access_token"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${auth_scheme}"/&gt;
                            &lt;L7p:Expression2 stringValue="MAC"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="MAC"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:CaptureVar stringValue="id"/&gt;
                            &lt;L7p:FindAll booleanValue="true"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="access_token"/&gt;
                            &lt;L7p:Regex stringValue="id\s*=&amp;quot;\s*([^&amp;quot;]*)&amp;quot;"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${id[1]}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtpZFsxXX0="/&gt;
                            &lt;L7p:VariableToSet stringValue="access_token"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Get MAC access_token if MAC profile is used"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="LOCATE IN HEADER"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${allow_query}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${auth_header}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${auth_param_token}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${given_access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="QmVhcmVy"/&gt;
                    &lt;L7p:VariableToSet stringValue="auth_scheme"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHthdXRoX3BhcmFtX3Rva2VufQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="access_token"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="LOCATE AS PARAMETER"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${given_access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${auth_header}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${auth_param_token}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="QmVhcmVy"/&gt;
                    &lt;L7p:VariableToSet stringValue="auth_scheme"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnaXZlbl9hY2Nlc3NfdG9rZW59"/&gt;
                    &lt;L7p:VariableToSet stringValue="access_token"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="USE GIVEN PARAMETER"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="find"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue=" "/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="CONTAINS"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="CONTAINS"/&gt;
                            &lt;L7p:RightValue stringValue=" "/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="valid"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="OTky"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="validation"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="check that access_token is not empty and has no space ( ' ') character"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// UUID, no '.' found"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                &lt;L7p:Expression2 stringValue="."/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="CONTAINS"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="CONTAINS"/&gt;
                        &lt;L7p:RightValue stringValue="."/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// set the access_token_type to 'jwt'"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="and0"/&gt;
                &lt;L7p:VariableToSet stringValue="access_token_type"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Check if token is a JWT or UUID"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Access Token Retrieval</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fdaa0</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.572Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fdaa0" version="1">
                            <l7:Name>OTK Access Token Retrieval</l7:Name>
                            <l7:Guid>dc16f9da-c833-4b0a-8525-8a41ce420795</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd86a" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>allow_header</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Allow Authorization Header</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>allow_query</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Allow Parameter</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>auth_header</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Authentication Header</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>auth_param_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Parameter</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>given_access_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Access Token (Bearer only)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>access_token</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>access_token_type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>auth_header</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>auth_scheme</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Finds the OAuth 2.0 access_token within the http request header, as http request parameter or uses the given one. If will fail if a token is found at multiple locations.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>OAuth_Validation</l7:StringValue>
</l7:Property>
<l7:Property key="doc_usage">
    <l7:StringValue>Internal</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>oauth.png</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>14f8a882-e66c-4a70-88d8-0128e2922744</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>#OTK Storage Configuration</l7:Name>
                    <l7:Id>24e6fd7c5b6fb3a96690246c8ac49304</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.573Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="cfa7239a-60e4-483a-9d45-c364f2fb673d" id="24e6fd7c5b6fb3a96690246c8ac49304" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d16914781" guid="cfa7239a-60e4-483a-9d45-c364f2fb673d" id="24e6fd7c5b6fb3a96690246c8ac49304" version="0">
<l7:Name>#OTK Storage Configuration</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Target Configuration Policy: &amp;quot;OTK Storage                                 Configuration&amp;quot;"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Set custom values for Context Variables below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Add any new Context Variables or extensions below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="Mg=="/&gt;
            &lt;L7p:VariableToSet stringValue="max_oauth_token_count"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Storage Configuration</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fc9d0</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.575Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="71039e77-2081-40df-a892-50097f1c18de" id="e001cfd0c1c1ffaa18e187b5e72fc9d0" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fc858" guid="71039e77-2081-40df-a892-50097f1c18de" id="e001cfd0c1c1ffaa18e187b5e72fc9d0" version="0">
<l7:Name>OTK Storage Configuration</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Required changes can be implemented in policies in the 'Customizations' folder "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === The policies within that folder will have the same name as this policy but "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === either prefixed with '#' or suffixed with 'Extensions'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Prefixed policies can be used to overwrite variables of this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Suffixed policies can be used to extend functionality"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you find you cannot add your customizations using the policies in the 'Customizations' folder"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="These endpoints should point to the appropriate servers."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="If the URL points to 'localhost' or '127.0.0.1' a routing assertion is not involved."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Token DB"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="This will usually be at localhost. Configure a hostname if /oauth/tokenstore is used on a remote gateway"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0Mw=="/&gt;
            &lt;L7p:VariableToSet stringValue="host_oauth_tokenstore_server"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Client DB"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="This will usually be at localhost. Configure a hostname if /oauth/clientstore is used on a remote gateway"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0Mw=="/&gt;
            &lt;L7p:VariableToSet stringValue="host_oauth_clientstore_server"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Session DB"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="This will usually be at localhost. Configure a hostname if /oauth/session is used on a remote gateway"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0Mw=="/&gt;
            &lt;L7p:VariableToSet stringValue="host_oauth_session_server"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="NOTE:  If the dbsystem is Cassandra separate_schemas should be set to true"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Databasesystem"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="'mysql', 'cassandra', or 'oracle'"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="bXlzcWw="/&gt;
            &lt;L7p:VariableToSet stringValue="dbsystem"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Set to true if you are using mysql/oracle and separate schemas for otk and mag"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="separate_schemas"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Max number of allowed Tokens per resource_owner and client (app)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Only positive integers accepted"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="MQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="max_oauth_token_count"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Behaviour when max Token count has been reached"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Options for max_oauth_token_behaviour are: 'error' or 'cycle'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="Y3ljbGU="/&gt;
            &lt;L7p:VariableToSet stringValue="max_oauth_token_behaviour"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="cfa7239a-60e4-483a-9d45-c364f2fb673d"/&gt;
        &lt;/L7p:Include&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Storage Configuration</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fcac5</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.575Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fcac5" version="1">
                            <l7:Name>OTK Storage Configuration</l7:Name>
                            <l7:Guid>db047e91-52db-4176-a3eb-a43aa0c2c67c</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fc9d0" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom input values</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>dbsystem</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>host_oauth_clientstore_server</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>host_oauth_session_server</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>host_oauth_tokenstore_server</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>max_oauth_token_behaviour</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>max_oauth_token_count</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>separate_schemas</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Exports variables that contain OTK configurations that are related to the persistence layer</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Configuration</l7:StringValue>
</l7:Property>
<l7:Property key="doc_require_customization">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="doc_usage">
    <l7:StringValue>Internal</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>ServerRegistry.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>71039e77-2081-40df-a892-50097f1c18de</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                
                <l7:Item>
                    <l7:Name>OTK Token DB GET</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fcc49</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.609Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="85fc86ff-4cac-4086-afa1-3673d74fe895" id="e001cfd0c1c1ffaa18e187b5e72fcc49" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcbcd" guid="85fc86ff-4cac-4086-afa1-3673d74fe895" id="e001cfd0c1c1ffaa18e187b5e72fcc49" version="0">
<l7:Name>OTK Token DB GET</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="PHZhbHVlcz4NCjwvdmFsdWVzPg=="/&gt;
            &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:VariableToSet stringValue="resp"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="returnOffset"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${tokentype}"/&gt;
                    &lt;L7p:Expression2 stringValue="token"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="token"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${queryOffset}"/&gt;
                            &lt;L7p:Expression2 stringValue="0"/&gt;
                            &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                            &lt;L7p:DataType variableDataType="int"/&gt;
                            &lt;L7p:VariableToSet stringValue="offset"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${queryOffset}"/&gt;
                            &lt;L7p:Expression2 stringValue="0"/&gt;
                            &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                            &lt;L7p:Operator operator="LT"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="LT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                            &lt;L7p:DataType variableDataType="int"/&gt;
                            &lt;L7p:VariableToSet stringValue="offset"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtxdWVyeU9mZnNldH0="/&gt;
                        &lt;L7p:DataType variableDataType="int"/&gt;
                        &lt;L7p:VariableToSet stringValue="offset"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                        &lt;L7p:DataType variableDataType="int"/&gt;
                        &lt;L7p:VariableToSet stringValue="offset"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Offset"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Set the offset for the database query"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="=== Below: SQL-Queries that will always return a single row"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:JdbcQuery&gt;
                            &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                            &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                            &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                            &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                            &lt;L7p:MaxRecords intValue="1000"/&gt;
                            &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token,secret,expiration,rtoken,rexpiration,scope,resource_owner,client_name,client_ident,client_key,status,created,custom
                FROM oauth_token
                WHERE token = ${token}]]&gt;&lt;/L7p:SqlQuery&gt;
                            &lt;L7p:VariablePrefix stringValue="query"/&gt;
                        &lt;/L7p:JdbcQuery&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all access_token values of given token"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${rtoken}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:JdbcQuery&gt;
                            &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                            &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                            &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                            &lt;L7p:MaxRecords intValue="1000"/&gt;
                            &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM oauth_token
                WHERE rtoken = ${rtoken}]]&gt;&lt;/L7p:SqlQuery&gt;
                            &lt;L7p:VariablePrefix stringValue="query"/&gt;
                        &lt;/L7p:JdbcQuery&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all access_token values of given rtoken"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="=== Below: SQL-Queries that will return up to a few rows"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:JdbcQuery&gt;
                            &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                            &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                            &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                            &lt;L7p:MaxRecords intValue="1000"/&gt;
                            &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM oauth_token
                WHERE client_key = ${client_key}
                AND resource_owner = ${resource_owner}]]&gt;&lt;/L7p:SqlQuery&gt;
                            &lt;L7p:VariablePrefix stringValue="query"/&gt;
                        &lt;/L7p:JdbcQuery&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all access_token values of given client - resource_owner"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="=== As of here pagination is required ==="/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="=== Below: SQL-Queries that may return a few thousand rows"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token_status}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="mysql"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT  token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM oauth_token
                WHERE resource_owner like ${resource_owner}
                AND status = ${token_status}
                ORDER BY resource_owner, client_name, created ASC LIMIT 100 OFFSET ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="oracle"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM (
                SELECT /*+ FIRST_ROWS(100) */ oauth_token.*, ROWNUM rnum
                FROM (  SELECT * FROM oauth_token
                WHERE resource_owner like ${resource_owner}
                AND status = ${token_status}
                ORDER BY resource_owner, client_name, created ASC ) oauth_token
                WHERE ROWNUM &lt;= (100+${offset}) )
                WHERE rnum  &gt; ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Check for database system"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all access_token values of given resource_owner and status"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token_status}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="mysql"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT  token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM oauth_token
                WHERE resource_owner like ${resource_owner}
                ORDER BY resource_owner, client_name, created ASC LIMIT 100 OFFSET ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="oracle"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM (
                SELECT /*+ FIRST_ROWS(100) */ oauth_token.*, ROWNUM rnum
                FROM (  SELECT * FROM oauth_token
                WHERE resource_owner like ${resource_owner}
                ORDER BY resource_owner, client_name, created ASC ) oauth_token
                WHERE ROWNUM &lt;= (100+${offset}) )
                WHERE rnum  &gt; ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Check for database system"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all access_token of a given resource_owner"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="mysql"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT  token, secret, expiration,rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM oauth_token
                WHERE client_key = ${client_key}
                ORDER BY client_name, resource_owner, created ASC LIMIT 100 OFFSET ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="oracle"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration,rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM (
                SELECT /*+ FIRST_ROWS(100) */ oauth_token.*, ROWNUM rnum
                FROM (  SELECT * FROM oauth_token
                WHERE client_key = ${client_key}
                ORDER BY client_name, resource_owner, created ASC ) oauth_token
                WHERE ROWNUM &lt;= (100+${offset}) )
                WHERE rnum  &gt; ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Check for database system"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all access_token values of given client"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token_status}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="mysql"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT  token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM oauth_token
                WHERE status = ${token_status}
                ORDER BY client_name, resource_owner, created ASC LIMIT 100 OFFSET ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="oracle"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM (
                SELECT /*+ FIRST_ROWS(100) */ oauth_token.*, ROWNUM rnum
                FROM ( SELECT * FROM oauth_token
                WHERE status = ${token_status}
                ORDER BY client_name, resource_owner, created ASC ) oauth_token
                WHERE ROWNUM &lt;= (100+${offset}) )
                WHERE rnum  &gt; ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Check for database system"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="=== Below: SQL-Query that will return all rows"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${rtoken}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token_status}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="mysql"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="10000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT  token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM oauth_token
                ORDER BY client_name, resource_owner, created ASC LIMIT 100 OFFSET ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MySQL"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="oracle"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:JdbcQuery&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                                    &lt;L7p:GenerateXmlResult booleanValue="true"/&gt;
                                    &lt;L7p:MaxRecords intValue="10000"/&gt;
                                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration, rtoken, rexpiration, scope, resource_owner, client_name, client_ident, client_key, status, created,custom
                FROM (
                SELECT /*+ FIRST_ROWS(100) */ oauth_token.*, ROWNUM rnum
                FROM (  SELECT * FROM oauth_token
                ORDER BY client_name, resource_owner, created ASC ) oauth_token
                WHERE ROWNUM &lt;= (100+${offset}) )
                WHERE rnum  &gt; ${offset}]]&gt;&lt;/L7p:SqlQuery&gt;
                                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                                &lt;/L7p:JdbcQuery&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Oracle"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Check for database system"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all access_token values "/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="create the jdbc query"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtxdWVyeS54bWxSZXN1bHR9"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="input"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathRowCount"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="input"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="string(count(//L7j:row) +string($offset))"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="L7j"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2012/08/jdbc-query-result"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt4cGF0aFJvd0NvdW50LnJlc3VsdH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="returnOffset"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${query.queryresult.count}"/&gt;
                            &lt;L7p:Expression2 stringValue="0"/&gt;
                            &lt;L7p:Operator operator="GT"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="PHZhbHVlcz4NCiAgICA8dG9rZW5zPjx0b2tlbj48IVtDREFUQVske3F1ZXJ5LnRva2VufF1dPjwvdG9rZW4+PHRva2VuPjwhW0NEQVRBW31dXT48L3Rva2VuPjwvdG9rZW5zPg0KICAgIDxzZWNyZXRzPjxzZWNyZXQ+PCFbQ0RBVEFbJHtxdWVyeS5zZWNyZXR8XV0+PC9zZWNyZXQ+PHNlY3JldD48IVtDREFUQVt9XV0+PC9zZWNyZXQ+PC9zZWNyZXRzPg0KICAgIDxleHBpcmF0aW9ucz48ZXhwaXJhdGlvbj48IVtDREFUQVske3F1ZXJ5LmV4cGlyYXRpb258XV0+PC9leHBpcmF0aW9uPjxleHBpcmF0aW9uPjwhW0NEQVRBW31dXT48L2V4cGlyYXRpb24+PC9leHBpcmF0aW9ucz4NCiAgICA8cnRva2Vucz48cnRva2VuPjwhW0NEQVRBWyR7cXVlcnkucnRva2VufF1dPjwvcnRva2VuPjxydG9rZW4+PCFbQ0RBVEFbfV1dPjwvcnRva2VuPjwvcnRva2Vucz4NCiAgICA8cmV4cGlyYXRpb25zPjxyZXhwaXJhdGlvbj48IVtDREFUQVske3F1ZXJ5LnJleHBpcmF0aW9ufF1dPjwvcmV4cGlyYXRpb24+PHJleHBpcmF0aW9uPjwhW0NEQVRBW31dXT48L3JleHBpcmF0aW9uPjwvcmV4cGlyYXRpb25zPg0KICAgIDxzY29wZXM+PHNjb3BlPjwhW0NEQVRBWyR7cXVlcnkuc2NvcGV8XV0+PC9zY29wZT48c2NvcGU+PCFbQ0RBVEFbfV1dPjwvc2NvcGU+PC9zY29wZXM+DQogICAgPHJlc291cmNlX293bmVycz48cmVzb3VyY2Vfb3duZXI+PCFbQ0RBVEFbJHtxdWVyeS5yZXNvdXJjZV9vd25lcnxdXT48L3Jlc291cmNlX293bmVyPjxyZXNvdXJjZV9vd25lcj48IVtDREFUQVt9XV0+PC9yZXNvdXJjZV9vd25lcj48L3Jlc291cmNlX293bmVycz4NCiAgICA8Y2xpZW50cz48Y2xpZW50X2tleT48IVtDREFUQVske3F1ZXJ5LmNsaWVudF9rZXl8XV0+PC9jbGllbnRfa2V5PjxjbGllbnRfa2V5PjwhW0NEQVRBW31dXT48L2NsaWVudF9rZXk+PC9jbGllbnRzPg0KICAgIDxjbGllbnROYW1lcz48Y2xpZW50X25hbWU+PCFbQ0RBVEFbJHtxdWVyeS5jbGllbnRfbmFtZXxdXT48L2NsaWVudF9uYW1lPjxjbGllbnRfbmFtZT48IVtDREFUQVt9XV0+PC9jbGllbnRfbmFtZT48L2NsaWVudE5hbWVzPg0KICAgIDxzdGF0dXVzPjxzdGF0dXM+PCFbQ0RBVEFbJHtxdWVyeS5zdGF0dXN8XV0+PC9zdGF0dXM+PHN0YXR1cz48IVtDREFUQVt9XV0+PC9zdGF0dXM+PC9zdGF0dXVzPg0KICAgIDxjcmVhdGVkcz48Y3JlYXRlZD48IVtDREFUQVske3F1ZXJ5LmNyZWF0ZWR8XV0+PC9jcmVhdGVkPjxjcmVhdGVkPjwhW0NEQVRBW31dXT48L2NyZWF0ZWQ+PC9jcmVhdGVkcz4NCiAgICA8Y3VzdG9tcz48Y3VzdG9tPjwhW0NEQVRBWyR7cXVlcnkuY3VzdG9tfF1dPjwvY3VzdG9tPjxjdXN0b20+PCFbQ0RBVEFbfV1dPjwvY3VzdG9tPjwvY3VzdG9tcz4NCjwvdmFsdWVzPg=="/&gt;
                            &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="resp"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="transform jdbc result to xml"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Handle 'get'"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${tokentype}"/&gt;
                    &lt;L7p:Expression2 stringValue="temporary"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="temporary"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${verifier}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:JdbcQuery&gt;
                            &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                            &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                            &lt;L7p:MaxRecords intValue="1000"/&gt;
                            &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration, scope, resource_owner, client_name, client_key, created, verifier, callback,custom
                FROM oauth_initiate
                WHERE token = ${token}]]&gt;&lt;/L7p:SqlQuery&gt;
                            &lt;L7p:VariablePrefix stringValue="query"/&gt;
                        &lt;/L7p:JdbcQuery&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all temporary token values of given token"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${verifier}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:JdbcQuery&gt;
                            &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                            &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                            &lt;L7p:MaxRecords intValue="1000"/&gt;
                            &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration,scope, resource_owner, client_name, client_key, created, verifier, callback,custom
                FROM oauth_initiate
                WHERE token = ${token}
                AND verifier = ${verifier}]]&gt;&lt;/L7p:SqlQuery&gt;
                            &lt;L7p:VariablePrefix stringValue="query"/&gt;
                        &lt;/L7p:JdbcQuery&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all temporary token values of given token and verifier"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:JdbcQuery&gt;
                            &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                            &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                            &lt;L7p:MaxRecords intValue="10000"/&gt;
                            &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration,scope, resource_owner, client_name, client_key, created, verifier, callback,custom
                FROM oauth_initiate
                WHERE client_key = ${client_key}
                AND resource_owner = ${resource_owner}]]&gt;&lt;/L7p:SqlQuery&gt;
                            &lt;L7p:VariablePrefix stringValue="query"/&gt;
                        &lt;/L7p:JdbcQuery&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all temporary token values of given client, resource_owner"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:JdbcQuery&gt;
                            &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                            &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                            &lt;L7p:MaxRecords intValue="10000"/&gt;
                            &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration, scope, resource_owner, client_name, client_key, created, verifier, callback,custom
                FROM oauth_initiate
                WHERE resource_owner = ${resource_owner}]]&gt;&lt;/L7p:SqlQuery&gt;
                            &lt;L7p:VariablePrefix stringValue="query"/&gt;
                        &lt;/L7p:JdbcQuery&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all temporary token values of given resource_owner"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue="getTemp"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="getTemp"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:JdbcQuery&gt;
                            &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                            &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                            &lt;L7p:MaxRecords intValue="10000"/&gt;
                            &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, secret, expiration,scope, resource_owner, client_name, client_key, created, verifier, callback,custom
                FROM oauth_initiate
                WHERE client_key = ${client_key}]]&gt;&lt;/L7p:SqlQuery&gt;
                            &lt;L7p:VariablePrefix stringValue="query"/&gt;
                        &lt;/L7p:JdbcQuery&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all temporary token values of given client"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="create the jdbc query"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${query.queryresult.count}"/&gt;
                            &lt;L7p:Expression2 stringValue="0"/&gt;
                            &lt;L7p:Operator operator="GT"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="PHZhbHVlcz4NCiAgICA8dG9rZW5zPjx0b2tlbj48IVtDREFUQVske3F1ZXJ5LnRva2VufF1dPjwvdG9rZW4+PHRva2VuPjwhW0NEQVRBW31dXT48L3Rva2VuPjwvdG9rZW5zPg0KICAgIDxzZWNyZXRzPjxzZWNyZXQ+PCFbQ0RBVEFbJHtxdWVyeS5zZWNyZXR8XV0+PC9zZWNyZXQ+PHNlY3JldD48IVtDREFUQVt9XV0+PC9zZWNyZXQ+PC9zZWNyZXRzPg0KICAgIDxleHBpcmF0aW9ucz48ZXhwaXJhdGlvbj48IVtDREFUQVske3F1ZXJ5LmV4cGlyYXRpb258XV0+PC9leHBpcmF0aW9uPjxleHBpcmF0aW9uPjwhW0NEQVRBW31dXT48L2V4cGlyYXRpb24+PC9leHBpcmF0aW9ucz4NCiAgICA8c2NvcGVzPjxzY29wZT48IVtDREFUQVske3F1ZXJ5LnNjb3BlfF1dPjwvc2NvcGU+PHNjb3BlPjwhW0NEQVRBW31dXT48L3Njb3BlPjwvc2NvcGVzPg0KICAgIDxyZXNvdXJjZV9vd25lcnM+PHJlc291cmNlX293bmVyPjwhW0NEQVRBWyR7cXVlcnkucmVzb3VyY2Vfb3duZXJ8XV0+PC9yZXNvdXJjZV9vd25lcj48cmVzb3VyY2Vfb3duZXI+PCFbQ0RBVEFbfV1dPjwvcmVzb3VyY2Vfb3duZXI+PC9yZXNvdXJjZV9vd25lcnM+DQogICAgPGNsaWVudHM+PGNsaWVudF9rZXk+PCFbQ0RBVEFbJHtxdWVyeS5jbGllbnRfa2V5fF1dPjwvY2xpZW50X2tleT48Y2xpZW50X2tleT48IVtDREFUQVt9XV0+PC9jbGllbnRfa2V5PjwvY2xpZW50cz4NCiAgICA8Y2xpZW50TmFtZXM+PGNsaWVudF9uYW1lPjwhW0NEQVRBWyR7cXVlcnkuY2xpZW50X25hbWV8XV0+PC9jbGllbnRfbmFtZT48Y2xpZW50X25hbWU+PCFbQ0RBVEFbfV1dPjwvY2xpZW50X25hbWU+PC9jbGllbnROYW1lcz4NCiAgICA8Y3JlYXRlZHM+PGNyZWF0ZWQ+PCFbQ0RBVEFbJHtxdWVyeS5jcmVhdGVkfF1dPjwvY3JlYXRlZD48Y3JlYXRlZD48IVtDREFUQVt9XV0+PC9jcmVhdGVkPjwvY3JlYXRlZHM+DQogICAgPGNhbGxiYWNrcz48Y2FsbGJhY2s+PCFbQ0RBVEFbJHtxdWVyeS5jYWxsYmFja3xdXT48L2NhbGxiYWNrPjxjYWxsYmFjaz48IVtDREFUQVt9XV0+PC9jYWxsYmFjaz48L2NhbGxiYWNrcz4NCiAgICA8dmVyaWZpZXJzPjx2ZXJpZmllcj48IVtDREFUQVske3F1ZXJ5LnZlcmlmaWVyfF1dPjwvdmVyaWZpZXI+PHZlcmlmaWVyPjwhW0NEQVRBW31dXT48L3ZlcmlmaWVyPjwvdmVyaWZpZXJzPg0KICAgIDxjdXN0b21zPjxjdXN0b20+PCFbQ0RBVEFbJHtxdWVyeS5jdXN0b218XV0+PC9jdXN0b20+PGN1c3RvbT48IVtDREFUQVt9XV0+PC9jdXN0b20+PC9jdXN0b21zPg0KPC92YWx1ZXM+"/&gt;
                            &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="resp"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="transform jdbc result to xml"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Handle 'getTemp'"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:XslTransformation&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Generate xml with one root and one field for each token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Direction intValue="-1"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="resp"/&gt;
            &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                xmlns:xls="http://www.w3.org/1999/XSL/Transform"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
                &lt;xsl:output encoding="UTF-8" indent="yes" method="xml"/&gt;
                &lt;xsl:param name="returnOffset"/&gt;
                &lt;xsl:template match="/values"&gt;
                &lt;xsl:element name="{name()}"
                xmlns="http://ns.l7tech.com/2012/11/otk-tokenstore"&gt;
                &lt;xsl:attribute name="offset"&gt;&lt;xsl:value-of select="$returnOffset"/&gt;&lt;/xsl:attribute&gt;
                &lt;xsl:for-each select="descendant::node()[node()][1]/child::node()[node()]"&gt;
                &lt;xsl:variable name="index"&gt;
                &lt;xsl:value-of select="position()"/&gt;
                &lt;/xsl:variable&gt;
                &lt;value index="{$index}"
                xmlns="http://ns.l7tech.com/2012/11/otk-tokenstore"&gt;
                &lt;xsl:element name="{name()}"
                xmlns="http://ns.l7tech.com/2012/11/otk-tokenstore"&gt;
                &lt;xsl:value-of select="text()"/&gt;
                &lt;/xsl:element&gt;
                &lt;xsl:for-each select="parent::node()/following-sibling::node()[node()]"&gt;
                &lt;xsl:for-each select="*[position()=$index]"&gt;
                &lt;xsl:copy-of select="self::node()"/&gt;
                &lt;/xsl:for-each&gt;
                &lt;/xsl:for-each&gt;
                &lt;/value&gt;
                &lt;/xsl:for-each&gt;
                &lt;/xsl:element&gt;
                &lt;/xsl:template&gt;
                &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
            &lt;/L7p:ResourceInfo&gt;
            &lt;L7p:Target target="OTHER"/&gt;
            &lt;L7p:TransformName stringValue=""/&gt;
            &lt;L7p:XsltVersion stringValue="1.0"/&gt;
        &lt;/L7p:XslTransformation&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${format}"/&gt;
                    &lt;L7p:Expression2 stringValue="json"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="json"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:JsonTransformation&gt;
                    &lt;L7p:DestinationMessageTarget MessageTarget="included"&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="resp"/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                        &lt;L7p:TargetModifiedByGateway booleanValue="true"/&gt;
                    &lt;/L7p:DestinationMessageTarget&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="resp"/&gt;
                    &lt;L7p:PrettyPrint booleanValue="true"/&gt;
                    &lt;L7p:RootTagString stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:JsonTransformation&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLm1haW5wYXJ0fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="resp.mainpart"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="resp.mainpart"/&gt;
                    &lt;L7p:Regex stringValue="&amp;quot;xmlns&amp;quot;:[\s]?&amp;quot;http://ns.l7tech.com/2012/11/otk-tokenstore&amp;quot;,\n"/&gt;
                    &lt;L7p:RegexName stringValue="Remove Namespace"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLm1haW5wYXJ0fQ=="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="resp"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04"/&gt;
                    &lt;L7p:VariableToSet stringValue="content-type"/&gt;
                &lt;/L7p:SetVariable&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="dGV4dC94bWw7Y2hhcnNldD1VVEYtOA=="/&gt;
                &lt;L7p:VariableToSet stringValue="content-type"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="transform to json if applicable"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token DB GET</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fce1e</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.609Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fce1e" version="1">
                            <l7:Name>OTK Token DB GET</l7:Name>
                            <l7:Guid>af628087-2a37-45d7-b7c6-681c3d9e1526</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fcc49" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>rtoken</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>resource_owner</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>client_key</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>token_status</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>verifier</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>7</l7:Ordinal>
    <l7:ArgumentName>tokentype</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>8</l7:Ordinal>
    <l7:ArgumentName>format</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>9</l7:Ordinal>
    <l7:ArgumentName>queryOffset</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>10</l7:Ordinal>
    <l7:ArgumentName>dbsystem</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>11</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>resp</l7:ResultName>
    <l7:ResultType>message</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Returns values from the token database. 'tokentype' can either be 'token' or 'temporary'.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Storage_Access</l7:StringValue>
</l7:Property>
<l7:Property key="doc_usage">
    <l7:StringValue>Internal</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>Save16.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>85fc86ff-4cac-4086-afa1-3673d74fe895</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Get (token)</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd1ab</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.618Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="bae27987-97aa-4029-bc62-778be9fa31b3" id="e001cfd0c1c1ffaa18e187b5e72fd1ab" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcfce" guid="bae27987-97aa-4029-bc62-778be9fa31b3" id="e001cfd0c1c1ffaa18e187b5e72fd1ab" version="0">
<l7:Name>OTK Token Get (token)</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="db047e91-52db-4176-a3eb-a43aa0c2c67c"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Storage Configuration"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="custom"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="error code"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="overwritten in case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="DB location"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Set the location to access the database"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="eG1s"/&gt;
            &lt;L7p:VariableToSet stringValue="format"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="dG9rZW4="/&gt;
            &lt;L7p:VariableToSet stringValue="tokentype"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${return_json}"/&gt;
                &lt;L7p:Expression2 stringValue="true"/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:RightValue stringValue="true"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="anNvbg=="/&gt;
                &lt;L7p:VariableToSet stringValue="format"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Setting return format"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${host_oauth_tokenstore_server}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item regex="included"&gt;
                            &lt;L7p:Pattern stringValue="http[s]?://(localhost|127[.]0[.]0[.]1).+"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="DB location"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Set the location to access the database"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                            &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="cassandra"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="af628087-2a37-45d7-b7c6-681c3d9e1526"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token DB GET"/&gt;
                            &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                        &lt;/L7p:Encapsulated&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                            &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="cassandra"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="be3096c8-b46f-40f0-a7c7-903009d3e78a"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token NoSQL GET"/&gt;
                            &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                        &lt;/L7p:Encapsulated&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="dbsystem"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="check the dbsystem for SQL or NoSQL"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="local"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${isLocal}"/&gt;
                    &lt;L7p:Expression2 stringValue="false"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="token"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="token"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="rtoken"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="rtoken"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="resource_owner"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="resource_owner"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="token_status"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="token_status"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="queryOffset"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="queryOffset"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:ContentType stringValue="text/plain; charset=UTF-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="emptyMessage"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="no-fail"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="always succeed"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="GET"/&gt;
                    &lt;L7p:PassThroughSoapFaults booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_tokenstore_server}/oauth/tokenstore/get?token=${token}&amp;amp;rtoken=${rtoken}&amp;amp;client_key=${client_key}&amp;amp;resource_owner=${resource_owner}&amp;amp;status=${token_status}&amp;amp;format=${format}&amp;amp;offset=${queryOffset}"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="emptyMessage"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLngtY2EtZXJyfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${httpRouting.reasonCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="500"/&gt;
                        &lt;L7p:Operator operator="LT"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="LT"/&gt;
                                &lt;L7p:RightValue stringValue="500"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="routing failed!"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set error code to 000"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="routing errors"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture the last 3 digits"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="error.code"/&gt;
                            &lt;L7p:Regex stringValue="(\d{0,16})(\d{3})$"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="$2"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="error.code"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLmNvbnRlbnQtdHlwZX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="content-type"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="remote"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="database"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Get (token)</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd20f</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.618Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fd20f" version="1">
                            <l7:Name>OTK Token Get (token)</l7:Name>
                            <l7:Guid>19902efe-b202-49da-a5d9-619c57ee842a</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd1ab" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Access Token</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>rtoken</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Refresh Token</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>client_key</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Client ID</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>resource_owner</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Resource Owner</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>token_status</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Token Status</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>return_json</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Return as JSON?</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>7</l7:Ordinal>
    <l7:ArgumentName>queryOffset</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Offset in DB query</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>8</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>dbsystem</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>resp</l7:ResultName>
    <l7:ResultType>message</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Retrieves long living tokens from the token database.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Storage_Delegate</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>up-button.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>bae27987-97aa-4029-bc62-778be9fa31b3</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>#OTK Validate JWT OAuth Token</l7:Name>
                    <l7:Id>d2fa9e7e0db9f0c56c13fe57e46309e1</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.620Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="03d4ea7a-8557-4002-80b2-925e52eb4e26" id="d2fa9e7e0db9f0c56c13fe57e46309e1" version="3">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d16914781" guid="03d4ea7a-8557-4002-80b2-925e52eb4e26" id="d2fa9e7e0db9f0c56c13fe57e46309e1" version="3">
<l7:Name>#OTK Validate JWT OAuth Token</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>3</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Policy Fragment: #OTK Validate JWT OAuth Token"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Private key to decode JWT can be modified in the below assertion."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:DecodeJsonWebToken&gt;
            &lt;L7p:FailUnverifiedSignature booleanValue="true"/&gt;
            &lt;L7p:KeyAlias stringValue="SSL"/&gt;
            &lt;L7p:KeyGoid goidValue="00000000000000000000000000000002"/&gt;
            &lt;L7p:SourcePayload stringValue="${access_token}"/&gt;
            &lt;L7p:TargetVariablePrefix stringValue="jwt"/&gt;
            &lt;L7p:ValidationType stringValue="Using Recipient Key From List"/&gt;
        &lt;/L7p:DecodeJsonWebToken&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="convert payload to json, to extract values in the next steps"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="JHtqd3QucGF5bG9hZH0="/&gt;
            &lt;L7p:ContentType stringValue="application/json; charset=utf-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:VariableToSet stringValue="payload_json"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:EvaluateJsonPathExpressionV2&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// extract JTI which is also the access_token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Expression stringValue="jti"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="payload_json"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
            &lt;L7p:VariablePrefix stringValue="jti"/&gt;
        &lt;/L7p:EvaluateJsonPathExpressionV2&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="By default, the database will be queried for JWT validation (using 'JTI')"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Enable the following disabled assertions to not query the database when validating JWT"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:EvaluateJsonPathExpressionV2&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// extract hte issuer (iss)"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:Expression stringValue="iss"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="payload_json"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
            &lt;L7p:VariablePrefix stringValue="iss"/&gt;
        &lt;/L7p:EvaluateJsonPathExpressionV2&gt;
        &lt;L7p:EvaluateJsonPathExpressionV2&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// extract the audience (aud)"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:Expression stringValue="aud"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="payload_json"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
            &lt;L7p:VariablePrefix stringValue="aud"/&gt;
        &lt;/L7p:EvaluateJsonPathExpressionV2&gt;
        &lt;L7p:EvaluateJsonPathExpressionV2&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// extract expiration (exp)"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:Expression stringValue="exp"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="payload_json"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
            &lt;L7p:VariablePrefix stringValue="exp"/&gt;
        &lt;/L7p:EvaluateJsonPathExpressionV2&gt;
        &lt;L7p:EvaluateJsonPathExpressionV2&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// extract the SCOPE that was granted for this token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:Expression stringValue="token_details.scope"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="payload_json"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
            &lt;L7p:VariablePrefix stringValue="scope"/&gt;
        &lt;/L7p:EvaluateJsonPathExpressionV2&gt;
        &lt;wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required"&gt;
            &lt;L7p:EvaluateJsonPathExpressionV2&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// extract the resource owner if it exists"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Expression stringValue="token_details.preferred_username"/&gt;
                &lt;L7p:OtherTargetMessageVariable stringValue="payload_json"/&gt;
                &lt;L7p:Target target="OTHER"/&gt;
                &lt;L7p:VariablePrefix stringValue="owner"/&gt;
            &lt;/L7p:EvaluateJsonPathExpressionV2&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="set variable to unknown if owner not part of payload"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="dW5rbm93bg=="/&gt;
                &lt;L7p:VariableToSet stringValue="owner.result"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Sets owner "/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Set resp with extracted values, used for validation later"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjx2YWx1ZXMgeG1sbnM9Imh0dHA6Ly9ucy5sN3RlY2guY29tLzIwMTIvMTEvb3RrLXRva2Vuc3RvcmUiIG9mZnNldD0iMSI+DQoJPHZhbHVlIGluZGV4PSIxIj4NCgkJPHRva2VuPiR7anRpLnJlc3VsdH08L3Rva2VuPg0KCQk8c2VjcmV0Lz4NCgkJPGV4cGlyYXRpb24+JHtleHAucmVzdWx0fTwvZXhwaXJhdGlvbj4NCgkJPHJ0b2tlbj48L3J0b2tlbj4NCgkJPHJleHBpcmF0aW9uPjwvcmV4cGlyYXRpb24+DQoJCTxzY29wZT4ke3Njb3BlLnJlc3VsdH08L3Njb3BlPiANCgkJPHJlc291cmNlX293bmVyPiR7b3duZXIucmVzdWx0fTwvcmVzb3VyY2Vfb3duZXI+DQoJCTxjbGllbnRfa2V5PiR7YXVkLnJlc3VsdH08L2NsaWVudF9rZXk+DQoJCTxjbGllbnRfbmFtZT48L2NsaWVudF9uYW1lPiANCgkJPHN0YXR1cz5FTkFCTEVEPC9zdGF0dXM+DQoJCTxjcmVhdGVkPjwvY3JlYXRlZD4gDQoJCTxjdXN0b20+JHtqd3QucGF5bG9hZH08L2N1c3RvbT4NCgk8L3ZhbHVlPg0KPC92YWx1ZXM+"/&gt;
            &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:VariableToSet stringValue="resp"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Use the following assertion to validate JWT by querying database for access_token (jti)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Disable the following context variable assertion (query_db) if database query is not required for validation"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="query_db"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Validate JWT OAuth Token</l7:Name>
                    <l7:Id>d003cc363d3af3fa8c1c0dfed091ccfe</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.621Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="ebc7bee2-0d5e-4348-89cf-c3a84ca693a6" id="d003cc363d3af3fa8c1c0dfed091ccfe" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fd08e" guid="ebc7bee2-0d5e-4348-89cf-c3a84ca693a6" id="d003cc363d3af3fa8c1c0dfed091ccfe" version="0">
<l7:Name>OTK Validate JWT OAuth Token</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Policy Fragment: OTK Validate JWT OAuth Token"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize variable 'query_db'"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                    &lt;L7p:VariableToSet stringValue="query_db"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue="03d4ea7a-8557-4002-80b2-925e52eb4e26"/&gt;
                &lt;/L7p:Include&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtqdGkucmVzdWx0fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="jwt_id"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="validation"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// invalid jwt"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="MTIx"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Validate JWT OAuth Token</l7:Name>
                    <l7:Id>d003cc363d3af3fa8c1c0dfed091cd38</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.621Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="d003cc363d3af3fa8c1c0dfed091cd38" version="0">
                            <l7:Name>OTK Validate JWT OAuth Token</l7:Name>
                            <l7:Guid>fce241db-a269-4dfe-adad-7790748c4940</l7:Guid>
                            <l7:PolicyReference id="d003cc363d3af3fa8c1c0dfed091ccfe" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>access_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>access_token</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>jwt_id</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>query_db</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>resp</l7:ResultName>
    <l7:ResultType>message</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>This encapsulated assertion is used to validate JWT as OAuth Token. Customization to the default implementation can be done in the configuration policy #OTK Validate JWT OAuth Token</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>oauth.png</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>ebc7bee2-0d5e-4348-89cf-c3a84ca693a6</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                
                
                <l7:Item>
                    <l7:Name>#OTK Variable Configuration</l7:Name>
                    <l7:Id>24e6fd7c5b6fb3a96690246c8ac49335</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.621Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="174ef22a-955b-465c-bd2a-9bc4caa888d8" id="24e6fd7c5b6fb3a96690246c8ac49335" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d16914781" guid="174ef22a-955b-465c-bd2a-9bc4caa888d8" id="24e6fd7c5b6fb3a96690246c8ac49335" version="0">
<l7:Name>#OTK Variable Configuration</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Target Configuration Policy: &amp;quot;OTK Variable                                 Configuration&amp;quot;"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Set custom values for Context Variables below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Add any new Context Variables or extensions below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly8ke2dhdGV3YXkuY2x1c3Rlci5ob3N0bmFtZX06JHtnYXRld2F5Lm90ay5wb3J0fQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="host_oauth2_auth_server"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Match the port through which oauth clients connect"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5Lm90ay5wb3J0fQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="oauth2_server_port"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Variable Configuration</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd183</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.623Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="e64823db-25f0-462a-a226-44908c239fe6" id="e001cfd0c1c1ffaa18e187b5e72fd183" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fc858" guid="e64823db-25f0-462a-a226-44908c239fe6" id="e001cfd0c1c1ffaa18e187b5e72fd183" version="0">
<l7:Name>OTK Variable Configuration</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Required changes can be implemented in policies in the 'Customizations' folder "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === The policies within that folder will have the same name as this policy but "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === either prefixed with '#' or suffixed with 'Extensions'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Prefixed policies can be used to overwrite variables of this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Suffixed policies can be used to extend functionality"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you find you cannot add your customizations using the policies in the 'Customizations' folder"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="TUFD"/&gt;
                &lt;L7p:Enabled booleanValue="false"/&gt;
                &lt;L7p:VariableToSet stringValue="oauth2_token_type"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="QkVBUkVS"/&gt;
                &lt;L7p:VariableToSet stringValue="oauth2_token_type"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Server type"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Configure the type of token that should be issued. MAG supports 'BEARER' only"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly8ke2dhdGV3YXkuY2x1c3Rlci5ob3N0bmFtZX06ODQ0Mw=="/&gt;
                &lt;L7p:VariableToSet stringValue="host_oauth2_auth_server"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="L2F1dGgvb2F1dGgvdjIvYXV0aG9yaXpl"/&gt;
                &lt;L7p:VariableToSet stringValue="oauth2_auth_path"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="L2F1dGgvb2F1dGgvdjIvdG9rZW4="/&gt;
                &lt;L7p:VariableToSet stringValue="oauth2_token_path"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="L2F1dGgvb2F1dGgvdjIvdG9rZW4vcmV2b2tl"/&gt;
                &lt;L7p:VariableToSet stringValue="oauth2_token_revocation_path"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Server Auth Server"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Configure values related to the authorization server"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Please review the values below and configure them to your needs"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Match the hostname that will be used by oauth clients"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LmNsdXN0ZXIuaG9zdG5hbWV9"/&gt;
                &lt;L7p:VariableToSet stringValue="oauth2_server_hostname"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Match the name of the cert that is used when SSL connections are made with oauth clients. The name has to match the value in 'Tasks - Manage Certificates'"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LmNsdXN0ZXIuaG9zdG5hbWV9"/&gt;
                &lt;L7p:VariableToSet stringValue="oauth2_server_certificate"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Match the port through which oauth clients connect"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="ODQ0Mw=="/&gt;
                &lt;L7p:VariableToSet stringValue="oauth2_server_port"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Set the url prefix if a prefix has been used when these policies were installed"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:VariableToSet stringValue="oauth2_server_url_prefix"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="expose_client_secret"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="enable_anonymous_client_export"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="Modify the value below ONLY if the path has been modified"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="L2Nvbm5lY3Qvc2Vzc2lvbi9sb2dvdXQ="/&gt;
                &lt;L7p:VariableToSet stringValue="usersession_logout_path"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="L29wZW5pZC9jb25uZWN0L3YxL3VzZXJpbmZv"/&gt;
                &lt;L7p:VariableToSet stringValue="userinfo_path"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="L2Nvbm5lY3Qvc2Vzc2lvbi9zdGF0dXM="/&gt;
                &lt;L7p:VariableToSet stringValue="usersession_status_path"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="L29wZW5pZC9jb25uZWN0L2p3a3MuanNvbg=="/&gt;
                &lt;L7p:VariableToSet stringValue="jwks_uri_path"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="L29wZW5pZC9jb25uZWN0L3JlZ2lzdGVy"/&gt;
                &lt;L7p:VariableToSet stringValue="oidc_register_path"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="L2FwaWRvY3MvYXV0aC9vYXV0aC92Mi9zd2FnZ2Vy"/&gt;
                &lt;L7p:VariableToSet stringValue="service_documentation_path"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="The content below will be added to the configuration export JSON message as is"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="Im9hdXRoX2RlbW9fcHJvdGVjdGVkX2FwaV9lbmRwb2ludF9wYXRoIjoiL29hdXRoL3YyL3Byb3RlY3RlZGFwaS9mb28iLA0KIm1hZ19kZW1vX3Byb2R1Y3RzX2VuZHBvaW50X3BhdGgiOiIvcHJvdGVjdGVkL3Jlc291cmNlL3Byb2R1Y3RzIg=="/&gt;
                &lt;L7p:VariableToSet stringValue="export_custom"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="Cache Lifetime for JWT as client credential can be modified in the customizable policy"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MTgwMA=="/&gt;
                &lt;L7p:VariableToSet stringValue="client_credential_jwt_cache_lifetime"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Export"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Configure values related to the OAuth Manager client_id export feature"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="174ef22a-955b-465c-bd2a-9bc4caa888d8"/&gt;
        &lt;/L7p:Include&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Variable Configuration</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd2da</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.623Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fd2da" version="1">
                            <l7:Name>OTK Variable Configuration</l7:Name>
                            <l7:Guid>2e6e2ef3-a36f-4548-a2c4-7b369b7ae184</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd183" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>client_credential_jwt_cache_lifetime</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>enable_anonymous_client_export</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>export_custom</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>expose_client_secret</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>host_oauth2_auth_server</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>host_oauth2_auth_template_server</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>jwks_uri_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>location_website_template</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>location_website_template_resources</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_auth_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_auth_template_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_server_certificate</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_server_hostname</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_server_port</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_server_url_prefix</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_token_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_token_revocation_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_token_type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_version</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oidc_register_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>service_documentation_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>userinfo_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>usersession_logout_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>usersession_status_path</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Exports variables that are required to process OAuth requests.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Configuration</l7:StringValue>
</l7:Property>
<l7:Property key="doc_require_customization">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>ServerRegistry.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>e64823db-25f0-462a-a226-44908c239fe6</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK SCOPE Verification</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd147</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.631Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="2792f49f-c879-4eb1-a1e1-326bad2dcb74" id="e001cfd0c1c1ffaa18e187b5e72fd147" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fd08e" guid="2792f49f-c879-4eb1-a1e1-326bad2dcb74" id="e001cfd0c1c1ffaa18e187b5e72fd147" version="0">
<l7:Name>OTK SCOPE Verification</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy validates SCOPE"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="resetting any context variable to handle cases where it is not defined"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="JHthbnl9"/&gt;
            &lt;L7p:VariableToSet stringValue="any"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="initialize"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="will be overwritten in the case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:Split&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="valid SCOPE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:InputVariable stringValue="scope.granted"/&gt;
            &lt;L7p:OutputVariable stringValue="scopeGranted"/&gt;
            &lt;L7p:SplitPattern stringValue="[ ]"/&gt;
        &lt;/L7p:Split&gt;
        &lt;L7p:Split&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="required SCOPE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:InputVariable stringValue="scope.required"/&gt;
            &lt;L7p:OutputVariable stringValue="scopeRequired"/&gt;
            &lt;L7p:SplitPattern stringValue="[ ]"/&gt;
        &lt;/L7p:Split&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:Expression1 stringValue="${scope.required}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    iterationLimit="100" loopVariable="scopeRequired" variablePrefix="verifyScope"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                        &lt;L7p:VariableToSet stringValue="found"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:Expression1 stringValue="${scopeGranted}"/&gt;
                                &lt;L7p:Expression2 stringValue="${verifyScope.current}"/&gt;
                                &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="${verifyScope.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${any}"/&gt;
                                    &lt;L7p:Expression2 stringValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="verifyScope.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="any"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="pass and break from iteration if any scopes are found"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${any}"/&gt;
                                    &lt;L7p:Expression2 stringValue="true"/&gt;
                                    &lt;L7p:Operator operator="NE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="NE"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="if we want to ensure all scopes match, we need to keep iterating"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="found"/&gt;
                            &lt;/L7p:SetVariable&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:Expression1 stringValue="${scopeGranted}"/&gt;
                                &lt;L7p:Expression2 stringValue="${verifyScope.current}"/&gt;
                                &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;
                                &lt;L7p:Operator operator="NE"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="NE"/&gt;
                                    &lt;L7p:RightValue stringValue="${verifyScope.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${any}"/&gt;
                                    &lt;L7p:Expression2 stringValue="true"/&gt;
                                    &lt;L7p:Operator operator="NE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="NE"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                                    &lt;L7p:VariableToSet stringValue="found"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="verifyScope.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="all"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="if we require all scopes to be found, and we find a scope that doesn't match, break"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${any}"/&gt;
                                    &lt;L7p:Expression2 stringValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="any"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="continue iterating if 'any' flag is true"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                            &lt;/wsp:OneOrMore&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="validate"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="iterate"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="over each SCOPE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${found}"/&gt;
                            &lt;L7p:Expression2 stringValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${fail}"/&gt;
                            &lt;L7p:Expression2 stringValue="true"/&gt;
                            &lt;L7p:Operator operator="NE"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="NE"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="pass if scopes were found and 'fail' flag is not set"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${found}"/&gt;
                            &lt;L7p:Expression2 stringValue="true"/&gt;
                            &lt;L7p:Operator operator="NE"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="NE"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${fail}"/&gt;
                            &lt;L7p:Expression2 stringValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="pass if 'fail' flag is set and the scope is not found"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                &lt;/wsp:OneOrMore&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MTE1"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="verification"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK SCOPE Verification</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd28f</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.631Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fd28f" version="1">
                            <l7:Name>OTK SCOPE Verification</l7:Name>
                            <l7:Guid>f78f0f85-00e2-49b1-95e4-e520df255c9c</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd147" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>scope.granted</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Granted SCOPE</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>scope.required</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Required SCOPE</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>fail</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Fail if the SCOPE is found (true|false)?</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>any</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Pass if any of the required SCOPEs are found (true|false)?</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Veryfies SCOPE and fails if the requested SCOPE does not match the granted one.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Access_Control</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_scope.granted">
    <l7:StringValue>A space separated list of granted/ valid SCOPE values</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_scope.required">
    <l7:StringValue>A space separated list of required SCOPE values</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>oauth.png</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>2792f49f-c879-4eb1-a1e1-326bad2dcb74</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token DB Delete</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fccc1</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.639Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="fe455d03-c935-44d1-9b44-5ecad7832462" id="e001cfd0c1c1ffaa18e187b5e72fccc1" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcbcd" guid="fe455d03-c935-44d1-9b44-5ecad7832462" id="e001cfd0c1c1ffaa18e187b5e72fccc1" version="0">
<l7:Name>OTK Token DB Delete</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy removes token from the database"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="initialize"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="will be overwritten in the case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="fCR7dGVtcF90b2tlbn18JHthY2Nlc3NfdG9rZW59fCR7cmVmcmVzaF90b2tlbn18JHtjbGllbnRfa2V5fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="all"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${all}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item regex="included"&gt;
                            &lt;L7p:Pattern stringValue="([|].+[|][|][|])|([|][|].+[|][|])|([|][|][|].+[|])|([|][|][|][|].+)"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="success"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="No valid parameters have been provided"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="parameters"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="check that at only one parameter was given"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${temp_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_initiate
                                WHERE token=${temp_token}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="temporary"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${temp_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_token
                                WHERE token=${access_token}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="access_token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${temp_token}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_token
                                WHERE rtoken=${refresh_token}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="refresh_token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                    &lt;L7p:Expression2 stringValue="empty"/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="empty"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Delete from temporary token table"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_initiate
                                WHERE client_key=${client_key}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Delete from long living token table"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_token
                                WHERE client_key=${client_key}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="many"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="delete all tokens that were issued to the given client_key (client_id)"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="An error occured and the token most likely could not be deleted"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="delete"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtxdWVyeS5xdWVyeXJlc3VsdC5jb3VudH0gdG9rZW4ocykgZGVsZXRlZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="result"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="dGV4dC9wbGFpbjtjaGFyc2V0PVVURi04"/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token DB Delete</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fcdfa</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.640Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fcdfa" version="1">
                            <l7:Name>OTK Token DB Delete</l7:Name>
                            <l7:Guid>2e218ef8-2fd1-4e8b-8063-917162312dcc</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fccc1" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>access_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>client_key</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>refresh_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>temp_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>result</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Deletes token from the persistence layer.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Storage_Access</l7:StringValue>
</l7:Property>
<l7:Property key="doc_usage">
    <l7:StringValue>Internal</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>Save16.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>fe455d03-c935-44d1-9b44-5ecad7832462</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Delete</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd16f</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.648Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="32285486-39c2-43da-aa40-7587c3300212" id="e001cfd0c1c1ffaa18e187b5e72fd16f" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcfce" guid="32285486-39c2-43da-aa40-7587c3300212" id="e001cfd0c1c1ffaa18e187b5e72fd16f" version="0">
<l7:Name>OTK Token Delete</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="db047e91-52db-4176-a3eb-a43aa0c2c67c"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Storage Configuration"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="custom"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="error code"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="overwritten in case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="DB location"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Set the location to access the database"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${host_oauth_tokenstore_server}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item regex="included"&gt;
                            &lt;L7p:Pattern stringValue="http[s]?://(localhost|127[.]0[.]0[.]1).+"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="DB location"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Set the location to access the database"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                            &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="cassandra"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="2e218ef8-2fd1-4e8b-8063-917162312dcc"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token DB Delete"/&gt;
                            &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                        &lt;/L7p:Encapsulated&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                            &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="cassandra"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="927166a6-c831-4964-a66f-4f420bfdffcc"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token NoSQL Delete"/&gt;
                            &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                        &lt;/L7p:Encapsulated&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="dbsystem"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="check the dbsystem for SQL or NoSQL"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="local"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${isLocal}"/&gt;
                    &lt;L7p:Expression2 stringValue="false"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="access_token"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="access_token"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="refresh_token"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="refresh_token"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="temp_token"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="temp_token"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:ContentType stringValue="text/plain; charset=UTF-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="emptyMessage"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="no-fail"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="always success"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="DELETE"/&gt;
                    &lt;L7p:PassThroughSoapFaults booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_tokenstore_server}/oauth/tokenstore/delete?temp_token=${temp_token}&amp;amp;token=${access_token}&amp;amp;rtoken=${refresh_token}&amp;amp;client_key=${client_key}"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="emptyMessage"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLngtY2EtZXJyfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${httpRouting.reasonCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="500"/&gt;
                        &lt;L7p:Operator operator="LT"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="LT"/&gt;
                                &lt;L7p:RightValue stringValue="500"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="routing failed!"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set error code to 000"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="routing errors"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture the last 3 digits"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="error.code"/&gt;
                            &lt;L7p:Regex stringValue="(\d{0,16})(\d{3})$"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="$2"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="error.code"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLmNvbnRlbnQtdHlwZX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="content-type"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLm1haW5wYXJ0fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="result"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="remote"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="database"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Delete</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd25d</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.648Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fd25d" version="1">
                            <l7:Name>OTK Token Delete</l7:Name>
                            <l7:Guid>ada963ed-0428-4ead-8576-9ef79193752c</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd16f" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>access_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Access Token</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>refresh_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Refresh Token</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>temp_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Temporary Token (code|request_token)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>client_key</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Client ID</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>result</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Deletes a token from the persistence layer.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Storage_Delegate</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>down-button.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>32285486-39c2-43da-aa40-7587c3300212</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK OAuth 2.0 Token Validation - BEARER</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd1d3</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.655Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="f07df530-d404-47ad-88a6-dadb4421ead3" id="e001cfd0c1c1ffaa18e187b5e72fd1d3" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fd08e" guid="f07df530-d404-47ad-88a6-dadb4421ead3" id="e001cfd0c1c1ffaa18e187b5e72fd1d3" version="0">
<l7:Name>OTK OAuth 2.0 Token Validation - BEARER</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Validates OAuth 2.0 Bearer tokens only"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="2e6e2ef3-a36f-4548-a2c4-7b369b7ae184"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Variable Configuration"/&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHt0b2tlblZhbHVlcy5tYWlucGFydH0="/&gt;
            &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:VariableToSet stringValue="tokenValues"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="initialize"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="overwritten in the case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${oauth2_token_type}"/&gt;
                    &lt;L7p:Expression2 stringValue="BEARER"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="BEARER"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathExpiration"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:expiration/text()"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="ns"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathScope"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:scope/text()"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="ns"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathStatus"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:status/text()"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="ns"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathClientKey"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:client_key/text()"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="ns"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathOwner"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:resource_owner/text()"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="ns"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathCustom"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:custom"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="ns"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="success"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="error: invalid_request, error_description: Access token does not exist (expired, revoked, replaced, unknown, ...). access_token='${access_token}'"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="OTkw"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="extract values"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="now"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${now.seconds}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="int"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="LE"/&gt;
                            &lt;L7p:RightValue stringValue="${xpathExpiration.result}"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="success"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="error: invalid_request, error_description: Access token has expired: expiration: ${xpathExpiration.result}, time_now: ${gateway.time.seconds}"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="OTkw"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="expiration"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:Encapsulated&gt;
                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f78f0f85-00e2-49b1-95e4-e520df255c9c"/&gt;
                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK SCOPE Verification"/&gt;
                &lt;L7p:Parameters mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="any"/&gt;
                        &lt;L7p:value stringValue="false"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="fail"/&gt;
                        &lt;L7p:value stringValue="${scope_fail}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="scope.granted"/&gt;
                        &lt;L7p:value stringValue="${xpathScope.result}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="scope.required"/&gt;
                        &lt;L7p:value stringValue="${scope_required}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Parameters&gt;
            &lt;/L7p:Encapsulated&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="error: invalid_request, error_description: Access token was not granted for required scope, required: ${scope_required}, granted: ${xpathScope.result}"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="OTkx"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="scope"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${xpathStatus.result}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="ENABLED"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="error: invalid_request, error_description: Access token is disabled"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="OTkz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="status"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${onetime}"/&gt;
                &lt;L7p:Expression2 stringValue="false"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="false"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="ada963ed-0428-4ead-8576-9ef79193752c"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Delete"/&gt;
                        &lt;L7p:Parameters mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="access_token"/&gt;
                                &lt;L7p:value stringValue="${access_token}"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="client_key"/&gt;
                                &lt;L7p:value stringValue=""/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="refresh_token"/&gt;
                                &lt;L7p:value stringValue=""/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="temp_token"/&gt;
                                &lt;L7p:value stringValue=""/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Parameters&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${result}"/&gt;
                        &lt;L7p:Expression2 stringValue="1 token(s) deleted"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="1 token(s) deleted"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="WARNING: Access token may still be usable although it was marked as one-time access_token! access_token='${access_token}'"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="delete token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="onetime"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="PHZhbGlkYXRpb24geG1sbnM9Imh0dHA6Ly9ucy5sN3RlY2guY29tLzIwMTIvMTEvb3RrLW92cCI+DQogICA8cmVzdWx0PnZhbGlkPC9yZXN1bHQ+DQogICA8Y2xpZW50X2tleT48IVtDREFUQVske3hwYXRoQ2xpZW50S2V5LnJlc3VsdH1dXT48L2NsaWVudF9rZXk+DQogICA8cmVzb3VyY2Vfb3duZXI+PCFbQ0RBVEFbJHt4cGF0aE93bmVyLnJlc3VsdH1dXT48L3Jlc291cmNlX293bmVyPg0KICAgPHNjb3BlPjwhW0NEQVRBWyR7eHBhdGhTY29wZS5yZXN1bHR9XV0+PC9zY29wZT4NCiAgIDxleHBpcmF0aW9uPjwhW0NEQVRBWyR7eHBhdGhFeHBpcmF0aW9uLnJlc3VsdH1dXT48L2V4cGlyYXRpb24+DQogICA8Y3VzdG9tPjwhW0NEQVRBWyR7eHBhdGhDdXN0b20ucmVzdWx0fV1dPjwvY3VzdG9tPg0KPC92YWxpZGF0aW9uPg=="/&gt;
            &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:VariableToSet stringValue="resp"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="dGV4dC94bWw7Y2hhcnNldD1VVEYtOA=="/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK OAuth 2.0 Token Validation - BEARER</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd322</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.655Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fd322" version="1">
                            <l7:Name>OTK OAuth 2.0 Token Validation - BEARER</l7:Name>
                            <l7:Guid>2c8a8e1d-fbcd-4d9a-b866-981d923aeb83</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd1d3" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>tokenValues</l7:ArgumentName>
    <l7:ArgumentType>message</l7:ArgumentType>
    <l7:GuiLabel>Token values</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>scope_fail</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>scope_required</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>access_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>onetime</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>resp</l7:ResultName>
    <l7:ResultType>message</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="artifactVersion">
    <l7:StringValue>8cf8496aad6380a24f33889a72ad7bed6d4dfbba</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Validates a given Bearer token profile access_token.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>OAuth_Validation</l7:StringValue>
</l7:Property>
<l7:Property key="doc_usage">
    <l7:StringValue>Internal</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>validate.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>f07df530-d404-47ad-88a6-dadb4421ead3</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK v2GenerateRequestMac</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd0f6</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.664Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="31b00c3c-a333-4e44-8e00-6bfd51b974a8" id="e001cfd0c1c1ffaa18e187b5e72fd0f6" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fc898" guid="31b00c3c-a333-4e44-8e00-6bfd51b974a8" id="e001cfd0c1c1ffaa18e187b5e72fd0f6" version="0">
<l7:Name>OTK v2GenerateRequestMac</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === *** THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve                                 customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Generates request MAC using HMAC-SHA1 algorithm"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Inputs: timestamp_sec, nonce, http_method, url, ext,                                 mac_key, mac_algorithm"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Outputs: mac"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="========== Validate inputs =========="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:Expression1 stringValue="${timestamp_sec}"/&gt;
            &lt;L7p:Expression2 stringValue=""/&gt;
            &lt;L7p:Negate booleanValue="true"/&gt;
            &lt;L7p:Operator operator="EMPTY"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="timestamp_sec"/&gt;
            &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
            &lt;L7p:Regex stringValue="^0+"/&gt;
            &lt;L7p:RegexName stringValue="Timestamp must not have leading zeros"/&gt;
            &lt;L7p:Replacement stringValue=""/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="timestamp_sec"/&gt;
            &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
            &lt;L7p:Regex stringValue="^-"/&gt;
            &lt;L7p:RegexName stringValue="Timestamp must be a positive number"/&gt;
            &lt;L7p:Replacement stringValue=""/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:Expression1 stringValue="${nonce}"/&gt;
            &lt;L7p:Expression2 stringValue=""/&gt;
            &lt;L7p:Negate booleanValue="true"/&gt;
            &lt;L7p:Operator operator="EMPTY"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:Expression1 stringValue="${http_method}"/&gt;
            &lt;L7p:Expression2 stringValue=""/&gt;
            &lt;L7p:Negate booleanValue="true"/&gt;
            &lt;L7p:Operator operator="EMPTY"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="http_method"/&gt;
            &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
            &lt;L7p:Regex stringValue="[a-z]"/&gt;
            &lt;L7p:RegexName stringValue="HTTP method must be in upper case"/&gt;
            &lt;L7p:Replacement stringValue=""/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:Expression1 stringValue="${url}"/&gt;
            &lt;L7p:Expression2 stringValue=""/&gt;
            &lt;L7p:Negate booleanValue="true"/&gt;
            &lt;L7p:Operator operator="EMPTY"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:Expression1 stringValue="${mac_key}"/&gt;
            &lt;L7p:Expression2 stringValue=""/&gt;
            &lt;L7p:Negate booleanValue="true"/&gt;
            &lt;L7p:Operator operator="EMPTY"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:Expression1 stringValue="${mac_algorithm}"/&gt;
            &lt;L7p:Expression2 stringValue="hmac-sha-1"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="hmac-sha-1"/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="========== Break URL into parts (protocol, hostname+port,                                 path) =========="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:CaptureVar stringValue="url_sub_string"/&gt;
            &lt;L7p:FindAll booleanValue="true"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="url"/&gt;
            &lt;L7p:Regex stringValue="([a-z]*)://([^/]*)(.*)"/&gt;
            &lt;L7p:Replacement stringValue=""/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHt1cmxfc3ViX3N0cmluZ1szXX0="/&gt;
            &lt;L7p:VariableToSet stringValue="request_uri"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHt1cmxfc3ViX3N0cmluZ1syXX0="/&gt;
            &lt;L7p:VariableToSet stringValue="url_hostname_port"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="host"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="port"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="url_hostname_port_sub_string"/&gt;
                    &lt;L7p:FindAll booleanValue="true"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="url_hostname_port"/&gt;
                    &lt;L7p:Regex stringValue="([^:]*):([0-9]*)"/&gt;
                    &lt;L7p:RegexName stringValue="get hostname and port number"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1cmxfaG9zdG5hbWVfcG9ydF9zdWJfc3RyaW5nWzFdfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="host"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1cmxfaG9zdG5hbWVfcG9ydF9zdWJfc3RyaW5nWzJdfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="port"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="port is specified"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1cmxfaG9zdG5hbWVfcG9ydH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="host"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${url_sub_string[1]}"/&gt;
                            &lt;L7p:Expression2 stringValue="http"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="http"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="ODA="/&gt;
                            &lt;L7p:VariableToSet stringValue="port"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${url_sub_string[1]}"/&gt;
                            &lt;L7p:Expression2 stringValue="https"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="https"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="NDQz"/&gt;
                            &lt;L7p:VariableToSet stringValue="port"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Use default port"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="port is not specified"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Get hostname and port number"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Check if there are any uppercases in hostname"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:FindAll booleanValue="true"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="host"/&gt;
                    &lt;L7p:Regex stringValue="[A-Z]"/&gt;
                    &lt;L7p:RegexName stringValue="Check for uppercase"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PGhvc3RuYW1lPiR7aG9zdH08L2hvc3RuYW1lPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="xml"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt4bWx9"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="forXSL"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="forXSL"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet
                                version="1.0"
                                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
                                &lt;xsl:output method="text" omit-xml-declaration="yes"/&gt;

                                &lt;xsl:variable name="lowercase" select="'abcdefghijklmnopqrstuvwxyz'"/&gt;
                                &lt;xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/&gt;

                                &lt;xsl:template match="/hostname"&gt;
                                &lt;xsl:value-of select="translate(., $uppercase, $lowercase)"/&gt;
                                &lt;/xsl:template&gt;

                                &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtmb3JYU0wubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="host"/&gt;
                &lt;/L7p:SetVariable&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Change hostname to lowercase"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:Expression1 stringValue="${request_uri}"/&gt;
            &lt;L7p:Expression2 stringValue=""/&gt;
            &lt;L7p:Negate booleanValue="true"/&gt;
            &lt;L7p:Operator operator="EMPTY"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:Expression1 stringValue="${host}"/&gt;
            &lt;L7p:Expression2 stringValue=""/&gt;
            &lt;L7p:Negate booleanValue="true"/&gt;
            &lt;L7p:Operator operator="EMPTY"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:Expression1 stringValue="${port}"/&gt;
            &lt;L7p:Expression2 stringValue=""/&gt;
            &lt;L7p:Negate booleanValue="true"/&gt;
            &lt;L7p:Operator operator="EMPTY"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:EncodeDecode&gt;
            &lt;L7p:SourceVariableName stringValue="request_uri"/&gt;
            &lt;L7p:TargetDataType variableDataType="string"/&gt;
            &lt;L7p:TargetVariableName stringValue="request_uri"/&gt;
            &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
        &lt;/L7p:EncodeDecode&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:LineBreak lineBreak="LF"/&gt;
            &lt;L7p:VariableToSet stringValue="empty_line"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHt0aW1lc3RhbXBfc2VjfQ0KJHtub25jZX0NCiR7aHR0cF9tZXRob2R9DQoke3JlcXVlc3RfdXJpfQ0KJHtob3N0fQ0KJHtwb3J0fQ0KJHtleHR9DQoke2VtcHR5X2xpbmV9"/&gt;
            &lt;L7p:VariableToSet stringValue="normalized_request"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:GenerateSecurityHash&gt;
            &lt;L7p:Base64Data stringValue="JHtub3JtYWxpemVkX3JlcXVlc3R9"/&gt;
            &lt;L7p:KeyText stringValue="${mac_key}"/&gt;
            &lt;L7p:LineBreak lineBreak="CR-LF"/&gt;
            &lt;L7p:TargetOutputVariable stringValue="mac"/&gt;
        &lt;/L7p:GenerateSecurityHash&gt;
        &lt;L7p:ExportVariables&gt;
            &lt;L7p:ExportedVars stringArrayValue="included"&gt;
                &lt;L7p:item stringValue="mac"/&gt;
            &lt;/L7p:ExportedVars&gt;
        &lt;/L7p:ExportVariables&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK v2GenerateRequestMac</l7:Name>
                    <l7:Id>35f5ccf02323692c2c4a2f0545010a90</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.664Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="35f5ccf02323692c2c4a2f0545010a90" version="1">
                            <l7:Name>OTK v2GenerateRequestMac</l7:Name>
                            <l7:Guid>e1375d51-4432-49a9-876f-9f45f15c5756</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd0f6" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>ext</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>http_method</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>mac_algorithm</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>mac_key</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>nonce</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>timestamp_sec</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>7</l7:Ordinal>
    <l7:ArgumentName>url</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>8</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>mac</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Generates request MAC using HMAC-SHA1 algorithm</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>31b00c3c-a333-4e44-8e00-6bfd51b974a8</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK OAuth 2.0 Token Validation - MAC</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd1e7</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.677Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="55caa40c-7b56-40ff-a5b1-2933934b787f" id="e001cfd0c1c1ffaa18e187b5e72fd1e7" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fd08e" guid="55caa40c-7b56-40ff-a5b1-2933934b787f" id="e001cfd0c1c1ffaa18e187b5e72fd1e7" version="0">
<l7:Name>OTK OAuth 2.0 Token Validation - MAC</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Validates OAuth 2.0 MAC Token profile Access Tokens"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="For MAC tokens only"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="2e6e2ef3-a36f-4548-a2c4-7b369b7ae184"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Variable Configuration"/&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHt0b2tlblZhbHVlcy5tYWlucGFydH0="/&gt;
            &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:VariableToSet stringValue="tokenValues"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${oauth2_token_type}"/&gt;
                            &lt;L7p:Expression2 stringValue="MAC"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="MAC"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="xpathExpiration"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:expiration/text()"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="xpathScope"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:scope/text()"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="xpathStatus"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:status/text()"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="success"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="error: invalid_request, error_description: Access token does not exist (expired, revoked, replaced, unknown, ...). access_token='${access_token}'"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="OTkw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Token"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Check for token type, token existence, token values"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${xpathStatus.result}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="ENABLED"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="error: invalid_request, error_description: Access token disabled, status: ${xpathStatus.result}"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="OTkz"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="status"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                            &lt;L7p:VariableToSet stringValue="now"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${now.seconds}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="LE"/&gt;
                                    &lt;L7p:RightValue stringValue="${xpathExpiration.result}"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="error: invalid_request, error_description: Access token expired, expiration: ${xpathExpiration.result}, time_now: ${gateway.time.seconds}"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="OTkw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="expiration"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f78f0f85-00e2-49b1-95e4-e520df255c9c"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK SCOPE Verification"/&gt;
                        &lt;L7p:Parameters mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="any"/&gt;
                                &lt;L7p:value stringValue="false"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="fail"/&gt;
                                &lt;L7p:value stringValue="${scope_fail}"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="scope.granted"/&gt;
                                &lt;L7p:value stringValue="${xpathScope.result}"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="scope.required"/&gt;
                                &lt;L7p:value stringValue="${scope_required}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Parameters&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="error: invalid_request, error_description: Access token was not granted for required scope, required: ${scope_required}, granted: ${xpathScope.result}"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="OTkx"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="scope"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${onetime}"/&gt;
                        &lt;L7p:Expression2 stringValue="false"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="ada963ed-0428-4ead-8576-9ef79193752c"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Delete"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="access_token"/&gt;
                                    &lt;L7p:value stringValue="${access_token}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="client_key"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh_token"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="temp_token"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${result}"/&gt;
                                &lt;L7p:Expression2 stringValue="1 token(s) deleted"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="1 token(s) deleted"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:Detail stringValue="error: invalid_request, error_description: Access token may still be usable although it was marked as one-time access_token"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="remove"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="isonetime"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Check for one-time usage"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="=== MAC token profile specific validations and token secret lookup"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="xpathSecret"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:secret/text()"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:CaptureVar stringValue="ts"/&gt;
                            &lt;L7p:FindAll booleanValue="true"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="auth_header"/&gt;
                            &lt;L7p:Regex stringValue="ts\s*=&amp;quot;\s*([^&amp;quot;]*)&amp;quot;"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${ts[1]}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHt0c1sxXX0="/&gt;
                            &lt;L7p:VariableToSet stringValue="timestamp_sec"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:CaptureVar stringValue="nonce"/&gt;
                            &lt;L7p:FindAll booleanValue="true"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="auth_header"/&gt;
                            &lt;L7p:Regex stringValue="nonce\s*=&amp;quot;\s*([^&amp;quot;]*)&amp;quot;"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${nonce[1]}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtub25jZVsxXX0="/&gt;
                            &lt;L7p:VariableToSet stringValue="nonce"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHt0aW1lc3RhbXBfc2VjfSR7bm9uY2V9JHt0b2tlbn0="/&gt;
                            &lt;L7p:VariableToSet stringValue="replay_arg"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:WssReplayProtection&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Set the right timeframe!"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CustomExpiryTime intValue="300000"/&gt;
                            &lt;L7p:CustomIdentifierVariable stringValue="replay_arg"/&gt;
                            &lt;L7p:CustomProtection booleanValue="true"/&gt;
                            &lt;L7p:CustomScope stringValue="${service.oid}"/&gt;
                        &lt;/L7p:WssReplayProtection&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:CaptureVar stringValue="ext"/&gt;
                                    &lt;L7p:FindAll booleanValue="true"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="auth_header"/&gt;
                                    &lt;L7p:Regex stringValue="ext\s*=&amp;quot;\s*([^&amp;quot;]*)&amp;quot;"/&gt;
                                    &lt;L7p:Replacement stringValue=""/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${ext[1]}"/&gt;
                                    &lt;L7p:Expression2 stringValue=""/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtleHRbMV19"/&gt;
                                    &lt;L7p:VariableToSet stringValue="ext"/&gt;
                                &lt;/L7p:SetVariable&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue=""/&gt;
                                    &lt;L7p:VariableToSet stringValue="ext"/&gt;
                                &lt;/L7p:SetVariable&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="ext is optional"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHt4cGF0aFNlY3JldC5yZXN1bHR9"/&gt;
                            &lt;L7p:VariableToSet stringValue="mac_key"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${mac_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="aG1hYy1zaGEtMQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="mac_algorithm"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:CaptureVar stringValue="request_mac"/&gt;
                            &lt;L7p:FindAll booleanValue="true"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="auth_header"/&gt;
                            &lt;L7p:Regex stringValue="mac\s*=&amp;quot;\s*([^&amp;quot;]*)&amp;quot;"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${request_mac[1]}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0X21hY1sxXX0="/&gt;
                            &lt;L7p:VariableToSet stringValue="request_mac"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="Generate mac and compare to mac in the request message"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="e1375d51-4432-49a9-876f-9f45f15c5756"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK v2GenerateRequestMac"/&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${request_mac}"/&gt;
                            &lt;L7p:Expression2 stringValue="${mac}"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="${mac}"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="==="/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="xpathClientKey"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:client_key"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="xpathOwner"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:resource_owner"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="xpathCustom"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="tokenValues"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:custom"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="PHZhbGlkYXRpb24geG1sbnM9Imh0dHA6Ly9ucy5sN3RlY2guY29tLzIwMTIvMTEvb3RrLW92cCI+DQogICA8cmVzdWx0PnZhbGlkPC9yZXN1bHQ+DQogICA8Y2xpZW50X2tleT48IVtDREFUQVske3hwYXRoQ2xpZW50S2V5LnJlc3VsdH1dXT48L2NsaWVudF9rZXk+DQogICA8cmVzb3VyY2Vfb3duZXI+PCFbQ0RBVEFbJHt4cGF0aE93bmVyLnJlc3VsdH1dXT48L3Jlc291cmNlX293bmVyPg0KICAgPHNjb3BlPjwhW0NEQVRBWyR7eHBhdGhTY29wZS5yZXN1bHR9XV0+PC9zY29wZT4NCiAgIDxleHBpcmF0aW9uPjwhW0NEQVRBWyR7eHBhdGhFeHBpcmF0aW9uLnJlc3VsdH1dXT48L2V4cGlyYXRpb24+DQogICA8Y3VzdG9tPjwhW0NEQVRBWyR7eHBhdGhDdXN0b20ucmVzdWx0fV1dPjwvY3VzdG9tPg0KPC92YWxpZGF0aW9uPg=="/&gt;
                            &lt;L7p:ContentType stringValue="text/xml;charset=UTF-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="resp"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="dGV4dC94bWw7Y2hhcnNldD1VVEYtOA=="/&gt;
                            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="MAC specific"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="do some MAC token profile specific validations"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="Something during MAC token validation went wrong"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="response"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Do MAC specific validations and create response"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${tokenValues.mainpart}"/&gt;
                &lt;L7p:Expression2 stringValue="&amp;lt;token&gt;"/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="CONTAINS"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="CONTAINS"/&gt;
                        &lt;L7p:RightValue stringValue="&amp;lt;token&gt;"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK OAuth 2.0 Token Validation - MAC</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd336</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.677Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fd336" version="1">
                            <l7:Name>OTK OAuth 2.0 Token Validation - MAC</l7:Name>
                            <l7:Guid>93e26a5f-02b5-4a0e-8d76-7ba7e171871a</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd1e7" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>tokenValues</l7:ArgumentName>
    <l7:ArgumentType>message</l7:ArgumentType>
    <l7:GuiLabel>Token values</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>http_method</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Used HTTP method</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>url</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Request URL</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>scope_fail</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>scope_required</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>access_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>7</l7:Ordinal>
    <l7:ArgumentName>onetime</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>8</l7:Ordinal>
    <l7:ArgumentName>auth_header</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>9</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>resp</l7:ResultName>
    <l7:ResultType>message</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="artifactVersion">
    <l7:StringValue>c08a08af82a37b3eaa30209bc5077f13eddc4bb5</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Validates a given MAC token profile access_token.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>OAuth_Validation</l7:StringValue>
</l7:Property>
<l7:Property key="doc_usage">
    <l7:StringValue>Internal</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>validate.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>55caa40c-7b56-40ff-a5b1-2933934b787f</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Require OAuth 2.0 Token</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd841</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.707Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="495c191d-9fb1-4f22-a8ec-76ecacf8bef4" id="e001cfd0c1c1ffaa18e187b5e72fd841" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fd08e" guid="495c191d-9fb1-4f22-a8ec-76ecacf8bef4" id="e001cfd0c1c1ffaa18e187b5e72fd841" version="0">
<l7:Name>OTK Require OAuth 2.0 Token</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Include this policy in a service policy to authorize api access based on an oauth 2.0 access token"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="7e2b4f64-e226-4a03-980a-c4603163acc0"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK OVP Configuration"/&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="error code"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="overwritten in case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="error msg"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="overwritten in case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:Encapsulated&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="find"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="find the access_token, fails if not found"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="dc16f9da-c833-4b0a-8525-8a41ce420795"/&gt;
                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Access Token Retrieval"/&gt;
                &lt;L7p:Parameters mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="allow_header"/&gt;
                        &lt;L7p:value stringValue="true"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="allow_query"/&gt;
                        &lt;L7p:value stringValue="true"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="auth_header"/&gt;
                        &lt;L7p:value stringValue="${request.http.header.authorization}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="auth_param_token"/&gt;
                        &lt;L7p:value stringValue="${request.http.parameters.access_token}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="given_access_token"/&gt;
                        &lt;L7p:value stringValue="${given_access_token}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Parameters&gt;
            &lt;/L7p:Encapsulated&gt;
            &lt;L7p:Encapsulated&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error code"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error code is provided from previous assertion"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                &lt;L7p:Parameters mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="apiPrefix"/&gt;
                        &lt;L7p:value stringValue=""/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="givenErrorCode"/&gt;
                        &lt;L7p:value stringValue="${error.code}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Parameters&gt;
            &lt;/L7p:Encapsulated&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="find the access_token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHthY2Nlc3NfdG9rZW59"/&gt;
            &lt;L7p:VariableToSet stringValue="uuid_token"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${access_token_type}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="uuid"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${access_token_type}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="jwt"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:DecodeJsonWebToken&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// decoding to get jti (uuid_token) from jwt"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:SourcePayload stringValue="${access_token}"/&gt;
                    &lt;L7p:TargetVariablePrefix stringValue="jwt_token"/&gt;
                    &lt;L7p:ValidationType stringValue="None"/&gt;
                &lt;/L7p:DecodeJsonWebToken&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtqd3RfdG9rZW4ucGF5bG9hZH0="/&gt;
                    &lt;L7p:ContentType stringValue="application/json; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="jwt_token.payload"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:EvaluateJsonPathExpressionV2&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// extract JWT ID (&amp;quot;jti&amp;quot;) from payload"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Expression stringValue="jti"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="jwt_token.payload"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:VariablePrefix stringValue="jwt_jti"/&gt;
                &lt;/L7p:EvaluateJsonPathExpressionV2&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtqd3RfanRpLnJlc3VsdH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="uuid_token"/&gt;
                &lt;/L7p:SetVariable&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// extract jti for uuid_token if it's a jwt"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Validation location"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Set the location to validate the access_token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${auth_scheme}"/&gt;
                    &lt;L7p:Expression2 stringValue="Bearer"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="Bearer"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="The cacheKey is a combination of access_token, required SCOPE, and the SCOPE-fail-flag"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="CacheKey"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="The key used for caching the token validation result"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="JHthY2Nlc3NfdG9rZW59JHtzY29wZV9mYWlsfSR7c2NvcGVfcmVxdWlyZWR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="68ad78a1-f4a1-4568-91e1-0980d95c75cd"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Cache Look Up"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheID"/&gt;
                                    &lt;L7p:value stringValue="accessTokenValidation"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheKey"/&gt;
                                    &lt;L7p:value stringValue="${cacheKey}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="maxAcceptableAge"/&gt;
                                    &lt;L7p:value stringValue="${cache_lifetime}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="maxEntryAge"/&gt;
                                    &lt;L7p:value stringValue="${cache_lifetime}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// From Cache"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${host_oauth_ovp_server}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item regex="included"&gt;
                                    &lt;L7p:Pattern stringValue="http[s]?://(localhost|127[.]0[.]0[.]1).+"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set local"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Set the location to validate access token"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${access_token_type}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="uuid"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="19902efe-b202-49da-a5d9-619c57ee842a"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Get (token)"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="client_key"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="queryOffset"/&gt;
                                    &lt;L7p:value stringValue="0"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource_owner"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="return_json"/&gt;
                                    &lt;L7p:value stringValue="false"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="rtoken"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="token"/&gt;
                                    &lt;L7p:value stringValue="${access_token}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="token_status"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="UUID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Validate if access_token is UUID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${access_token_type}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="jwt"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fce241db-a269-4dfe-adad-7790748c4940"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Validate JWT OAuth Token"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="access_token"/&gt;
                                    &lt;L7p:value stringValue="${access_token}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${query_db}"/&gt;
                                    &lt;L7p:Expression2 stringValue="false"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="19902efe-b202-49da-a5d9-619c57ee842a"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Get (token)"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="client_key"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="queryOffset"/&gt;
                                    &lt;L7p:value stringValue="0"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource_owner"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="return_json"/&gt;
                                    &lt;L7p:value stringValue="false"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="rtoken"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="token"/&gt;
                                    &lt;L7p:value stringValue="${jwt_id}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="token_status"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Query DB or Not"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="JWT"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Validate if access_token is JWT"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Validate either JWT or UUID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="It implicitly also uses 'scope_required' and 'scope_fail' and 'access_token'"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="2c8a8e1d-fbcd-4d9a-b866-981d923aeb83"/&gt;
                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK OAuth 2.0 Token Validation - BEARER"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="tokenValues"/&gt;
                                    &lt;L7p:value stringValue="resp"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                &lt;/L7p:Encapsulated&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Validate Locally"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${isLocal}"/&gt;
                                    &lt;L7p:Expression2 stringValue="false"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:EncodeDecode&gt;
                                    &lt;L7p:SourceVariableName stringValue="scope_required"/&gt;
                                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                                    &lt;L7p:TargetVariableName stringValue="scope_required"/&gt;
                                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                                &lt;/L7p:EncodeDecode&gt;
                                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${access_token_type}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="uuid"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:EncodeDecode&gt;
                                    &lt;L7p:SourceVariableName stringValue="access_token"/&gt;
                                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                                    &lt;L7p:TargetVariableName stringValue="access_token"/&gt;
                                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                                    &lt;/L7p:EncodeDecode&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue=""/&gt;
                                    &lt;L7p:ContentType stringValue="text/plain; charset=UTF-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="emptyMessage"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:HttpRoutingAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="no-fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="always succeed"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                                    &lt;L7p:HttpMethod httpMethod="GET"/&gt;
                                    &lt;L7p:PassThroughSoapFaults booleanValue="false"/&gt;
                                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_ovp_server}/oauth/validation/validate/v2/token?access_token=${access_token}&amp;amp;isonetime=${onetime}&amp;amp;auth_scheme=Bearer&amp;amp;scope_required=${scope_required}&amp;amp;scope_fail=${scope_fail}"/&gt;
                                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                                    &lt;/L7p:RequestHeaderRules&gt;
                                    &lt;L7p:RequestMsgSrc stringValue="emptyMessage"/&gt;
                                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                                    &lt;/L7p:RequestParamRules&gt;
                                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                    &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:Name stringValue="x-ca-err"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Rules&gt;
                                    &lt;/L7p:ResponseHeaderRules&gt;
                                    &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;
                                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                                    &lt;/L7p:HttpRoutingAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLngtY2EtZXJyfQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// UUID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${access_token_type}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="jwt"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fce241db-a269-4dfe-adad-7790748c4940"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Validate JWT OAuth Token"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="access_token"/&gt;
                                    &lt;L7p:value stringValue="${access_token}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:EncodeDecode&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Validate against DB using JTI (jwt_id)"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:SourceVariableName stringValue="jwt_id"/&gt;
                                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                                    &lt;L7p:TargetVariableName stringValue="access_token"/&gt;
                                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                                    &lt;/L7p:EncodeDecode&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${query_db}"/&gt;
                                    &lt;L7p:Expression2 stringValue="false"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="It implicitly also uses 'scope_required' and 'scope_fail' and 'access_token'"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="2c8a8e1d-fbcd-4d9a-b866-981d923aeb83"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK OAuth 2.0 Token Validation - BEARER"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="tokenValues"/&gt;
                                    &lt;L7p:value stringValue="resp"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue=""/&gt;
                                    &lt;L7p:ContentType stringValue="text/plain; charset=UTF-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="emptyMessage"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:HttpRoutingAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="no-fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="always succeed"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;

                                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                                    &lt;L7p:HttpMethod httpMethod="GET"/&gt;

                                    &lt;L7p:PassThroughSoapFaults booleanValue="false"/&gt;

                                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_ovp_server}/oauth/validation/validate/v2/token?access_token=${access_token}&amp;amp;isonetime=${onetime}&amp;amp;auth_scheme=Bearer&amp;amp;scope_required=${scope_required}&amp;amp;scope_fail=${scope_fail}"/&gt;
                                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;

                                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                                    &lt;/L7p:RequestHeaderRules&gt;
                                    &lt;L7p:RequestMsgSrc stringValue="emptyMessage"/&gt;

                                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                                    &lt;/L7p:RequestParamRules&gt;

                                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                    &lt;L7p:item httpPassthroughRule="included"&gt;

                                    &lt;L7p:Name stringValue="x-ca-err"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Rules&gt;
                                    &lt;/L7p:ResponseHeaderRules&gt;
                                    &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;

                                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                                    &lt;/L7p:HttpRoutingAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLngtY2EtZXJyfQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Make remote validation call to query database"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Query DB or Not"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// JWT"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="validate"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="UUID or JWT"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:OneOrMore&gt;
                                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${httpRouting.reasonCode}"/&gt;
                                    &lt;L7p:Expression2 stringValue="500"/&gt;
                                    &lt;L7p:Operator operator="LT"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="LT"/&gt;
                                    &lt;L7p:RightValue stringValue="500"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                                    &lt;L7p:Expression2 stringValue=""/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${query_db}"/&gt;
                                    &lt;L7p:Expression2 stringValue="false"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Detail stringValue="routing failed!"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set error code to 000"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:FalseAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="routing errors"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="check if the routing assertion was successful"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:OneOrMore&gt;
                                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                                    &lt;L7p:Expression2 stringValue=""/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture the last 3 digits"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="error.code"/&gt;
                                    &lt;L7p:Regex stringValue="(\d{0,16})(\d{3})$"/&gt;
                                    &lt;L7p:Replace booleanValue="true"/&gt;
                                    &lt;L7p:Replacement stringValue="$2"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:Regex&gt;
                                    &lt;L7p:FalseAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="check for an error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:OneOrMore&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLmNvbnRlbnQtdHlwZX0="/&gt;
                                    &lt;L7p:VariableToSet stringValue="content-type"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Validate remotely"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Validate locally or remotely"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:VariablePrefix stringValue="xpathClientId"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ns:validation/ns:client_key/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:VariablePrefix stringValue="xpathOwner"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ns:validation/ns:resource_owner/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:VariablePrefix stringValue="xpathScope"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ns:validation/ns:scope/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:VariablePrefix stringValue="xpathExpiration"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ns:validation/ns:expiration/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:VariablePrefix stringValue="xpathCustom"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ns:validation/ns:custom"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHt4cGF0aENsaWVudElkLnJlc3VsdH0jQCMke3hwYXRoT3duZXIucmVzdWx0fSNAIyR7eHBhdGhTY29wZS5yZXN1bHR9I0AjJHt4cGF0aEV4cGlyYXRpb24ucmVzdWx0fSNAIyR7eHBhdGhDdXN0b20ucmVzdWx0fQ=="/&gt;
                                &lt;L7p:ContentType stringValue="text/plain; charset=UTF-8"/&gt;
                                &lt;L7p:DataType variableDataType="message"/&gt;
                                &lt;L7p:VariableToSet stringValue="resp"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${onetime}"/&gt;
                                    &lt;L7p:Expression2 stringValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="e5ee8bcf-1796-4297-88dd-c838031a6f6a"/&gt;
                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Cache Store"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheID"/&gt;
                                    &lt;L7p:value stringValue="accessTokenValidation"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheKey"/&gt;
                                    &lt;L7p:value stringValue="${cacheKey}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="doNotCacheSoapFaults"/&gt;
                                    &lt;L7p:value stringValue="true"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="maxEntries"/&gt;
                                    &lt;L7p:value stringValue="100000"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="maxEntryAge"/&gt;
                                    &lt;L7p:value stringValue="${cache_lifetime}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="maxEntrySize"/&gt;
                                    &lt;L7p:value stringValue="10000"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="msg"/&gt;
                                    &lt;L7p:value stringValue="resp"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                &lt;/L7p:Encapsulated&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="caching"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="only if it is not a one time access_token"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="collect validation response data"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// New validation"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                                &lt;L7p:Expression2 stringValue=""/&gt;
                                &lt;L7p:Negate booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set error.code to '000' if we do not have one (which should not be the case)"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtlcnJvci5jb2RlfQ=="/&gt;
                            &lt;L7p:ContentType stringValue="text/plain; charset=UTF-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="resp"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="e5ee8bcf-1796-4297-88dd-c838031a6f6a"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Cache Store"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheID"/&gt;
                                    &lt;L7p:value stringValue="accessTokenValidation"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheKey"/&gt;
                                    &lt;L7p:value stringValue="${cacheKey}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="doNotCacheSoapFaults"/&gt;
                                    &lt;L7p:value stringValue="true"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="maxEntries"/&gt;
                                    &lt;L7p:value stringValue="100000"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="maxEntryAge"/&gt;
                                    &lt;L7p:value stringValue="${cache_lifetime}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="maxEntrySize"/&gt;
                                    &lt;L7p:value stringValue="10000"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="msg"/&gt;
                                    &lt;L7p:value stringValue="resp"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="validation error. Set cache content for invalid token to ''"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Validation"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Create response variables"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="may contain an error.code"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtyZXNwLm1haW5wYXJ0fQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="resp"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:CaptureVar stringValue="resp.details"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="resp"/&gt;
                            &lt;L7p:Regex stringValue="(.{1,256})#@#(.{1,128})#@#(.{1,4000})#@#([0-9]{10})#@#(.*)"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${auth_scheme}"/&gt;
                                    &lt;L7p:Expression2 stringValue=""/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AddHeader&gt;
                                    &lt;L7p:HeaderName stringValue="WWW-Authenticate"/&gt;
                                    &lt;L7p:HeaderValue stringValue="${auth_scheme} error=&amp;quot;Invalid request&amp;quot;"/&gt;
                                    &lt;L7p:Target target="RESPONSE"/&gt;
                                    &lt;/L7p:AddHeader&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:TrueAssertion/&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Add WWW-Authenticate header"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="resp"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="'resp' contains an error code, created during validation"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="apiPrefix"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="givenErrorCode"/&gt;
                                    &lt;L7p:value stringValue="${resp}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="validation error. Set cache content for invalid token to ''"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="resp"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="check if there is valid content. Respond with an error otherwise"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MjAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtyZXNwLmRldGFpbHNbMV19"/&gt;
                        &lt;L7p:VariableToSet stringValue="session.client_id"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtyZXNwLmRldGFpbHNbMl19"/&gt;
                        &lt;L7p:VariableToSet stringValue="session.subscriber_id"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtyZXNwLmRldGFpbHNbM119"/&gt;
                        &lt;L7p:VariableToSet stringValue="session.scope"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtyZXNwLmRldGFpbHNbNF19"/&gt;
                        &lt;L7p:VariableToSet stringValue="session.expires_at"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtyZXNwLmRldGFpbHNbNV19"/&gt;
                        &lt;L7p:VariableToSet stringValue="session.custom"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="create response"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="BEARER token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${auth_scheme}"/&gt;
                    &lt;L7p:Expression2 stringValue="MAC"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="MAC"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAubWV0aG9kfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="request_http_method"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="request_url"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Caching is not possible for MAC token profile"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${host_oauth_ovp_server}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item regex="included"&gt;
                                    &lt;L7p:Pattern stringValue="http[s]?://(localhost|127[.]0[.]0[.]1).+"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set local"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Set the location to validate access token"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="19902efe-b202-49da-a5d9-619c57ee842a"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Get (token)"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="client_key"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="queryOffset"/&gt;
                                    &lt;L7p:value stringValue="0"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource_owner"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="return_json"/&gt;
                                    &lt;L7p:value stringValue="false"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="rtoken"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="token"/&gt;
                                    &lt;L7p:value stringValue="${access_token}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="token_status"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="93e26a5f-02b5-4a0e-8d76-7ba7e171871a"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK OAuth 2.0 Token Validation - MAC"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="http_method"/&gt;
                                    &lt;L7p:value stringValue="${request_http_method}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="tokenValues"/&gt;
                                    &lt;L7p:value stringValue="resp"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="url"/&gt;
                                    &lt;L7p:value stringValue="${request_url}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="validate locally"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${isLocal}"/&gt;
                            &lt;L7p:Expression2 stringValue="false"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:EncodeDecode&gt;
                            &lt;L7p:SourceVariableName stringValue="request_url"/&gt;
                            &lt;L7p:TargetDataType variableDataType="string"/&gt;
                            &lt;L7p:TargetVariableName stringValue="request_url"/&gt;
                            &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                        &lt;/L7p:EncodeDecode&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="YXV0aF9zY2hlbWU9TUFDJmh0dHBfbWV0aG9kPSR7cmVxdWVzdF9odHRwX21ldGhvZH0mdXJsPSR7cmVxdWVzdF91cmx9Jmlzb25ldGltZT0ke29uZXRpbWV9"/&gt;
                            &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded; charset=UTF-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:HttpRoutingAssertion&gt;
                            &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                            &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                            &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                            &lt;L7p:PassThroughSoapFaults booleanValue="false"/&gt;
                            &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_ovp_server}/oauth/validation/validate/v2/token"/&gt;
                            &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                            &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                            &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                                &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                    &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:CustomizeValue stringValue="${auth_header}"/&gt;
                                    &lt;L7p:Name stringValue="authorization"/&gt;
                                    &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Rules&gt;
                            &lt;/L7p:RequestHeaderRules&gt;
                            &lt;L7p:RequestMsgSrc stringValue="message"/&gt;
                            &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                                &lt;L7p:ForwardAll booleanValue="true"/&gt;
                                &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                            &lt;/L7p:RequestParamRules&gt;
                            &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                                &lt;L7p:ForwardAll booleanValue="true"/&gt;
                                &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                    &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Rules&gt;
                            &lt;/L7p:ResponseHeaderRules&gt;
                            &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;
                            &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                        &lt;/L7p:HttpRoutingAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLngtY2EtZXJyfQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${httpRouting.reasonCode}"/&gt;
                                &lt;L7p:Expression2 stringValue="500"/&gt;
                                &lt;L7p:Operator operator="LT"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="LT"/&gt;
                                    &lt;L7p:RightValue stringValue="500"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                                &lt;L7p:Expression2 stringValue=""/&gt;
                                &lt;L7p:Negate booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Detail stringValue="routing failed!"/&gt;
                                &lt;/L7p:AuditDetailAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set error code to 000"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:FalseAssertion/&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="routing errors"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="check if the routing assertion was successful"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                                &lt;L7p:Expression2 stringValue=""/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:Regex&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture the last 3 digits"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="error.code"/&gt;
                                    &lt;L7p:Regex stringValue="(\d{0,16})(\d{3})$"/&gt;
                                    &lt;L7p:Replace booleanValue="true"/&gt;
                                    &lt;L7p:Replacement stringValue="$2"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:Regex&gt;
                                &lt;L7p:FalseAssertion/&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="check for an error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLmNvbnRlbnQtdHlwZX0="/&gt;
                            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="validate remotely"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${auth_scheme}"/&gt;
                                    &lt;L7p:Expression2 stringValue=""/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:AddHeader&gt;
                                    &lt;L7p:HeaderName stringValue="WWW-Authenticate"/&gt;
                                    &lt;L7p:HeaderValue stringValue="${auth_scheme} error=&amp;quot;Invalid request&amp;quot;"/&gt;
                                    &lt;L7p:Target target="RESPONSE"/&gt;
                                &lt;/L7p:AddHeader&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:TrueAssertion/&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Add WWW-Authenticate header"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code provided by previous assertions"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="apiPrefix"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="givenErrorCode"/&gt;
                                    &lt;L7p:value stringValue="${error.code}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Validation"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="xpathClientId"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/ns:validation/ns:client_key/text()"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="xpathOwner"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/ns:validation/ns:resource_owner/text()"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="xpathScope"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/ns:validation/ns:scope/text()"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="xpathExpiration"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/ns:validation/ns:expiration/text()"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="xpathCustom"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="resp"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/ns:validation/ns:custom"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-ovp"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MjAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHt4cGF0aENsaWVudElkLnJlc3VsdH0="/&gt;
                        &lt;L7p:VariableToSet stringValue="session.client_id"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHt4cGF0aE93bmVyLnJlc3VsdH0="/&gt;
                        &lt;L7p:VariableToSet stringValue="session.subscriber_id"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHt4cGF0aFNjb3BlLnJlc3VsdH0="/&gt;
                        &lt;L7p:VariableToSet stringValue="session.scope"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHt4cGF0aEV4cGlyYXRpb24ucmVzdWx0fQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="session.expires_at"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHt4cGF0aEN1c3RvbS5yZXN1bHR9"/&gt;
                        &lt;L7p:VariableToSet stringValue="session.custom"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="create response variables"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="MAC token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="000"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="something unknown happened"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="apiPrefix"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="givenErrorCode"/&gt;
                            &lt;L7p:value stringValue="000"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error. Something unexpected happened"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="validate"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Require OAuth 2.0 Token</l7:Name>
                    <l7:Id>3f6b5c92ca2ac3665bc7d8780bc4d718</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.708Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="3f6b5c92ca2ac3665bc7d8780bc4d718" version="1">
                            <l7:Name>OTK Require OAuth 2.0 Token</l7:Name>
                            <l7:Guid>393bcb93-82ad-4b55-8333-1119f607a560</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd841" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>scope_required</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Required SCOPE(s)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>cache_lifetime</l7:ArgumentName>
    <l7:ArgumentType>int</l7:ArgumentType>
    <l7:GuiLabel>Cache validation result (s)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>onetime</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Is this a one-time access_token?</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>scope_fail</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Fail if this SCOPE was granted?</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>given_access_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Access Token (Bearer only, optional)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>access_token</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>access_token_type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.msg</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>session.client_id</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>session.custom</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>session.expires_at</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>session.scope</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>session.subscriber_id</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>status</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>uuid_token</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Validates an OAuth 2.0 access_token for a request. By default the request will fail if the given access_token has expired or does not match the given configuration.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Access_Control</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_cache_lifetime">
    <l7:StringValue>Time in seconds for which the access_token will not be validated again. Use this value as a compromise between increasing performance and security. A typical value would be '30'</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_given_access_token">
    <l7:StringValue>Use this field if no access_token is received through the request message but was issued out-of-band</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_onetime">
    <l7:StringValue>If set to 'true' the access_token (and the associated refresh_token) will be invalidated after being used once. Default = 'false'</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_scope_fail">
    <l7:StringValue>If set to 'true' the assertion fails if the given SCOPE was granted for this access_token</l7:StringValue>
</l7:Property>
<l7:Property key="doc_in_scope_required">
    <l7:StringValue>A space separated list of SCOPE values this access_token MUST have been granted for</l7:StringValue>
</l7:Property>
<l7:Property key="doc_out_access_token">
    <l7:StringValue>The access_token of the request</l7:StringValue>
</l7:Property>
<l7:Property key="doc_out_content-type">
    <l7:StringValue>The content-type of the 'error.msg' if it exists</l7:StringValue>
</l7:Property>
<l7:Property key="doc_out_session.client_id">
    <l7:StringValue>The client_id for which the access_token was granted</l7:StringValue>
</l7:Property>
<l7:Property key="doc_out_session.custom">
    <l7:StringValue>A JSON structure containing the used grant_type, the client_type and values specified in the custom field of the associated client_id</l7:StringValue>
</l7:Property>
<l7:Property key="doc_out_session.scope">
    <l7:StringValue>The SCOPE that was granted to the access_token</l7:StringValue>
</l7:Property>
<l7:Property key="doc_out_session.subscriber_id">
    <l7:StringValue>The user who granted the access_token/ client</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>oauth.png</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>495c191d-9fb1-4f22-a8ec-76ecacf8bef4</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>IFTTT Triggers Account Monitor</l7:Name>
                    <l7:Id>d0c2108b72b11af05b03eb6dd44c7fa2</l7:Id>
                    <l7:Type>SERVICE</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.720Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Service id="d0c2108b72b11af05b03eb6dd44c7fa2" version="2">
                            <l7:ServiceDetail folderId="457652ee7bfc6625aa2134eb519226d9" id="d0c2108b72b11af05b03eb6dd44c7fa2" version="2">
<l7:Name>IFTTT Triggers Account Monitor</l7:Name>
<l7:Enabled>true</l7:Enabled>
<l7:ServiceMappings>
    <l7:HttpMapping>
        <l7:UrlPattern>/tutorial/otk/ifttt/ifttt/v1/triggers/account_monitor</l7:UrlPattern>
        <l7:Verbs>
            <l7:Verb>GET</l7:Verb>
            <l7:Verb>POST</l7:Verb>
            <l7:Verb>PUT</l7:Verb>
            <l7:Verb>DELETE</l7:Verb>
        </l7:Verbs>
    </l7:HttpMapping>
</l7:ServiceMappings>
<l7:Properties>
    <l7:Property key="internal">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="policyRevision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="tracingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="wssProcessingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:ServiceDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This is the userinfo endpoint for IFTTT"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="IFTTT is expecting its own response format, therefore we cannot reuse the OpenID Connect Userinfo API"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="63da1d1c-1984-4844-8a33-f6b662351892"/&gt;
        &lt;/L7p:Include&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// accept POST only, as documented by IFTTT"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b8822449-71ff-455b-8f10-39122e6c549b"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK HTTP Method Validation"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="method"/&gt;
                    &lt;L7p:value stringValue="POST"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Require an oauth token with scope=ifttt"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="393bcb93-82ad-4b55-8333-1119f607a560"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Require OAuth 2.0 Token"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cache_lifetime"/&gt;
                    &lt;L7p:value stringValue="30"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="given_access_token"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="onetime"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="scope_fail"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="scope_required"/&gt;
                    &lt;L7p:value stringValue="ifttt"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:Expression stringValue="limit"/&gt;
                    &lt;L7p:VariablePrefix stringValue="ifttt.req.limit"/&gt;
                &lt;/L7p:EvaluateJsonPathExpression&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtpZnR0dC5yZXEubGltaXQucmVzdWx0fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="limit"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${limit}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="GE"/&gt;
                            &lt;L7p:RightValue stringValue="0"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="LE"/&gt;
                            &lt;L7p:RightValue stringValue="50"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// found. check if it is between 1 - 50"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="NTA="/&gt;
                &lt;L7p:VariableToSet stringValue="limit"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check for 'limit' paramter in JSON request"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// found. At least one 'slug'/'triggerField' has to be requested"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Expression stringValue="triggerFields"/&gt;
                    &lt;L7p:VariablePrefix stringValue="ifttt.req.triggerFields"/&gt;
                &lt;/L7p:EvaluateJsonPathExpression&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${ifttt.req.triggerFields.result}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="CONTAINS"/&gt;
                            &lt;L7p:RightValue stringValue="account_number"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="CONTAINS"/&gt;
                            &lt;L7p:RightValue stringValue="amount"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// found. At least one 'slug'/'triggerField' has to be requested"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="The request did not include 'triggerFields'"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="103"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// missing parameters"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="apiPrefix"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="givenErrorCode"/&gt;
                            &lt;L7p:value stringValue="103"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check for 'triggerFields' in the request"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:UUIDGenerator&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// IDs for the responses"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:MaximumQuantity intValue="3"/&gt;
            &lt;L7p:Quantity stringValue="3"/&gt;
            &lt;L7p:TargetVariable stringValue="ids"/&gt;
        &lt;/L7p:UUIDGenerator&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${limit}"/&gt;
                    &lt;L7p:Expression2 stringValue="0"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="0"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="items"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// limit 0"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${limit}"/&gt;
                    &lt;L7p:Expression2 stringValue="1"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="1"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="ew0KICAidHlwZSI6ImRlcG9zaXQiLA0KICAiYW1vdW50IjoiMjAwIiwNCiAgImlkIjoiJHtnYXRld2F5LnRpbWUuc2Vjb25kc30iLA0KICAgICAiY3JlYXRlZF9hdCI6ICIke2dhdGV3YXkudGltZS55eXl5LU1NLWRkfSIsDQogICAgICJtZXRhIjogew0KICAgICAgICAiaWQiOiAiJHtpZHNbMF19IiwNCiAgICAgICAgInRpbWVzdGFtcCI6ICR7Z2F0ZXdheS50aW1lLnNlY29uZHN9DQogICAgICB9DQogICB9"/&gt;
                    &lt;L7p:VariableToSet stringValue="items"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// limit 1"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ew0KICAidHlwZSI6ImRlcG9zaXQiLA0KICAiYW1vdW50IjoiMjAwIiwNCiAgImlkIjoiJHtnYXRld2F5LnRpbWUuc2Vjb25kc30iLA0KICAgICAiY3JlYXRlZF9hdCI6ICIke2dhdGV3YXkudGltZS55eXl5LU1NLWRkfSIsDQogICAgICJtZXRhIjogew0KICAgICAgICAiaWQiOiAiJHtpZHNbMF19IiwNCiAgICAgICAgInRpbWVzdGFtcCI6ICR7Z2F0ZXdheS50aW1lLnNlY29uZHN9DQogICAgICB9fSwNCnsNCiAgInR5cGUiOiJkZXBvc2l0IiwNCiAgImFtb3VudCI6IjEwMCIsDQogICJpZCI6IiR7Z2F0ZXdheS50aW1lLnNlY29uZHN9IiwNCiAgICAgImNyZWF0ZWRfYXQiOiAiJHtnYXRld2F5LnRpbWUueXl5eS1NTS1kZH0iLA0KICAgICAibWV0YSI6IHsNCiAgICAgICAgImlkIjogIiR7aWRzWzFdfSIsDQogICAgICAgICJ0aW1lc3RhbXAiOiAke2dhdGV3YXkudGltZS5zZWNvbmRzfQ0KICAgICAgfX0sDQp7DQogICJ0eXBlIjoid2l0aGRyYXdhbCIsDQogICJhbW91bnQiOiIyMDAiLA0KICAiaWQiOiIke2dhdGV3YXkudGltZS5zZWNvbmRzfSIsDQogICAgICJjcmVhdGVkX2F0IjogIiR7Z2F0ZXdheS50aW1lLnl5eXktTU0tZGR9IiwNCiAgICAgIm1ldGEiOiB7DQogICAgICAgICJpZCI6ICIke2lkc1syXX0iLA0KICAgICAgICAidGltZXN0YW1wIjogJHtnYXRld2F5LnRpbWUuc2Vjb25kc30NCiAgICAgIH0NCiAgIH0="/&gt;
                &lt;L7p:VariableToSet stringValue="items"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// handle number of items matching the limit"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:HardcodedResponse&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// return the expected userinfo message"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64ResponseBody stringValue="ewogICJkYXRhIjogWwogICR7aXRlbXN9Cl0KfQ=="/&gt;
            &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
        &lt;/L7p:HardcodedResponse&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Service>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK User Attribute Look Up Extension</l7:Name>
                    <l7:Id>3b6761a5d0ee0e2d4452b1065da584bf</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.725Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="c922f32d-8814-4d82-be00-71e16586396b" id="3b6761a5d0ee0e2d4452b1065da584bf" version="0">
                            <l7:PolicyDetail folderId="bc9a31b7578652a08a514d7d4fef309b" guid="c922f32d-8814-4d82-be00-71e16586396b" id="3b6761a5d0ee0e2d4452b1065da584bf" version="0">
<l7:Name>OTK User Attribute Look Up Extension</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="== Target policy is 'OTK User Attribute Look Up'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="== Overwrite other variables that have default values in                                 the targe policy and update the 'Export' assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="== This policy is also referenced wherever user attributes                                 have to be looked up from an LDAP configuration"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Lookup the user from a list of known administrators"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${given_username}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item regex="included"&gt;
                            &lt;L7p:Pattern stringValue="admin|pmadmin|administrator"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="YWRtaW4="/&gt;
                    &lt;L7p:VariableToSet stringValue="current.user.role"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Admin users"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Roles are configured here"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${custom}"/&gt;
                    &lt;L7p:Expression2 stringValue="path=/userinfo"/&gt;
                    &lt;L7p:Operator operator="CONTAINS"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="CONTAINS"/&gt;
                            &lt;L7p:RightValue stringValue="path=/userinfo"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Used to validate that the MAS User Authentication occurred                                 successfully"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="Im5hbWUiOiJEYXJ0aCIsDQogImZhbWlseV9uYW1lIjoiVmFkZXIiLA0KICJuaWNrbmFtZSI6Ik1hc3Rlci1vZi10aGUtZGFyay1mb3JjZSIsDQogInByZWZlcnJlZF91c2VybmFtZSI6IiR7Z2l2ZW5fdXNlcm5hbWV9Ig=="/&gt;
                    &lt;L7p:VariableToSet stringValue="userinfo.profile"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Used to validate that the MAS User Authentication occurred                                 successfully"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ImVtYWlsIjoiZGFydGgudmFkZXJAZGVhdGhzdGFyLnNwYWNlIg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="userinfo.email"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Used to validate that the MAS User Authentication occurred                                 successfully"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="InBob25lX251bWJlciI6IisxLTU1NS0xMjMtMTIzNCI="/&gt;
                    &lt;L7p:VariableToSet stringValue="userinfo.phone"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Used to validate that the MAS User Authentication occurred                                 successfully"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ImFkZHJlc3MiOnsNCiAgICJyZWdpb24iOiAiU3BhY2UiLA0KICAgImNvdW50cnkiOiAiTk9ORSJ9"/&gt;
                    &lt;L7p:VariableToSet stringValue="userinfo.address"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// can be overwritten with any additional information"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="PHVzZXJpbmZvPg0KIDxwcm9maWxlPjwhW0NEQVRBWyR7dXNlcmluZm8ucHJvZmlsZX1dXT48L3Byb2ZpbGU+DQogPGVtYWlsPjwhW0NEQVRBWyR7dXNlcmluZm8uZW1haWx9XV0+PC9lbWFpbD4NCiA8cGhvbmU+PCFbQ0RBVEFbJHt1c2VyaW5mby5waG9uZX1dXT48L3Bob25lPg0KIDxhZGRyZXNzPjwhW0NEQVRBWyR7dXNlcmluZm8uYWRkcmVzc31dXT48L2FkZHJlc3M+DQo8L3VzZXJpbmZvPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="current.user.attributes"/&gt;
                &lt;/L7p:SetVariable&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// handle a call from '/userinfo' as an example"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${custom}"/&gt;
                    &lt;L7p:Expression2 stringValue="path=/userinfo"/&gt;
                    &lt;L7p:Operator operator="CONTAINS"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="CONTAINS"/&gt;
                            &lt;L7p:RightValue stringValue="path=/userinfo"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="7771fac4-7e19-49b4-965f-ffcbafd4cfd8"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Blockwatch User Attribute Look Up"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="id"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="username"/&gt;
                            &lt;L7p:value stringValue="${given_username}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Used to validate that the MAS User Authentication occurred                                 successfully"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="Im5hbWUiOiIke2F0dHIuZmlyc3RfbmFtZX0iLA0KICJmYW1pbHlfbmFtZSI6IiR7YXR0ci5sYXN0X25hbWV9IiwNCiAicHJlZmVycmVkX3VzZXJuYW1lIjoiJHtnaXZlbl91c2VybmFtZX0i"/&gt;
                    &lt;L7p:VariableToSet stringValue="userinfo.profile"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Used to validate that the MAS User Authentication occurred                                 successfully"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ImVtYWlsIjoiJHthdHRyLmVtYWlsfSI="/&gt;
                    &lt;L7p:VariableToSet stringValue="userinfo.email"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Used to validate that the MAS User Authentication occurred                                 successfully"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="InBob25lX251bWJlciI6IiR7YXR0ci5waG9uZX0i"/&gt;
                    &lt;L7p:VariableToSet stringValue="userinfo.phone"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Used to validate that the MAS User Authentication occurred                                 successfully"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ImFkZHJlc3MiOnt9"/&gt;
                    &lt;L7p:VariableToSet stringValue="userinfo.address"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// can be overwritten with any additional information"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="PHVzZXJpbmZvPg0KIDxwcm9maWxlPjwhW0NEQVRBWyR7dXNlcmluZm8ucHJvZmlsZX1dXT48L3Byb2ZpbGU+DQogPGVtYWlsPjwhW0NEQVRBWyR7dXNlcmluZm8uZW1haWx9XV0+PC9lbWFpbD4NCiA8cGhvbmU+PCFbQ0RBVEFbJHt1c2VyaW5mby5waG9uZX1dXT48L3Bob25lPg0KIDxhZGRyZXNzPjwhW0NEQVRBWyR7dXNlcmluZm8uYWRkcmVzc31dXT48L2FkZHJlc3M+DQo8L3VzZXJpbmZvPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="current.user.attributes"/&gt;
                &lt;/L7p:SetVariable&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// handle a call from '/userinfo' as an example"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${custom}"/&gt;
                    &lt;L7p:Expression2 stringValue="path=/generateOTP"/&gt;
                    &lt;L7p:Operator operator="CONTAINS"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="CONTAINS"/&gt;
                            &lt;L7p:RightValue stringValue="path=/generateOTP"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c2FtcGxlQGV4YW1wbGUuY29t"/&gt;
                    &lt;L7p:VariableToSet stringValue="email"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="KzEtMTIzLTU1NS01NTU1"/&gt;
                    &lt;L7p:VariableToSet stringValue="mobile"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// can be overwritten with any additional information"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="PHVzZXJpbmZvPg0KIDxlbWFpbD48IVtDREFUQVske2VtYWlsfV1dPjwvZW1haWw+DQogPG1vYmlsZT48IVtDREFUQVske21vYmlsZX1dXT48L21vYmlsZT4NCjwvdXNlcmluZm8+"/&gt;
                    &lt;L7p:VariableToSet stringValue="current.user.attributes"/&gt;
                &lt;/L7p:SetVariable&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// handle a call from '/generateOTP' as an example for a MAG                                 service"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:ExportVariables&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// export more variables if required"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:ExportedVars stringArrayValue="included"&gt;
                &lt;L7p:item stringValue="current.user.attributes"/&gt;
                &lt;L7p:item stringValue="current.user.role"/&gt;
            &lt;/L7p:ExportedVars&gt;
        &lt;/L7p:ExportVariables&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK User Attribute Look Up</l7:Name>
                    <l7:Id>3b6761a5d0ee0e2d4452b1065da5d85c</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.727Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="97d7268c-b68c-4035-bb45-28dfc2a4db88" id="3b6761a5d0ee0e2d4452b1065da5d85c" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fd6e8" guid="97d7268c-b68c-4035-bb45-28dfc2a4db88" id="3b6761a5d0ee0e2d4452b1065da5d85c" version="0">
<l7:Name>OTK User Attribute Look Up</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Required changes can be implemented in policies in the 'Customizations' folder "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === The policies within that folder will have the same name as this policy but "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === either prefixed with '#' or suffixed with 'Extensions'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Prefixed policies can be used to overwrite variables of this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Suffixed policies can be used to extend functionality"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you find you cannot add your customizations using the policies in the 'Customizations' folder"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy is referenced wherever user attributes have to be looked up from an LDAP configuration"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy uses a given username to retrieve attributes from an IDP"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="The default IDP can be overwritten in 'OTK User Attribute Look Up Extension'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="initialize"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// default IDP: Internal Identity Provider (IIP)"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="aWlw"/&gt;
            &lt;L7p:VariableToSet stringValue="current.user.idp"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// default: user"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="dXNlcg=="/&gt;
            &lt;L7p:VariableToSet stringValue="current.user.role"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// should be set to an internal, known by the IDP only, value"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="current.user.id"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// can be overwritten with any additional information"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="current.user.attributes"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="c922f32d-8814-4d82-be00-71e16586396b"/&gt;
        &lt;/L7p:Include&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK User Attribute Look Up</l7:Name>
                    <l7:Id>3b6761a5d0ee0e2d4452b1065da5d88a</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.727Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="3b6761a5d0ee0e2d4452b1065da5d88a" version="1">
                            <l7:Name>OTK User Attribute Look Up</l7:Name>
                            <l7:Guid>fb3a7c6b-6fc1-47b3-a823-2eecdfa173fe</l7:Guid>
                            <l7:PolicyReference id="3b6761a5d0ee0e2d4452b1065da5d85c" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>given_username</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Username</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Additional information</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>current.user.attributes</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>current.user.id</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>current.user.idp</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>current.user.role</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Look up attributes for a given username.</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>customAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>userAttrs16.png</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>97d7268c-b68c-4035-bb45-28dfc2a4db88</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>IFTTT Actions Account Management</l7:Name>
                    <l7:Id>d0c2108b72b11af05b03eb6dd44cca29</l7:Id>
                    <l7:Type>SERVICE</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.732Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Service id="d0c2108b72b11af05b03eb6dd44cca29" version="2">
                            <l7:ServiceDetail folderId="457652ee7bfc6625aa2134eb51922719" id="d0c2108b72b11af05b03eb6dd44cca29" version="2">
<l7:Name>IFTTT Actions Account Management</l7:Name>
<l7:Enabled>true</l7:Enabled>
<l7:ServiceMappings>
    <l7:HttpMapping>
        <l7:UrlPattern>/tutorial/otk/ifttt/ifttt/v1/actions/account_management</l7:UrlPattern>
        <l7:Verbs>
            <l7:Verb>GET</l7:Verb>
            <l7:Verb>POST</l7:Verb>
            <l7:Verb>PUT</l7:Verb>
            <l7:Verb>DELETE</l7:Verb>
        </l7:Verbs>
    </l7:HttpMapping>
</l7:ServiceMappings>
<l7:Properties>
    <l7:Property key="internal">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="policyRevision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="tracingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="wssProcessingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:ServiceDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This is the userinfo endpoint for IFTTT"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="IFTTT is expecting its own response format, therefore we                                 cannot reuse the OpenID Connect Userinfo API"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="63da1d1c-1984-4844-8a33-f6b662351892"/&gt;
        &lt;/L7p:Include&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// accept POST only, as documented by IFTTT"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b8822449-71ff-455b-8f10-39122e6c549b"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK HTTP Method Validation"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="method"/&gt;
                    &lt;L7p:value stringValue="POST"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Require an oauth token with scope=ifttt"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="393bcb93-82ad-4b55-8333-1119f607a560"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Require OAuth 2.0 Token"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cache_lifetime"/&gt;
                    &lt;L7p:value stringValue="30"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="given_access_token"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="onetime"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="scope_fail"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="scope_required"/&gt;
                    &lt;L7p:value stringValue="ifttt"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// found. At least one 'slug'/'triggerField' has to be requested"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Expression stringValue="actionFields"/&gt;
                    &lt;L7p:VariablePrefix stringValue="ifttt.req.actionFields"/&gt;
                &lt;/L7p:EvaluateJsonPathExpression&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${ifttt.req.actionFields.result}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="CONTAINS"/&gt;
                            &lt;L7p:RightValue stringValue="which_account"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// found. At least one 'actionField' has to be requested"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="The request did not include 'actionFields'"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="103"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// missing parameters"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="apiPrefix"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="givenErrorCode"/&gt;
                            &lt;L7p:value stringValue="103"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check for 'actionFields' in the request"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// find details about the current user"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fb3a7c6b-6fc1-47b3-a823-2eecdfa173fe"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK User Attribute Look Up"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="custom"/&gt;
                    &lt;L7p:value stringValue="/ifttt/v1/user/info"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="given_username"/&gt;
                    &lt;L7p:value stringValue="${session.subscriber_id}"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:EvaluateJsonPathExpression&gt;
                &lt;L7p:Expression stringValue="actionFields.which_account"/&gt;
                &lt;L7p:VariablePrefix stringValue="ifttt.req.account"/&gt;
            &lt;/L7p:EvaluateJsonPathExpression&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="JHtpZnR0dC5yZXEuYWNjb3VudC5yZXN1bHR9"/&gt;
                &lt;L7p:VariableToSet stringValue="account"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// extract the account number"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:UUIDGenerator&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// generate a sessionID"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:MaximumQuantity intValue="1"/&gt;
                &lt;L7p:TargetVariable stringValue="sessionID"/&gt;
            &lt;/L7p:UUIDGenerator&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ew0KCSJzZXNzaW9uIjogew0KCQkib3JpZ2luIjogIiR7cmVxdWVzdC51cmx9IiwNCgkJInVzZXJuYW1lIjogIiR7c2Vzc2lvbi5zdWJzY3JpYmVyX2lkfSIsDQoJCSJhY2Nlc3NfdG9rZW4iOiIke2FjY2Vzc190b2tlbn0iLA0KCQkic2Vzc2lvbl9pZCI6IiR7c2Vzc2lvbklEWzBdfSIsDQoJCSJhY2NvdW50IjoiJHthY2NvdW50fSINCgl9DQp9"/&gt;
                &lt;L7p:ContentType stringValue="application/json; charset=utf-8"/&gt;
                &lt;L7p:DataType variableDataType="message"/&gt;
                &lt;L7p:VariableToSet stringValue="session"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:Encapsulated&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="otkTutorialCache"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// referenced at /tutorial/otk/ifttt/bank"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="e5ee8bcf-1796-4297-88dd-c838031a6f6a"/&gt;
                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Cache Store"/&gt;
                &lt;L7p:Parameters mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="cacheID"/&gt;
                        &lt;L7p:value stringValue="otkTutorialCache"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="cacheKey"/&gt;
                        &lt;L7p:value stringValue="${session.subscriber_id}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="maxEntries"/&gt;
                        &lt;L7p:value stringValue="10"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="maxEntryAge"/&gt;
                        &lt;L7p:value stringValue="300"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="maxEntrySize"/&gt;
                        &lt;L7p:value stringValue="10000"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="msg"/&gt;
                        &lt;L7p:value stringValue="session"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Parameters&gt;
            &lt;/L7p:Encapsulated&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// create a session"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:HardcodedResponse&gt;
            &lt;L7p:Base64ResponseBody stringValue="ewogICJkYXRhIjogWwogICAgewogICAgICAiaWQiOiAiJHtzZXNzaW9uSURbMF19IiwKICAgICAgInVybCI6ICJodHRwczovLyR7cmVxdWVzdC51cmwuaG9zdH0vdHV0b3JpYWwvb3RrL2lmdHR0L2JhbmsiCiAgICB9CiAgXQp9"/&gt;
            &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
        &lt;/L7p:HardcodedResponse&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Service>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>#OTK Token Lifetime Configuration</l7:Name>
                    <l7:Id>24e6fd7c5b6fb3a96690246c8ac4931d</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.732Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="de4c1e4a-969b-4812-b5d9-a6d356d58c65" id="24e6fd7c5b6fb3a96690246c8ac4931d" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d16914781" guid="de4c1e4a-969b-4812-b5d9-a6d356d58c65" id="24e6fd7c5b6fb3a96690246c8ac4931d" version="0">
<l7:Name>#OTK Token Lifetime Configuration</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Target Configuration Policy: &amp;quot;OTK Token Lifetime                                 Configuration&amp;quot;"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Set custom values for Context Variables below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="=== Add any new Context Variables or extensions below ==="/&gt;
        &lt;/L7p:CommentAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Lifetime Configuration</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd8ba</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.734Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="04ae2694-e12c-4568-83df-aee29995d82b" id="e001cfd0c1c1ffaa18e187b5e72fd8ba" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fc858" guid="04ae2694-e12c-4568-83df-aee29995d82b" id="e001cfd0c1c1ffaa18e187b5e72fd8ba" version="0">
<l7:Name>OTK Token Lifetime Configuration</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Required changes can be implemented in policies in the 'Customizations' folder "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === The policies within that folder will have the same name as this policy but "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === either prefixed with '#' or suffixed with 'Extensions'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Prefixed policies can be used to overwrite variables of this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === Suffixed policies can be used to extend functionality"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you find you cannot add your customizations using the policies in the 'Customizations' folder"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Configure the lifetimes as desired."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Only 'consumer_key' and 'client_id' values can be '0'."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="The maximum TTL for Cassandra is 20 years"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="--- These values are used at 'OTK Generate OAuth Token'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="---"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="OAuth 1.0 lifetime for token"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="minutes"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="forever"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
            &lt;L7p:VariableToSet stringValue="oauth_v1_consumer_key_lifetime_m"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="seconds"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="24 hours"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ODY0MDA="/&gt;
            &lt;L7p:VariableToSet stringValue="oauth_v1_access_token_lifetime_s"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="seconds"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="5 minutes"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
            &lt;L7p:VariableToSet stringValue="oauth_v1_request_token_lifetime_s"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="---"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="OAuth 2.0 token lifetime"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="seconds"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="5 minutes"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
            &lt;L7p:VariableToSet stringValue="oauth2_auth_code_lifetime_sec"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="seconds"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="1 hour"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="MzYwMA=="/&gt;
            &lt;L7p:VariableToSet stringValue="oauth2_access_token_lifetime_sec"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="seconds"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="NjA0ODAw"/&gt;
            &lt;L7p:VariableToSet stringValue="oauth2_refresh_token_lifetime_sec"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="minutes"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="forever"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
            &lt;L7p:VariableToSet stringValue="oauth2_client_id_lifetime_m"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="The value below is used with MAG on the API /connect/client/initialize"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="client_id's issued via that endpoint have a limited lifetime"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="minutes"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="7 days"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="MTAwODA="/&gt;
            &lt;L7p:VariableToSet stringValue="oauth2_client_id_lifetime_SDK_m"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="---"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="OpenID Connect id_token lifetime"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This value represents a 'session' lifetime. As long as this token is valid it can be used with the jwt-bearer oauth grant_type"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This valus is used at 'OTK Generate id_token - HS256'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="seconds"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="24 hours"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ODY0MDA="/&gt;
            &lt;L7p:VariableToSet stringValue="id_token_lifetime_s"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="de4c1e4a-969b-4812-b5d9-a6d356d58c65"/&gt;
        &lt;/L7p:Include&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Lifetime Configuration</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fdbf2</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.734Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fdbf2" version="1">
                            <l7:Name>OTK Token Lifetime Configuration</l7:Name>
                            <l7:Guid>49441438-153b-44f8-b3f4-085a9ea615fa</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd8ba" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom input values</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>id_token_lifetime_s</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_access_token_lifetime_sec</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_auth_code_lifetime_sec</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_client_id_lifetime_SDK_m</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_client_id_lifetime_m</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth2_refresh_token_lifetime_sec</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth_v1_access_token_lifetime_s</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth_v1_consumer_key_lifetime_m</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>oauth_v1_request_token_lifetime_s</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Exports variables with configured lifetimes for OAuth tokens and OAuth client credentials. The variable names end with an indicator for the time unit such as seconds (sec,s) or minutes (m)</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Configuration</l7:StringValue>
</l7:Property>
<l7:Property key="doc_require_customization">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>ServerRegistry.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>04ae2694-e12c-4568-83df-aee29995d82b</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Generate OAuth Token</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd932</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.742Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="42cdc537-b6e1-432f-a9cd-27fc61182d77" id="e001cfd0c1c1ffaa18e187b5e72fd932" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fc858" guid="42cdc537-b6e1-432f-a9cd-27fc61182d77" id="e001cfd0c1c1ffaa18e187b5e72fd932" version="0">
<l7:Name>OTK Generate OAuth Token</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Poilcy generates tokens and their lifetimes"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="49441438-153b-44f8-b3f4-085a9ea615fa"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Lifetime Configuration"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="custom"/&gt;
                    &lt;L7p:value stringValue="${custom}"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="=== OAuth 2.0 ==================="/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${at}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue="${oauth2_access_token_lifetime_sec}"/&gt;
                    &lt;L7p:VariableToSet stringValue="expiration"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtvYXV0aDJfYWNjZXNzX3Rva2VuX2xpZmV0aW1lX3NlY30="/&gt;
                    &lt;L7p:VariableToSet stringValue="lifetime"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="access token oauth 2.0"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${rft}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue="${oauth2_refresh_token_lifetime_sec}"/&gt;
                    &lt;L7p:VariableToSet stringValue="expiration"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtvYXV0aDJfcmVmcmVzaF90b2tlbl9saWZldGltZV9zZWN9"/&gt;
                    &lt;L7p:VariableToSet stringValue="lifetime"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="refresh token oauth 2.0"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${ac}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue="${oauth2_auth_code_lifetime_sec}"/&gt;
                    &lt;L7p:VariableToSet stringValue="expiration"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtvYXV0aDJfYXV0aF9jb2RlX2xpZmV0aW1lX3NlY30="/&gt;
                    &lt;L7p:VariableToSet stringValue="lifetime"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="authorization_code"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cid}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${oauth2_client_id_lifetime_m}"/&gt;
                            &lt;L7p:Expression2 stringValue="0"/&gt;
                            &lt;L7p:Operator operator="GT"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue="${oauth2_client_id_lifetime_m}"/&gt;
                            &lt;L7p:DateOffsetField intValue="12"/&gt;
                            &lt;L7p:VariableToSet stringValue="expiration"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtvYXV0aDJfY2xpZW50X2lkX2xpZmV0aW1lX219"/&gt;
                            &lt;L7p:VariableToSet stringValue="lifetime"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="expiration.seconds"/&gt;
                    &lt;/L7p:SetVariable&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="client_id"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cidm}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${oauth2_client_id_lifetime_SDK_m}"/&gt;
                            &lt;L7p:Expression2 stringValue="0"/&gt;
                            &lt;L7p:Operator operator="GT"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue="${oauth2_client_id_lifetime_SDK_m}"/&gt;
                            &lt;L7p:DateOffsetField intValue="12"/&gt;
                            &lt;L7p:VariableToSet stringValue="expiration"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtvYXV0aDJfY2xpZW50X2lkX2xpZmV0aW1lX1NES19tfQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="lifetime"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                        &lt;L7p:VariableToSet stringValue="expiration.seconds"/&gt;
                    &lt;/L7p:SetVariable&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="client_id for Mobile SDK"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="=== OAuth 1.0 ==================="/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${urt}"/&gt;
                        &lt;L7p:Expression2 stringValue="true"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${art}"/&gt;
                        &lt;L7p:Expression2 stringValue="true"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue="${oauth_v1_request_token_lifetime_s}"/&gt;
                    &lt;L7p:VariableToSet stringValue="expiration"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtvYXV0aF92MV9yZXF1ZXN0X3Rva2VuX2xpZmV0aW1lX3N9"/&gt;
                    &lt;L7p:VariableToSet stringValue="lifetime"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="unauthorized/ authorized request token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${ot}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue="${oauth_v1_access_token_lifetime_s}"/&gt;
                    &lt;L7p:VariableToSet stringValue="expiration"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtvYXV0aF92MV9hY2Nlc3NfdG9rZW5fbGlmZXRpbWVfc30="/&gt;
                    &lt;L7p:VariableToSet stringValue="lifetime"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="oauth_token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${ock}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${oauth_v1_consumer_key_lifetime_m}"/&gt;
                            &lt;L7p:Expression2 stringValue="0"/&gt;
                            &lt;L7p:Operator operator="GT"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue="${oauth_v1_consumer_key_lifetime_m}"/&gt;
                            &lt;L7p:DateOffsetField intValue="12"/&gt;
                            &lt;L7p:VariableToSet stringValue="expiration"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                            &lt;L7p:VariableToSet stringValue="expiration.seconds"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                            &lt;L7p:VariableToSet stringValue="lifetime"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="oauth_consumer_key"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Set the lifetime for the token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:UUIDGenerator&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Generate the token and the secret"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:MaximumQuantity intValue="2"/&gt;
            &lt;L7p:Quantity stringValue="2"/&gt;
            &lt;L7p:TargetVariable stringValue="tokenSecret"/&gt;
        &lt;/L7p:UUIDGenerator&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHt0b2tlblNlY3JldFswXX0="/&gt;
            &lt;L7p:VariableToSet stringValue="genToken"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHt0b2tlblNlY3JldFsxXX0="/&gt;
            &lt;L7p:VariableToSet stringValue="genSecret"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtleHBpcmF0aW9uLnNlY29uZHN9"/&gt;
            &lt;L7p:VariableToSet stringValue="genExpiration"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Generate OAuth Token</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fdb08</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.742Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fdb08" version="1">
                            <l7:Name>OTK Generate OAuth Token</l7:Name>
                            <l7:Guid>6dbc70f9-bb40-4a69-a0ec-88fae4f35300</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd932" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>ac</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Authorization Code (OAuth 2.0)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>at</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Access Token (OAuth 2.0)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>rft</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Refresh Token (OAuth 2.0)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>cid</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>Client ID (OAuth 2.0)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>urt</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>request_token (OAuth 1.0)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>art</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>authorized request token (OAuth 1.0)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>7</l7:Ordinal>
    <l7:ArgumentName>ot</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>oauth_token (OAuth 1.0)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>8</l7:Ordinal>
    <l7:ArgumentName>ock</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>oauth_consumer_key (OAuth 1.0)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>9</l7:Ordinal>
    <l7:ArgumentName>cidm</l7:ArgumentName>
    <l7:ArgumentType>boolean</l7:ArgumentType>
    <l7:GuiLabel>[mag] Client ID (Auth 2.0, Mobile SDK)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>10</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom for special purposes</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>genExpiration</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>genSecret</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>genToken</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>lifetime</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Exports variables that are used as OAuth token or OAuth client credentials. At least and at most one of the input parameters should be configured to 'true'. If 'true' is selected mutiple times the 'first one' wins. If none is selected with 'true' the assertion will fail.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Configuration</l7:StringValue>
</l7:Property>
<l7:Property key="doc_out_genExpiration">
    <l7:StringValue>The expiration date in seconds (10-digits). The value depends on configurations of 'OTK Token Lifetime Configuration'</l7:StringValue>
</l7:Property>
<l7:Property key="doc_out_lifetime">
    <l7:StringValue>The lifetime in seconds. The value depends on configurations of 'OTK Token Lifetime Configuration'</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>oauth.png</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>42cdc537-b6e1-432f-a9cd-27fc61182d77</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token DB Count Check</l7:Name>
                    <l7:Id>97975cf167f141f884f61a2392d544d2</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.745Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="876cbb25-92f0-4448-82b9-4d2a8ac1d4ea" id="97975cf167f141f884f61a2392d544d2" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcbcd" guid="876cbb25-92f0-4448-82b9-4d2a8ac1d4ea" id="97975cf167f141f884f61a2392d544d2" version="0">
<l7:Name>OTK Token DB Count Check</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Parameter 'other' is available but currently not used"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="initialize"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// will be overwritten in the case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// missing parameter"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                    &lt;L7p:NamingMap mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="created"/&gt;
                            &lt;L7p:value stringValue="created"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="token"/&gt;
                            &lt;L7p:value stringValue="access_tokens"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:NamingMap&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[SELECT token, created
        FROM oauth_token
        WHERE client_ident=${client} AND resource_owner=${resource_owner}
        ORDER BY created]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="tokenQuery"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="count"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// count Access Tokens"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="Selecting data failed. Given client_ident: '${client}'"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token DB Count Check</l7:Name>
                    <l7:Id>49ed796ade964a2e886f779711689fd2</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.745Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="49ed796ade964a2e886f779711689fd2" version="1">
                            <l7:Name>OTK Token DB Count Check</l7:Name>
                            <l7:Guid>feb37412-4c25-48a7-9bc3-e47cde29ba4f</l7:Guid>
                            <l7:PolicyReference id="97975cf167f141f884f61a2392d544d2" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>client</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>resource_owner</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>tokenQuery.access_tokens</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>tokenQuery.created</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>tokenQuery.queryresult.count</l7:ResultName>
    <l7:ResultType>integer</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Returns a count of Access Tokens associated with a given Client (App) and resource owner.</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>customAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>Save16.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>876cbb25-92f0-4448-82b9-4d2a8ac1d4ea</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token DB Revocation</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fcc99</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.762Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="189e582f-078e-4fb9-b016-a7d419cd2fa6" id="e001cfd0c1c1ffaa18e187b5e72fcc99" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcbcd" guid="189e582f-078e-4fb9-b016-a7d419cd2fa6" id="e001cfd0c1c1ffaa18e187b5e72fcc99" version="0">
<l7:Name>OTK Token DB Revocation</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy revokes an oauth token"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="result"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="initialize"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="will be overwritten in the case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${rtoken}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="parameters"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="check for parameters"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_token
                                WHERE client_key=${client_key}
                                AND resource_owner=${resource_owner}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="client_key, resource_owner"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${rtoken}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="parameters"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="check for parameters"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Delete access tokens"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_token
                                WHERE client_key=${client_key}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Delete temp tokens"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_initiate
                                WHERE client_key=${client_key}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="client_key"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${rtoken}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="parameters"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="check for parameters"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_token
                                WHERE resource_owner=${resource_owner}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="resource_owner"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${rtoken}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="parameters"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="check for parameters"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_token
                                WHERE token=${token}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${rtoken}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="parameters"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="check for parameters"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionFailureEnabled booleanValue="false"/&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[DELETE FROM oauth_token
                                WHERE rtoken=${rtoken}]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="refresh_token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtxdWVyeS5xdWVyeXJlc3VsdC5jb3VudH0gdG9rZW4ocykgcmV2b2tlZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="result"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="dGV4dC9wbGFpbjtjaGFyc2V0PVVURi04"/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token DB Revocation</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fce4a</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.762Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fce4a" version="1">
                            <l7:Name>OTK Token DB Revocation</l7:Name>
                            <l7:Guid>741a1e52-d578-4e9c-90d6-8716164d1cd3</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fcc99" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>client_key</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>resource_owner</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>rtoken</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>result</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Revokes a token.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Storage_Access</l7:StringValue>
</l7:Property>
<l7:Property key="doc_usage">
    <l7:StringValue>Internal</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>Save16.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>189e582f-078e-4fb9-b016-a7d419cd2fa6</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Revocation</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd95a</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.770Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="0ebddc40-9c7e-4e26-8cf3-527afc9d8591" id="e001cfd0c1c1ffaa18e187b5e72fd95a" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcfce" guid="0ebddc40-9c7e-4e26-8cf3-527afc9d8591" id="e001cfd0c1c1ffaa18e187b5e72fd95a" version="0">
<l7:Name>OTK Token Revocation</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy deletes a client. Either from the local database or via an API"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="db047e91-52db-4176-a3eb-a43aa0c2c67c"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Storage Configuration"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="custom"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="error code"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="overwritten in case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="DB location"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Set the location to access the database"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${host_oauth_tokenstore_server}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item regex="included"&gt;
                            &lt;L7p:Pattern stringValue="http[s]?://(localhost|127[.]0[.]0[.]1).+"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="DB location"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Set the location to access the database"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                            &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="cassandra"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="741a1e52-d578-4e9c-90d6-8716164d1cd3"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token DB Revocation"/&gt;
                            &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                        &lt;/L7p:Encapsulated&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                            &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="cassandra"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="35923c67-8fba-4682-9b0a-193060ca608a"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Nosql Revocation"/&gt;
                            &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                        &lt;/L7p:Encapsulated&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="dbsystem"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="check the dbsystem for SQL or NoSQL"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="local"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${isLocal}"/&gt;
                    &lt;L7p:Expression2 stringValue="false"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="resource_owner"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="resource_owner"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="token"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="token"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="rtoken"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="rtoken"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:ContentType stringValue="text/plain; charset=UTF-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="emptyMessage"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="no-fail"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="always succeed"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="DELETE"/&gt;
                    &lt;L7p:PassThroughSoapFaults booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_tokenstore_server}/oauth/tokenstore/revoke?client_key=${client_key}&amp;amp;resource_owner=${resource_owner}&amp;amp;token=${token}&amp;amp;rtoken=${rtoken}"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="emptyMessage"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLngtY2EtZXJyfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${httpRouting.reasonCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="500"/&gt;
                        &lt;L7p:Operator operator="LT"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="LT"/&gt;
                                &lt;L7p:RightValue stringValue="500"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="routing failed!"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set error code to 000"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="routing errors"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture the last 3 digits"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="error.code"/&gt;
                            &lt;L7p:Regex stringValue="(\d{0,16})(\d{3})$"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="$2"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="error.code"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLmNvbnRlbnQtdHlwZX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="content-type"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLm1haW5wYXJ0fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="result"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="remote"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Revocation</l7:Name>
                    <l7:Id>3f6b5c92ca2ac3665bc7d8780bc4d892</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.770Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="3f6b5c92ca2ac3665bc7d8780bc4d892" version="1">
                            <l7:Name>OTK Token Revocation</l7:Name>
                            <l7:Guid>b4d99254-0b3e-494a-825d-68db32c30072</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd95a" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>client_key</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Client ID</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>resource_owner</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Resource Owner</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Token</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>rtoken</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Refresh Token</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>result</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Revokes a token or many, depending on the parameters used.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Storage_Delegate</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>down-button.gif</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>0ebddc40-9c7e-4e26-8cf3-527afc9d8591</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Count</l7:Name>
                    <l7:Id>3f42c73314d6b36fb7ebe93f600808ff</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.777Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="2714f797-3e21-4954-a1d8-894b18e338af" id="3f42c73314d6b36fb7ebe93f600808ff" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fc898" guid="2714f797-3e21-4954-a1d8-894b18e338af" id="3f42c73314d6b36fb7ebe93f600808ff" version="0">
<l7:Name>OTK Token Count</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Ensure OTK Token count is within configured limits"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                        &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                        &lt;L7p:Operator operator="NE"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:Operator operator="NE"/&gt;
                                &lt;L7p:RightValue stringValue="cassandra"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="feb37412-4c25-48a7-9bc3-e47cde29ba4f"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token DB Count Check"/&gt;
                        &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="MySQL, Oracle"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                        &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:RightValue stringValue="cassandra"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="00235830-1a36-4a46-9849-f7af651a0b57"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token NoSQL Count Check"/&gt;
                        &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Cassandra"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="Unable to retrieve Token count from the database"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Error"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Get current count"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="No Results"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Expression1 stringValue="${tokenQuery.queryresult.count}"/&gt;
                        &lt;L7p:Expression2 stringValue="0"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:RightValue stringValue="0"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${tokenQuery.queryresult.count}"/&gt;
                            &lt;L7p:Expression2 stringValue="0"/&gt;
                            &lt;L7p:Operator operator="GT"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHt0b2tlblF1ZXJ5LmFjY2Vzc190b2tlbnNbMF19"/&gt;
                            &lt;L7p:VariableToSet stringValue="oldestToken"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHt0b2tlblF1ZXJ5LmNyZWF0ZWRbMF19"/&gt;
                            &lt;L7p:VariableToSet stringValue="oldestTokenCreated"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Results"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Check results"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Set count and oldest token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Within limit"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Expression1 stringValue="${tokenQuery.queryresult.count}"/&gt;
                    &lt;L7p:Expression2 stringValue="${max_oauth_token_count}"/&gt;
                    &lt;L7p:Operator operator="LT"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Operator operator="LT"/&gt;
                            &lt;L7p:RightValue stringValue="${max_oauth_token_count}"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:Expression1 stringValue="${tokenQuery.queryresult.count}"/&gt;
                        &lt;L7p:Expression2 stringValue="${max_oauth_token_count}"/&gt;
                        &lt;L7p:Operator operator="GE"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:Operator operator="GE"/&gt;
                                &lt;L7p:RightValue stringValue="${max_oauth_token_count}"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:Expression1 stringValue="${max_oauth_token_behaviour}"/&gt;
                                &lt;L7p:Expression2 stringValue="error"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="error"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="MTM1"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:FalseAssertion/&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Error"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:Expression1 stringValue="${max_oauth_token_behaviour}"/&gt;
                                &lt;L7p:Expression2 stringValue="cycle"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="cycle"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Revoke oldest token"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b4d99254-0b3e-494a-825d-68db32c30072"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Revocation"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="client_key"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource_owner"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="rtoken"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="token"/&gt;
                                    &lt;L7p:value stringValue="${oldestToken}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Cycle"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Max reached"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Check count against limit"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
        &lt;/wsp:All&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Count</l7:Name>
                    <l7:Id>35f5ccf02323692c2c4a2f0545010a1d</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.777Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="35f5ccf02323692c2c4a2f0545010a1d" version="1">
                            <l7:Name>OTK Token Count</l7:Name>
                            <l7:Guid>641fd66c-9937-40d2-8935-3f92905408c8</l7:Guid>
                            <l7:PolicyReference id="3f42c73314d6b36fb7ebe93f600808ff" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>client</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>dbsystem</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>max_oauth_token_behaviour</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>max_oauth_token_count</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>resource_owner</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>result</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Ensure OTK Token count is within configured limits</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>2714f797-3e21-4954-a1d8-894b18e338af</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token DB Storage</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fccd5</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.797Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="4fce0792-26df-4b69-88af-976d8408d1b8" id="e001cfd0c1c1ffaa18e187b5e72fccd5" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcbcd" guid="4fce0792-26df-4b69-88af-976d8408d1b8" id="e001cfd0c1c1ffaa18e187b5e72fccd5" version="0">
<l7:Name>OTK Token DB Storage</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="result"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:DataType variableDataType="dateTime"/&gt;
            &lt;L7p:DateOffsetExpression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="now"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:UUIDGenerator&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Primary key for oauth_token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:MaximumQuantity intValue="1"/&gt;
            &lt;L7p:TargetVariable stringValue="tokenid"/&gt;
        &lt;/L7p:UUIDGenerator&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHt0b2tlbmlkWzBdfQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="tokenid"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${custom}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="e30="/&gt;
                &lt;L7p:VariableToSet stringValue="custom"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="custom"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="set it to a default value if it is empty"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${token_status}"/&gt;
                &lt;L7p:Expression2 stringValue="ENABLED"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="ENABLED"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="RElTQUJMRUQ="/&gt;
                &lt;L7p:VariableToSet stringValue="token_status"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="status"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check if the token status is ENABLED. Set it to DISABLED otherwise"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${tokentype}"/&gt;
                    &lt;L7p:Expression2 stringValue="oauth2rtoken"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="oauth2rtoken"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client_name}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${expiration}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${rexpiration}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${rtoken}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${scope}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${token_status}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="641fd66c-9937-40d2-8935-3f92905408c8"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Count"/&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="INSERT"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Store the access_token"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[INSERT INTO oauth_token (otk_token_id, token, secret, expiration, client_key, resource_owner, status, rtoken, rexpiration, created, client_name, scope, custom, client_ident)
                                VALUES (${tokenid}, ${token}, ${token_secret}, ${expiration}, ${client_key}, ${resource_owner}, ${token_status}, ${rtoken}, ${rexpiration}, ${now.seconds}, ${client_name}, ${scope}, ${custom}, ${client})]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="access_token, refresh_token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${tokentype}"/&gt;
                    &lt;L7p:Expression2 stringValue="temporary"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="temporary"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client_name}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${expiration}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${scope}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="b29i"/&gt;
                        &lt;L7p:VariableToSet stringValue="scope"/&gt;
                    &lt;/L7p:SetVariable&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${scope}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="b29i"/&gt;
                        &lt;L7p:VariableToSet stringValue="scope"/&gt;
                    &lt;/L7p:SetVariable&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Store the request token"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[INSERT INTO oauth_initiate (token, secret, expiration, callback, client_key, client_name, created, scope, resource_owner, custom)
                                VALUES(
                                ${token},
                                ${token_secret},
                                ${expiration},
                                ${callback},
                                ${client_key},
                                ${client_name},
                                ${now.seconds},
                                ${scope},
                                ${resource_owner},
                                ${custom})]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="request_token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${tokentype}"/&gt;
                    &lt;L7p:Expression2 stringValue="oauth2token"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="oauth2token"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client_key}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${client_name}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${expiration}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${resource_owner}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${scope}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${token_status}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="client_credentials"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${client_name}"/&gt;
                        &lt;L7p:Expression2 stringValue="${resource_owner}"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="${resource_owner}"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="641fd66c-9937-40d2-8935-3f92905408c8"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Count"/&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="token limit"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:JdbcQuery&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="INSERT"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Store the access_token"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:ConnectionName stringValue="OAuth"/&gt;
                    &lt;L7p:MaxRecords intValue="1000"/&gt;
                    &lt;L7p:SqlQuery stringValueReference="inline"&gt;&lt;![CDATA[INSERT INTO oauth_token (otk_token_id, token, secret, expiration, client_key, client_ident, resource_owner, status, created, client_name, scope, custom)
                                VALUES (${tokenid}, ${token}, ${token_secret}, ${expiration}, ${client_key}, ${client}, ${resource_owner}, ${token_status}, ${now.seconds}, ${client_name}, ${scope}, ${custom})]]&gt;&lt;/L7p:SqlQuery&gt;
                    &lt;L7p:VariablePrefix stringValue="query"/&gt;
                &lt;/L7p:JdbcQuery&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                        &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Set code"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="store"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Store the token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="dGV4dC9wbGFpbjtjaGFyc2V0PVVURi04"/&gt;
            &lt;L7p:VariableToSet stringValue="content-type"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="cGVyc2lzdGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="result"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token DB Storage</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fcdd8</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.797Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="e001cfd0c1c1ffaa18e187b5e72fcdd8" version="1">
                            <l7:Name>OTK Token DB Storage</l7:Name>
                            <l7:Guid>1861c3a9-2698-41be-80d8-92841540e550</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fccd5" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>callback</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>client_key</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>client_name</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>token_status</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>expiration</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>resource_owner</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>7</l7:Ordinal>
    <l7:ArgumentName>scope</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>8</l7:Ordinal>
    <l7:ArgumentName>token_secret</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>9</l7:Ordinal>
    <l7:ArgumentName>token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>10</l7:Ordinal>
    <l7:ArgumentName>tokentype</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>11</l7:Ordinal>
    <l7:ArgumentName>temp_token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>12</l7:Ordinal>
    <l7:ArgumentName>rtoken</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>13</l7:Ordinal>
    <l7:ArgumentName>rexpiration</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>14</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>16</l7:Ordinal>
    <l7:ArgumentName>client</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>17</l7:Ordinal>
    <l7:ArgumentName>max_oauth_token_count</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>18</l7:Ordinal>
    <l7:ArgumentName>max_oauth_token_behaviour</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>19</l7:Ordinal>
    <l7:ArgumentName>dbsystem</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>result</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Persists the given token.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Storage_Access</l7:StringValue>
</l7:Property>
<l7:Property key="doc_usage">
    <l7:StringValue>Internal</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>Save16.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>4fce0792-26df-4b69-88af-976d8408d1b8</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Storage (access_token, refresh_token)</l7:Name>
                    <l7:Id>e001cfd0c1c1ffaa18e187b5e72fd7b5</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.809Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="84a2a148-f963-4a45-a2ea-9f3de864bf2b" id="e001cfd0c1c1ffaa18e187b5e72fd7b5" version="0">
                            <l7:PolicyDetail folderId="e001cfd0c1c1ffaa18e187b5e72fcfce" guid="84a2a148-f963-4a45-a2ea-9f3de864bf2b" id="e001cfd0c1c1ffaa18e187b5e72fd7b5" version="0">
<l7:Name>OTK Token Storage (access_token, refresh_token)</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="db047e91-52db-4176-a3eb-a43aa0c2c67c"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Storage Configuration"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="custom"/&gt;
                    &lt;L7p:value stringValue="${custom}"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="error code"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="overwritten in case of an error"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="DB location"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Set the location to access the database"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="b2F1dGgycnRva2Vu"/&gt;
            &lt;L7p:VariableToSet stringValue="tokentype"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${host_oauth_tokenstore_server}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item regex="included"&gt;
                            &lt;L7p:Pattern stringValue="http[s]?://(localhost|127[.]0[.]0[.]1).+"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="DB location"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Set the location to access the database"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="isLocal"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                            &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="cassandra"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1861c3a9-2698-41be-80d8-92841540e550"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token DB Storage"/&gt;
                            &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                        &lt;/L7p:Encapsulated&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${dbsystem}"/&gt;
                            &lt;L7p:Expression2 stringValue="cassandra"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="cassandra"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="31db819e-1744-4d75-997f-304ed4a53503"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token NoSQL Storage"/&gt;
                            &lt;L7p:NoOpIfConfigMissing booleanValue="true"/&gt;
                        &lt;/L7p:Encapsulated&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="dbsystem"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="check the dbsystem for SQL or NoSQL"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="local"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${isLocal}"/&gt;
                    &lt;L7p:Expression2 stringValue="false"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="client"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="client_name"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_name"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="expiration"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="expiration"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="rexpiration"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="rexpiration"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="rtoken"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="rtoken"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="resource_owner"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="resource_owner"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="scope"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="scope"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="token_status"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="token_status"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="token"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="token"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="custom"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="custom"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${token_secret}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="Y2xpZW50X2tleT0ke2NsaWVudF9rZXl9JmNsaWVudD0ke2NsaWVudH0mY2xpZW50X25hbWU9JHtjbGllbnRfbmFtZX0mZXhwaXJhdGlvbj0ke2V4cGlyYXRpb259JnJleHBpcmF0aW9uPSR7cmV4cGlyYXRpb259JnJ0b2tlbj0ke3J0b2tlbn0mcmVzb3VyY2Vfb3duZXI9JHtyZXNvdXJjZV9vd25lcn0mc2NvcGU9JHtzY29wZX0mc3RhdHVzPSR7dG9rZW5fc3RhdHVzfSZ0b2tlbj0ke3Rva2VufSZjdXN0b209JHtjdXN0b219"/&gt;
                            &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:EncodeDecode&gt;
                            &lt;L7p:SourceVariableName stringValue="token_secret"/&gt;
                            &lt;L7p:TargetDataType variableDataType="string"/&gt;
                            &lt;L7p:TargetVariableName stringValue="token_secret"/&gt;
                            &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                        &lt;/L7p:EncodeDecode&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="Y2xpZW50X2tleT0ke2NsaWVudF9rZXl9JmNsaWVudD0ke2NsaWVudH0mY2xpZW50X25hbWU9JHtjbGllbnRfbmFtZX0mZXhwaXJhdGlvbj0ke2V4cGlyYXRpb259JnJleHBpcmF0aW9uPSR7cmV4cGlyYXRpb259JnJ0b2tlbj0ke3J0b2tlbn0mcmVzb3VyY2Vfb3duZXI9JHtyZXNvdXJjZV9vd25lcn0mc2NvcGU9JHtzY29wZX0mc3RhdHVzPSR7dG9rZW5fc3RhdHVzfSZ0b2tlbj0ke3Rva2VufSZzZWNyZXQ9JHt0b2tlbl9zZWNyZXR9JmN1c3RvbT0ke2N1c3RvbX0="/&gt;
                            &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded; charset=UTF-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="no-fail"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="always success"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:PassThroughSoapFaults booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_tokenstore_server}/oauth/tokenstore/store"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="message"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLngtY2EtZXJyfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${httpRouting.reasonCode}"/&gt;
                        &lt;L7p:Expression2 stringValue="500"/&gt;
                        &lt;L7p:Operator operator="LT"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="LT"/&gt;
                                &lt;L7p:RightValue stringValue="500"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="routing failed!"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error code"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="set error code to 000"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="routing errors"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${error.code}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="capture the last 3 digits"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="error.code"/&gt;
                            &lt;L7p:Regex stringValue="(\d{0,16})(\d{3})$"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="$2"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="error"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="error.code"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLmh0dHAuaGVhZGVyLmNvbnRlbnQtdHlwZX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="content-type"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwLm1haW5wYXJ0fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="result"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="remote"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="database"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
            &lt;L7p:Expression1 stringValue="${result}"/&gt;
            &lt;L7p:Expression2 stringValue="persisted"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:RightValue stringValue="persisted"/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Token Storage (access_token, refresh_token)</l7:Name>
                    <l7:Id>3f6b5c92ca2ac3665bc7d8780bc4d7fc</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.809Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="3f6b5c92ca2ac3665bc7d8780bc4d7fc" version="1">
                            <l7:Name>OTK Token Storage (access_token, refresh_token)</l7:Name>
                            <l7:Guid>23ffb2fe-daba-4395-93b5-91d5a4f23649</l7:Guid>
                            <l7:PolicyReference id="e001cfd0c1c1ffaa18e187b5e72fd7b5" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>client</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Client</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>client_key</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Client Key</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>client_name</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Client Name</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>expiration</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Expiration</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>resource_owner</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Resource Owner</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>rexpiration</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Refresh Token Expiration</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>7</l7:Ordinal>
    <l7:ArgumentName>rtoken</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Refresh Token</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>8</l7:Ordinal>
    <l7:ArgumentName>scope</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>SCOPE</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>9</l7:Ordinal>
    <l7:ArgumentName>token_status</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Token Status</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>10</l7:Ordinal>
    <l7:ArgumentName>token</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Access Token</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>11</l7:Ordinal>
    <l7:ArgumentName>token_secret</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Token Secret*</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>12</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>JSON with session values</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>content-type</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>result</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Persists an OAuth 2.0 access_token and refresh_token. The token secret is optional.</l7:StringValue>
</l7:Property>
<l7:Property key="doc_category">
    <l7:StringValue>Storage_Delegate</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>internalAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>down-button.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>84a2a148-f963-4a45-a2ea-9f3de864bf2b</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>IFTTT Test Setup</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bc9e46</l7:Id>
                    <l7:Type>SERVICE</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.813Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Service id="5dbe8b411167eae8d109f6a968bc9e46" version="2">
                            <l7:ServiceDetail folderId="457652ee7bfc6625aa2134eb51924873" id="5dbe8b411167eae8d109f6a968bc9e46" version="2">
<l7:Name>IFTTT Test Setup</l7:Name>
<l7:Enabled>true</l7:Enabled>
<l7:ServiceMappings>
    <l7:HttpMapping>
        <l7:UrlPattern>/tutorial/otk/ifttt/ifttt/v1/test/setup</l7:UrlPattern>
        <l7:Verbs>
            <l7:Verb>GET</l7:Verb>
            <l7:Verb>POST</l7:Verb>
            <l7:Verb>PUT</l7:Verb>
            <l7:Verb>DELETE</l7:Verb>
        </l7:Verbs>
    </l7:HttpMapping>
</l7:ServiceMappings>
<l7:Properties>
    <l7:Property key="internal">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="policyRevision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="tracingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="wssProcessingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:ServiceDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This API is part of the IFTTT automated test suite"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="The response has to include examples of all IFTTT 'Actions' and 'Triggers'!"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="63da1d1c-1984-4844-8a33-f6b662351892"/&gt;
        &lt;/L7p:Include&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="ae9b04c7-0038-4e04-8eaf-d4a44f1bd5ca"/&gt;
        &lt;/L7p:Include&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// accept POST only, as documented by IFTTT"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b8822449-71ff-455b-8f10-39122e6c549b"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK HTTP Method Validation"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="method"/&gt;
                    &lt;L7p:value stringValue="POST"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Generate an access_token for testing purposes"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// generate an access_token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="6dbc70f9-bb40-4a69-a0ec-88fae4f35300"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Generate OAuth Token"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ac"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="art"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="at"/&gt;
                    &lt;L7p:value stringValue="true"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cid"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cidm"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="custom"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ock"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ot"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="rft"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="urt"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtnZW5Ub2tlbn0="/&gt;
            &lt;L7p:VariableToSet stringValue="access_token"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtnZW5FeHBpcmF0aW9ufQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="access_token_expiration"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// generate a refresh_token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="6dbc70f9-bb40-4a69-a0ec-88fae4f35300"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Generate OAuth Token"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ac"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="art"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="at"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cid"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cidm"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="custom"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ock"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ot"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="rft"/&gt;
                    &lt;L7p:value stringValue="true"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="urt"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtnZW5Ub2tlbn0="/&gt;
            &lt;L7p:VariableToSet stringValue="refresh_token"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtnZW5FeHBpcmF0aW9ufQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="refresh_token_expiration"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:Encapsulated&gt;
                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="23ffb2fe-daba-4395-93b5-91d5a4f23649"/&gt;
                &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Token Storage (access_token, refresh_token)"/&gt;
                &lt;L7p:Parameters mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="client"/&gt;
                        &lt;L7p:value stringValue="${gateway.ifttt.client}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="client_key"/&gt;
                        &lt;L7p:value stringValue="${gateway.ifttt.client.id}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="client_name"/&gt;
                        &lt;L7p:value stringValue="${gateway.ifttt.client.name}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="custom"/&gt;
                        &lt;L7p:value stringValue="{}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="expiration"/&gt;
                        &lt;L7p:value stringValue="${access_token_expiration}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="resource_owner"/&gt;
                        &lt;L7p:value stringValue="${gateway.ifttt.user}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="rexpiration"/&gt;
                        &lt;L7p:value stringValue="${refresh_token_expiration}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="rtoken"/&gt;
                        &lt;L7p:value stringValue="${refresh_token}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="scope"/&gt;
                        &lt;L7p:value stringValue="ifttt"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="token"/&gt;
                        &lt;L7p:value stringValue="${access_token}"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="token_secret"/&gt;
                        &lt;L7p:value stringValue=""/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="token_status"/&gt;
                        &lt;L7p:value stringValue="ENABLED"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Parameters&gt;
            &lt;/L7p:Encapsulated&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="The access_token '${access_token}' could not be persisted!"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// using the 'error.code' created by 'OTK Token Storage                                 (Access_token,refresh_token)'"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="56bd8147-3ab4-4d09-9460-8b2de02b7a9e"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Fail with error message"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="apiPrefix"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="givenErrorCode"/&gt;
                            &lt;L7p:value stringValue="${error.code}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// add a new test access_token to OTK"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:HardcodedResponse&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Create sample response as documented by IFTTT but with our                                 access_token"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64ResponseBody stringValue="ewoJImRhdGEiOiB7CgkJImFjY2Vzc1Rva2VuIjogIiR7YWNjZXNzX3Rva2VufSIsCgkJImNyZWF0ZWRfYXQiOiAiJHtnYXRld2F5LnRpbWUueXl5eS1NTS1kZH0iLAoJCSJtZXRhIjogewoJCQkiaWQiOiAiJHtnYXRld2F5LnRpbWUuc2Vjb25kc30iLAoJCQkidGltZXN0YW1wIjogJHtnYXRld2F5LnRpbWUuc2Vjb25kc30KCQl9LAoJCSJzYW1wbGVzIjogewoJCQkidHJpZ2dlcnMiOiB7CgkJCQkiYWNjb3VudF9tb25pdG9yIjogewoJCQkJCSJhY2NvdW50X251bWJlciI6ICIwMTIzNDU2Nzg5IiwKCQkJCQkiYW1vdW50IjogIjE1MCIKCQkJCX0KCQkJfSwKCQkJImFjdGlvbnMiOiB7CgkJCQkiYWNjb3VudF9tYW5hZ2VtZW50IjogewoJCQkJCSJ3aGljaF9hY2NvdW50IjogIjEyMzQ1Njc4OTAiCgkJCQl9CgkJCX0KCQl9Cgl9Cn0="/&gt;
            &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
        &lt;/L7p:HardcodedResponse&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Service>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>IFTTT User Info</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bca775</l7:Id>
                    <l7:Type>SERVICE</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.815Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Service id="5dbe8b411167eae8d109f6a968bca775" version="2">
                            <l7:ServiceDetail folderId="457652ee7bfc6625aa2134eb51924873" id="5dbe8b411167eae8d109f6a968bca775" version="2">
<l7:Name>IFTTT User Info</l7:Name>
<l7:Enabled>true</l7:Enabled>
<l7:ServiceMappings>
    <l7:HttpMapping>
        <l7:UrlPattern>/tutorial/otk/ifttt/ifttt/v1/user/info</l7:UrlPattern>
        <l7:Verbs>
            <l7:Verb>GET</l7:Verb>
            <l7:Verb>POST</l7:Verb>
            <l7:Verb>PUT</l7:Verb>
            <l7:Verb>DELETE</l7:Verb>
        </l7:Verbs>
    </l7:HttpMapping>
</l7:ServiceMappings>
<l7:Properties>
    <l7:Property key="internal">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="policyRevision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="tracingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="wssProcessingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:ServiceDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This is the userinfo endpoint for IFTTT"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="IFTTT is expecting its own response format, therefore, we cannot reuse the OpenID Connect Userinfo API"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="63da1d1c-1984-4844-8a33-f6b662351892"/&gt;
        &lt;/L7p:Include&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// accept GET only, as documented by IFTTT"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b8822449-71ff-455b-8f10-39122e6c549b"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK HTTP Method Validation"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="method"/&gt;
                    &lt;L7p:value stringValue="GET"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Require an oauth token with scope=ifttt"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="393bcb93-82ad-4b55-8333-1119f607a560"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Require OAuth 2.0 Token"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cache_lifetime"/&gt;
                    &lt;L7p:value stringValue="30"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="given_access_token"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="onetime"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="scope_fail"/&gt;
                    &lt;L7p:value stringValue="false"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="scope_required"/&gt;
                    &lt;L7p:value stringValue="ifttt"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// find details about the current user"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fb3a7c6b-6fc1-47b3-a823-2eecdfa173fe"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK User Attribute Look Up"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="custom"/&gt;
                    &lt;L7p:value stringValue="/ifttt/v1/user/info"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="given_username"/&gt;
                    &lt;L7p:value stringValue="${session.subscriber_id}"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:HardcodedResponse&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// return the expected userinfo message"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64ResponseBody stringValue="ewogICJkYXRhIjogIHsKICAgICJuYW1lIjogIiR7c2Vzc2lvbi5zdWJzY3JpYmVyX2lkfSIsCiAgICAiaWQiOiAiJHtzZXNzaW9uLnN1YnNjcmliZXJfaWR9LWlmdHR0IgogIH0KfQ=="/&gt;
            &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
        &lt;/L7p:HardcodedResponse&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Service>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>IFTTT Status</l7:Name>
                    <l7:Id>5dbe8b411167eae8d109f6a968bca2f4</l7:Id>
                    <l7:Type>SERVICE</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.817Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Service id="5dbe8b411167eae8d109f6a968bca2f4" version="2">
                            <l7:ServiceDetail folderId="457652ee7bfc6625aa2134eb51924873" id="5dbe8b411167eae8d109f6a968bca2f4" version="2">
<l7:Name>IFTTT Status</l7:Name>
<l7:Enabled>true</l7:Enabled>
<l7:ServiceMappings>
    <l7:HttpMapping>
        <l7:UrlPattern>/tutorial/otk/ifttt/ifttt/v1/status</l7:UrlPattern>
        <l7:Verbs>
            <l7:Verb>GET</l7:Verb>
            <l7:Verb>POST</l7:Verb>
            <l7:Verb>PUT</l7:Verb>
            <l7:Verb>DELETE</l7:Verb>
        </l7:Verbs>
    </l7:HttpMapping>
</l7:ServiceMappings>
<l7:Properties>
    <l7:Property key="internal">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="policyRevision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="tracingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="wssProcessingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:ServiceDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This API is used by IFTTT as 'health check'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="This API needs to return '200' or '503'"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="The logic, to determine the correct status code, is up to specific environments"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="63da1d1c-1984-4844-8a33-f6b662351892"/&gt;
        &lt;/L7p:Include&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="ae9b04c7-0038-4e04-8eaf-d4a44f1bd5ca"/&gt;
        &lt;/L7p:Include&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// accept GET only, as documented by IFTTT"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b8822449-71ff-455b-8f10-39122e6c549b"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK HTTP Method Validation"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="method"/&gt;
                    &lt;L7p:value stringValue="GET"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:HardcodedResponse&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// respond with 200"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:ResponseContentType stringValue="text/plain; charset=UTF-8"/&gt;
        &lt;/L7p:HardcodedResponse&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Service>
                    </l7:Resource>
                </l7:Item>
                
                
                <l7:Item>
                    <l7:Name>OTK Cache Remove</l7:Name>
                    <l7:Id>161861da3a78c5dcdc62696d16914bd0</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.823Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="d4895a15-3131-4ae3-8f3f-5e13acf40642" id="161861da3a78c5dcdc62696d16914bd0" version="0">
                            <l7:PolicyDetail folderId="161861da3a78c5dcdc62696d1691481a" guid="d4895a15-3131-4ae3-8f3f-5e13acf40642" id="161861da3a78c5dcdc62696d16914bd0" version="0">
<l7:Name>OTK Cache Remove</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === If you have the need to customize this policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue=" ============================================"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="***** OTK Cache Remove *********************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Removes the value from the cache identified by cacheID and maxEntryAge by key: cacheKey.  The cache value is replaced with an empty value"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**********************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cacheID}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${cacheKey}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${maxEntryAge}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="int"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${maxEntries}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="int"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${maxEntrySize}"/&gt;
                    &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="int"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue="add"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="valid"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MTAz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="error"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="validate"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// check for required fields"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="UkVNT1ZF"/&gt;
                &lt;L7p:VariableToSet stringValue="cache.op"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:ContentType stringValue="text/plain; charset=UTF-8"/&gt;
                &lt;L7p:DataType variableDataType="message"/&gt;
                &lt;L7p:VariableToSet stringValue="msg"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="== SET"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// context variables for OTK Cache Handler"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:Include&gt;
            &lt;L7p:PolicyGuid stringValue="65eff071-9a97-415b-8ebb-8e711ffd738d"/&gt;
        &lt;/L7p:Include&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>OTK Cache Remove</l7:Name>
                    <l7:Id>161861da3a78c5dcdc62696d16914c2d</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.823Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="161861da3a78c5dcdc62696d16914c2d" version="1">
                            <l7:Name>OTK Cache Remove</l7:Name>
                            <l7:Guid>e5787b1a-e832-4cd9-9017-c7620e575b02</l7:Guid>
                            <l7:PolicyReference id="161861da3a78c5dcdc62696d16914bd0" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>cacheID</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>The Cache ID (required)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>cacheKey</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>The Cache Key (identifier) for this entry (required)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>maxEntries</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Max. number of entries for this cache (optional if a default value exists)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>4</l7:Ordinal>
    <l7:ArgumentName>maxEntryAge</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Max. entry age in seconds (optional if a default value exists)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>5</l7:Ordinal>
    <l7:ArgumentName>maxEntrySize</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Max. size for each entry (optional if a default value exists)</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>6</l7:Ordinal>
    <l7:ArgumentName>custom</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiLabel>Custom</l7:GuiLabel>
    <l7:GuiPrompt>true</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>custom_data</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.code</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>error.msg</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>true</l7:StringValue>
</l7:Property>
<l7:Property key="description">
    <l7:StringValue>Removes an item with key: cacheKey from cache with ID:  cacheID</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>customAssertions</l7:StringValue>
</l7:Property>
<l7:Property key="paletteIconResourceName">
    <l7:StringValue>Delete16.gif</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>d4895a15-3131-4ae3-8f3f-5e13acf40642</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
                
                
                <l7:Item>
                    <l7:Name>CA OTK Tutorial Bank</l7:Name>
                    <l7:Id>457652ee7bfc6625aa2134eb519249e7</l7:Id>
                    <l7:Type>SERVICE</l7:Type>
                    <l7:TimeStamp>2018-07-03T23:45:00.845Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Service id="457652ee7bfc6625aa2134eb519249e7" version="2">
                            <l7:ServiceDetail folderId="457652ee7bfc6625aa2134eb51926919" id="457652ee7bfc6625aa2134eb519249e7" version="2">
<l7:Name>CA OTK Tutorial Bank</l7:Name>
<l7:Enabled>true</l7:Enabled>
<l7:ServiceMappings>
    <l7:HttpMapping>
        <l7:UrlPattern>/tutorial/otk/ifttt/bank</l7:UrlPattern>
        <l7:Verbs>
            <l7:Verb>GET</l7:Verb>
            <l7:Verb>POST</l7:Verb>
            <l7:Verb>PUT</l7:Verb>
            <l7:Verb>DELETE</l7:Verb>
        </l7:Verbs>
    </l7:HttpMapping>
</l7:ServiceMappings>
<l7:Properties>
    <l7:Property key="internal">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="policyRevision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="tracingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
    <l7:Property key="wssProcessingEnabled">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:ServiceDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy" version="0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="CA OTK Tutorial Bank"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Returns a website with account information."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CustomizeErrorResponse&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Default error message"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Content stringValue="${error.msg}"/&gt;
            &lt;L7p:ContentType stringValue="${content-type}"/&gt;
            &lt;L7p:ExtraHeaders nameValuePairArray="included"&gt;
                &lt;L7p:item nameValuePair="included"&gt;
                    &lt;L7p:Key stringValue="Pragma"/&gt;
                    &lt;L7p:Value stringValue="no-cache"/&gt;
                &lt;/L7p:item&gt;
                &lt;L7p:item nameValuePair="included"&gt;
                    &lt;L7p:Key stringValue="Cache-Control"/&gt;
                    &lt;L7p:Value stringValue="no-store"/&gt;
                &lt;/L7p:item&gt;
                &lt;L7p:item nameValuePair="included"&gt;
                    &lt;L7p:Key stringValue="x-ca-err"/&gt;
                    &lt;L7p:Value stringValue="${error.code}"/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:ExtraHeaders&gt;
            &lt;L7p:HttpStatus stringValue="${status}"/&gt;
        &lt;/L7p:CustomizeErrorResponse&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                &lt;L7p:VariableToSet stringValue="status"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="YXBwbGljYXRpb24vanNvbg=="/&gt;
                &lt;L7p:VariableToSet stringValue="content-type"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MDAw"/&gt;
                &lt;L7p:VariableToSet stringValue="error.code"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="eyJlcnJvciI6IkJhbmtfRXJyb3IiLCAiZXJyb3JfZGVzY3JpcHRpb24iOiJUaGUgQmFuayBpcyBub3QgYXZhaWxhYmxlIGZvciB1bmtub3duIHJlYXNvbnMuIFBsZWFzZSBjb250YWN0IHN1cHBvcnQhIn0="/&gt;
                &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Initialize variables used with 'Custom Error Response'"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// accept POST and GET"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b8822449-71ff-455b-8f10-39122e6c549b"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK HTTP Method Validation"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="method"/&gt;
                    &lt;L7p:value stringValue="GET|POST"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmFjdGlvbn0="/&gt;
            &lt;L7p:VariableToSet stringValue="action"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnByb3ZpZGVyfQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="provider"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue=""/&gt;
                &lt;L7p:VariableToSet stringValue="webTemplateLogo"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="PCFET0NUWVBFIGh0bWw+DQo8aHRtbCBsYW5nPSJlbiI+DQo8aGVhZD4NCiAgICA8dGl0bGU+VHV0b3JpYWwgLSBPVEsgYW5kIElGVFRUPC90aXRsZT4NCiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+DQogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xIj4NCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vYm9vdHN0cmFwLzMuMy43L2Nzcy9ib290c3RyYXAubWluLmNzcyI+DQogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWpheC5nb29nbGVhcGlzLmNvbS9hamF4L2xpYnMvanF1ZXJ5LzMuMy4xL2pxdWVyeS5taW4uanMiPjwvc2NyaXB0Pg0KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjMuNy9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4NCiAgICA8c3R5bGU+DQogICAgICAgIC8qIFJlbW92ZSB0aGUgbmF2YmFyJ3MgZGVmYXVsdCBtYXJnaW4tYm90dG9tIGFuZCByb3VuZGVkIGJvcmRlcnMgKi8NCiAgICAgICAgLm5hdmJhciB7DQogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwOw0KICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICAgICAgfQ0KDQogICAgICAgIC8qIFNldCBoZWlnaHQgb2YgdGhlIGdyaWQgc28gLnNpZGVuYXYgY2FuIGJlIDEwMCUgKGFkanVzdCBhcyBuZWVkZWQpICovDQogICAgICAgIC5yb3cuY29udGVudCB7aGVpZ2h0OiA0NTBweH0NCg0KICAgICAgICAvKiBTZXQgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGFuZCAxMDAlIGhlaWdodCAqLw0KICAgICAgICAuc2lkZW5hdiB7DQogICAgICAgICAgICBwYWRkaW5nLXRvcDogMjBweDsNCiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7DQogICAgICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgICAgIH0NCg0KICAgICAgICAvKiBTZXQgYmxhY2sgYmFja2dyb3VuZCBjb2xvciwgd2hpdGUgdGV4dCBhbmQgc29tZSBwYWRkaW5nICovDQogICAgICAgIGZvb3RlciB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1Ow0KICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgcGFkZGluZzogMTVweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC8qIE9uIHNtYWxsIHNjcmVlbnMsIHNldCBoZWlnaHQgdG8gJ2F1dG8nIGZvciBzaWRlbmF2IGFuZCBncmlkICovDQogICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7DQogICAgICAgICAgICAuc2lkZW5hdiB7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvOw0KICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7DQogICAgICAgICAgICB9DQogICAgICAgICAgICAucm93LmNvbnRlbnQge2hlaWdodDphdXRvO30NCiAgICAgICAgfQ0KICAgIDwvc3R5bGU+DQo8L2hlYWQ+DQo8Ym9keT4NCg0KPG5hdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1pbnZlcnNlIj4NCiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJuYXZiYXItaGVhZGVyIj4NCiAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0ibmF2YmFyLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iI215TmF2YmFyIj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4NCiAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgPGEgY2xhc3M9Im5hdmJhci1icmFuZCIgaHJlZj0iIyI+PGltZyBzcmM9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCwke3dlYlRlbXBsYXRlTG9nb30iIHdpZHRoPSIzMHB4IiBoZWlnaHQ9IjMwcHgiLz48L2E+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UiIGlkPSJteU5hdmJhciI+DQogICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij4NCiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFjdGl2ZSI+PGEgaHJlZj0iIyI+SG9tZTwvYT48L2xpPg0KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIjIj5BYm91dDwvYT48L2xpPg0KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIjIj5Qcm9qZWN0czwvYT48L2xpPg0KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIjIj5Db250YWN0PC9hPjwvbGk+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBuYXZiYXItcmlnaHQiPg0KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovLyR7Z2F0ZXdheS5jbHVzdGVyLmhvc3RuYW1lfS90dXRvcmlhbC9vdGsvaWZ0dHQvYmFuaz9hY3Rpb249bG9nb3V0Ij48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1sb2ctb3V0Ij48L3NwYW4+IExvZ291dDwvYT48L2xpPg0KICAgICAgICAgICAgPC91bD4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo8L25hdj4NCg0KPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIHRleHQtY2VudGVyIj4NCiAgICA8ZGl2IGNsYXNzPSJyb3cgY29udGVudCI+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0yIHNpZGVuYXYiPg0KICAgICAgICAgICAgPHA+PGEgaHJlZj0iaHR0cHM6Ly8ke2dhdGV3YXkuY2x1c3Rlci5ob3N0bmFtZX0vdHV0b3JpYWwvb3RrL2lmdHR0L2Jhbms/YWN0aW9uPWFjY291bnQiPkFjY291bnQgTWFuYWdlbWVudDwvYT48L3A+DQogICAgICAgICAgICA8cD48YSBocmVmPSIjIj5DcmVkaXQgQ2FyZCBNYW5hZ2VtZW50PC9hPjwvcD4NCiAgICAgICAgICAgIDxwPjxhIGhyZWY9IiMiPkludmVzdG1lbnQgTWFuYWdlbWVudDwvYT48L3A+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOCB0ZXh0LWxlZnQiPg0KICAgICAgICAgICAgIyN3ZWxjb21lTXNnIyMNCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0yIHNpZGVuYXYiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0id2VsbCI+DQogICAgICAgICAgICAgICAgPHA+VHJ5IHRoZSA8YSBocmVmPSJodHRwczovL3d3dy5jYS5jb20vdXMvcHJvZHVjdHMvY2EtYXBpLWdhdGV3YXkuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiPkNBIEFQSSBHYXRld2F5PC9hPiwgaXQgaXMgYXdlc29tZSE8L3A+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndlbGwiPg0KICAgICAgICAgICAgICAgIDxwPlVzZSBvdXIgZnJlZSA8c3Ryb25nPjxhIGhyZWY9Imh0dHBzOi8vaWZ0dHQuY29tL2Rpc2NvdmVyIiB0YXJnZXQ9Il9ibGFuayI+QWNjb3VudCBNb25pdG9yPC9hPjwvc3Ryb25nPiB0byBiZSBub3RpZmllZCBpZiBhbnl0aGluZyBjaGFuZ2VzITwvcD4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCjwvZGl2Pg0KDQo8Zm9vdGVyIGNsYXNzPSJjb250YWluZXItZmx1aWQgdGV4dC1jZW50ZXIiPg0KICAgIDxwPkNBIE9USyBUdXRvcmlhbCBCYW5rLCBDb3B5cmlnaHQgMjAxODwvcD4NCjwvZm9vdGVyPg0KDQo8L2JvZHk+DQo8L2h0bWw+"/&gt;
                &lt;L7p:VariableToSet stringValue="webTemplate"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// prepare web template"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${action}"/&gt;
                    &lt;L7p:Expression2 stringValue="logout"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="logout"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${provider}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CookieCredentialSource&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// use the access_token from the cookie"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CookieName stringValue="otkTutorialToken"/&gt;
                &lt;/L7p:CookieCredentialSource&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// check for scope=banking"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="393bcb93-82ad-4b55-8333-1119f607a560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Require OAuth 2.0 Token"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cache_lifetime"/&gt;
                            &lt;L7p:value stringValue="0"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="custom"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="given_access_token"/&gt;
                            &lt;L7p:value stringValue="${cookie.otkTutorialToken}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="onetime"/&gt;
                            &lt;L7p:value stringValue="false"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="scope_fail"/&gt;
                            &lt;L7p:value stringValue="false"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="scope_required"/&gt;
                            &lt;L7p:value stringValue="banking"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="revoke access_token"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="gateway.ifttt.bank.client.id"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_id"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="gateway.ifttt.bank.client.secret"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_secret"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="JHthY2Nlc3NfdG9rZW59"/&gt;
                    &lt;L7p:VariableToSet stringValue="token"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="YWNjZXNzX3Rva2Vu"/&gt;
                    &lt;L7p:VariableToSet stringValue="token_type_hint"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="Y2xpZW50X2lkPSR7Y2xpZW50X2lkfSZjbGllbnRfc2VjcmV0PSR7Y2xpZW50X3NlY3JldH0mdG9rZW49JHthY2Nlc3NfdG9rZW59JnRva2VuX3R5cGVfaGludD1hY2Nlc3NfdG9rZW4="/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="https://${gateway.cluster.hostname}:8443/auth/oauth/v2/token/revoke"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="msg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="otkTutorialCache"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// /tutorial/otk/ifttt/ifttt/v1/actions/account_management"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="e5787b1a-e832-4cd9-9017-c7620e575b02"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Cache Remove"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheID"/&gt;
                            &lt;L7p:value stringValue="otkTutorialCache"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheKey"/&gt;
                            &lt;L7p:value stringValue="${session.subscriber_id}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="maxEntries"/&gt;
                            &lt;L7p:value stringValue="10"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="maxEntryAge"/&gt;
                            &lt;L7p:value stringValue="300"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="maxEntrySize"/&gt;
                            &lt;L7p:value stringValue="10000"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ICAgICAgICAgICAgPGgxPllvdSBzdWNjZXNzZnVsbHkgbG9nZ2VkIG91dCBvZiBDQSBPVEsgVHV0b3JpYWwgQmFuayE8L2gxPg0KICAgICAgICAgICAgPGhyPg0KICAgICAgICAgICAgPGgyPlBsZWFzZSBjbGljayA8YSBocmVmPSJodHRwczovLyR7Z2F0ZXdheS5jbHVzdGVyLmhvc3RuYW1lfS90dXRvcmlhbC9vdGsvaWZ0dHQvYmFuaz9hY3Rpb249bG9naW4iPmhlcmU8L2E+IHRvIGxvZ2luITwvaDI+"/&gt;
                    &lt;L7p:VariableToSet stringValue="welcomeMsg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="webTemplate"/&gt;
                    &lt;L7p:Regex stringValue="##welcomeMsg##"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${welcomeMsg}"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:Base64ResponseBody stringValue="JHt3ZWJUZW1wbGF0ZX0="/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                &lt;/L7p:HardcodedResponse&gt;
                &lt;L7p:ManageCookie&gt;
                    &lt;L7p:CookieCriteria mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="name"/&gt;
                            &lt;L7p:value cookieCriteria="included"&gt;
                                &lt;L7p:Key stringValue="name"/&gt;
                                &lt;L7p:Value stringValue="otkTutorial"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="domain"/&gt;
                            &lt;L7p:value cookieCriteria="included"&gt;
                                &lt;L7p:Key stringValue="domain"/&gt;
                                &lt;L7p:Value stringValue="${gateway.cluster.hostname}"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:CookieCriteria&gt;
                    &lt;L7p:Operation operation="REMOVE"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:ManageCookie&gt;
                &lt;L7p:ManageCookie&gt;
                    &lt;L7p:CookieCriteria mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="name"/&gt;
                            &lt;L7p:value cookieCriteria="included"&gt;
                                &lt;L7p:Key stringValue="name"/&gt;
                                &lt;L7p:Value stringValue="otkTutorialToken"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="domain"/&gt;
                            &lt;L7p:value cookieCriteria="included"&gt;
                                &lt;L7p:Key stringValue="domain"/&gt;
                                &lt;L7p:Value stringValue="${gateway.cluster.hostname}"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:CookieCriteria&gt;
                    &lt;L7p:Operation operation="REMOVE"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:ManageCookie&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// logout"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${action}"/&gt;
                    &lt;L7p:Expression2 stringValue="account"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="account"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${provider}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CookieCredentialSource&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// use the access_token from the cookie"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:CookieName stringValue="otkTutorialToken"/&gt;
                &lt;/L7p:CookieCredentialSource&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// check for scope=banking"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="393bcb93-82ad-4b55-8333-1119f607a560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Require OAuth 2.0 Token"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cache_lifetime"/&gt;
                            &lt;L7p:value stringValue="30"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="given_access_token"/&gt;
                            &lt;L7p:value stringValue="${cookie.otkTutorialToken}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="onetime"/&gt;
                            &lt;L7p:value stringValue="false"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="scope_fail"/&gt;
                            &lt;L7p:value stringValue="false"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="scope_required"/&gt;
                            &lt;L7p:value stringValue="banking"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="JHtzZXNzaW9uLnN1YnNjcmliZXJfaWR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="username"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LnRpbWUuZGQuTU0ueXl5eX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="date"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="PGgxPldlbGNvbWUgJHt1c2VybmFtZX0gdG8gQ0EgT1RLIFR1dG9yaWFsIEJhbmshPC9oMT4NCjxocj4NCjxoMj5BY2NvdW50IE92ZXJ2aWV3IC0gVHJhbnNhY3Rpb25zPC9oMj4NCjxoND48c3Ryb25nPkFjY291bnQgbnVtYmVyOiA8L3N0cm9uZz4xMjM0NTY3ODk8L2g0Pg0KDQo8cD48c3Ryb25nPkRhdGU6IDwvc3Ryb25nPiR7ZGF0ZX08L3A+DQoNCjx0YWJsZSBjbGFzcz0idGFibGUiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIDx0aCBzY29wZT0iY29sIj4jPC90aD4NCiAgICAgICAgPHRoIHNjb3BlPSJjb2wiPklEPC90aD4NCiAgICAgICAgPHRoIHNjb3BlPSJjb2wiPkRhdGU8L3RoPg0KICAgICAgICA8dGggc2NvcGU9ImNvbCI+VHlwZTwvdGg+DQogICAgICAgIDx0aCBzY29wZT0iY29sIj5BbW91bnQ8L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCiAgICA8dGJvZHk+DQogICAgPHRyPg0KICAgICAgICA8dGggc2NvcGU9InJvdyI+MTwvdGg+DQogICAgICAgIDx0ZD4xMTExMTE8L3RkPg0KICAgICAgICA8dGQ+JHtkYXRlfS0xMzowNTowMDwvdGQ+DQogICAgICAgIDx0ZD5EZXBvc2l0PC90ZD4NCiAgICAgICAgPHRkPjIwMCwwMDwvdGQ+DQogICAgPC90cj4NCiAgICA8dHI+DQogICAgICAgIDx0aCBzY29wZT0icm93Ij4yPC90aD4NCiAgICAgICAgPHRkPjIyMjIyMjwvdGQ+DQogICAgICAgIDx0ZD4ke2RhdGV9LTEyOjQ2OjE1PC90ZD4NCiAgICAgICAgPHRkPkRlcG9zaXQ8L3RkPg0KICAgICAgICA8dGQ+MjI1LDAwPC90ZD4NCiAgICA8L3RyPg0KICAgIDx0cj4NCiAgICAgICAgPHRoIHNjb3BlPSJyb3ciPjM8L3RoPg0KICAgICAgICA8dGQ+MzMzMzMzPC90ZD4NCiAgICAgICAgPHRkPiR7ZGF0ZX0tMTI6MzM6MDA8L3RkPg0KICAgICAgICA8dGQ+V2l0aGRyYXdhbDwvdGQ+DQogICAgICAgIDx0ZD4tMzMwLDQ5PC90ZD4NCiAgICA8L3RyPg0KICAgIDx0cj4NCiAgICAgICAgPHRoIHNjb3BlPSJyb3ciPjQ8L3RoPg0KICAgICAgICA8dGQ+NDQ0NDQ0PC90ZD4NCiAgICAgICAgPHRkPiR7ZGF0ZX0tMDg6MDI6MDA8L3RkPg0KICAgICAgICA8dGQ+RGVwb3NpdDwvdGQ+DQogICAgICAgIDx0ZD4xMzUsOTk8L3RkPg0KICAgIDwvdHI+DQogICAgPC90Ym9keT4NCjwvdGFibGU+DQo8aHIvPg0KPGg0PjxzdHJvbmc+QWNjb3VudCBudW1iZXI6IDwvc3Ryb25nPjEyMzQzMjU2Nzg5PC9oND4NCg0KPHA+PHN0cm9uZz5EYXRlOiA8L3N0cm9uZz4ke2RhdGV9PC9wPg0KDQo8dGFibGUgY2xhc3M9InRhYmxlIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICA8dGggc2NvcGU9ImNvbCI+IzwvdGg+DQogICAgICAgIDx0aCBzY29wZT0iY29sIj5JRDwvdGg+DQogICAgICAgIDx0aCBzY29wZT0iY29sIj5EYXRlPC90aD4NCiAgICAgICAgPHRoIHNjb3BlPSJjb2wiPlR5cGU8L3RoPg0KICAgICAgICA8dGggc2NvcGU9ImNvbCI+QW1vdW50PC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQogICAgPHRib2R5Pg0KICAgIDx0cj4NCiAgICAgICAgPHRoIHNjb3BlPSJyb3ciPjE8L3RoPg0KICAgICAgICA8dGQ+NTU1NTU1PC90ZD4NCiAgICAgICAgPHRkPiR7ZGF0ZX0tMTE6MDU6MDA8L3RkPg0KICAgICAgICA8dGQ+RGVwb3NpdDwvdGQ+DQogICAgICAgIDx0ZD4xMDAsMDA8L3RkPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgICAgICA8dGggc2NvcGU9InJvdyI+MjwvdGg+DQogICAgICAgIDx0ZD42NjY2NjY8L3RkPg0KICAgICAgICA8dGQ+JHtkYXRlfS0xMTowMzoxNTwvdGQ+DQogICAgICAgIDx0ZD5EZXBvc2l0PC90ZD4NCiAgICAgICAgPHRkPjEyNSwwMDwvdGQ+DQogICAgPC90cj4NCiAgICA8dHI+DQogICAgICAgIDx0aCBzY29wZT0icm93Ij4zPC90aD4NCiAgICAgICAgPHRkPjc3Nzc3Nzc8L3RkPg0KICAgICAgICA8dGQ+JHtkYXRlfS0xMDozMzowMDwvdGQ+DQogICAgICAgIDx0ZD5XaXRoZHJhd2FsPC90ZD4NCiAgICAgICAgPHRkPi0xMzAsNDk8L3RkPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgICAgICA8dGggc2NvcGU9InJvdyI+NDwvdGg+DQogICAgICAgIDx0ZD44ODg4ODg4ODwvdGQ+DQogICAgICAgIDx0ZD4ke2RhdGV9LTA5OjAyOjAwPC90ZD4NCiAgICAgICAgPHRkPkRlcG9zaXQ8L3RkPg0KICAgICAgICA8dGQ+MzUsOTk8L3RkPg0KICAgIDwvdHI+DQogICAgPC90Ym9keT4NCjwvdGFibGU+"/&gt;
                    &lt;L7p:VariableToSet stringValue="welcomeMsg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="webTemplate"/&gt;
                    &lt;L7p:Regex stringValue="##welcomeMsg##"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${welcomeMsg}"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:Base64ResponseBody stringValue="JHt3ZWJUZW1wbGF0ZX0="/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                &lt;/L7p:HardcodedResponse&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// session exists"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${action}"/&gt;
                    &lt;L7p:Expression2 stringValue="login"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="login"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${provider}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Redirect to oauth provider"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="gateway.ifttt.bank.client.id"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_id"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="gateway.ifttt.bank.client.redirect"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="redirect_uri"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="gateway.ifttt.bank.client.scope"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="scope"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="P2NsaWVudF9pZD0ke2NsaWVudF9pZH0mc2NvcGU9JHtzY29wZX0mcmVkaXJlY3RfdXJpPSR7cmVkaXJlY3RfdXJpfSZyZXNwb25zZV90eXBlPWNvZGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="params"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly8ke2dhdGV3YXkuY2x1c3Rlci5ob3N0bmFtZX0vYXV0aC9vYXV0aC92Mi9hdXRob3JpemU="/&gt;
                    &lt;L7p:VariableToSet stringValue="location"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// redirect to authorization server"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:ResponseContentType stringValue="text/plain; charset=UTF-8"/&gt;
                    &lt;L7p:ResponseStatus stringValue="302"/&gt;
                &lt;/L7p:HardcodedResponse&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="Location"/&gt;
                    &lt;L7p:HeaderValue stringValue="${location}${params}"/&gt;
                    &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// initiate oauth flow"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${action}"/&gt;
                    &lt;L7p:Expression2 stringValue="token"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="token"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${provider}"/&gt;
                    &lt;L7p:Expression2 stringValue="bank"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="bank"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmNvZGV9"/&gt;
                    &lt;L7p:VariableToSet stringValue="code"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${code}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:RightValue stringValue=""/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="exchange code for access_token"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="gateway.ifttt.bank.client.id"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_id"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="gateway.ifttt.bank.client.secret"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_secret"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="gateway.ifttt.bank.client.redirect"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="redirect_uri"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                &lt;/L7p:EncodeDecode&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="Y2xpZW50X2lkPSR7Y2xpZW50X2lkfSZjbGllbnRfc2VjcmV0PSR7Y2xpZW50X3NlY3JldH0mcmVkaXJlY3RfdXJpPSR7cmVkaXJlY3RfdXJpfSZncmFudF90eXBlPWF1dGhvcml6YXRpb25fY29kZSZjb2RlPSR7Y29kZX0="/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="https://${gateway.cluster.hostname}:8443/auth/oauth/v2/token"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="msg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:Expression stringValue="access_token"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="resp"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:VariablePrefix stringValue="token.access_token"/&gt;
                &lt;/L7p:EvaluateJsonPathExpression&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:ContentType stringValue="text/plain; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="emptyMsg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:AuthOauthTokenVar stringValue="token.access_token.result"/&gt;
                    &lt;L7p:AuthOauthVersion stringValue="2.0"/&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="GET"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="https://${gateway.cluster.hostname}:8443/openid/connect/v1/userinfo"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="emptyMsg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="resp"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
                &lt;L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:Expression stringValue="preferred_username"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="resp"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:VariablePrefix stringValue="userinfo.username"/&gt;
                &lt;/L7p:EvaluateJsonPathExpression&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="otkTutorialCache"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// /tutorial/otk/ifttt/ifttt/v1/actions/account_management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="68ad78a1-f4a1-4568-91e1-0980d95c75cd"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="OTK Cache Look Up"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheID"/&gt;
                                    &lt;L7p:value stringValue="otkTutorialCache"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheKey"/&gt;
                                    &lt;L7p:value stringValue="${userinfo.username.result}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="maxEntryAge"/&gt;
                                    &lt;L7p:value stringValue="300"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZXNwLm1haW5wYXJ0fQ=="/&gt;
                            &lt;L7p:ContentType stringValue="application/json; charset=utf-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="session"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:EvaluateJsonPathExpression&gt;
                            &lt;L7p:Expression stringValue="session.account"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="session"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                            &lt;L7p:VariablePrefix stringValue="session.account"/&gt;
                        &lt;/L7p:EvaluateJsonPathExpression&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtzZXNzaW9uLmFjY291bnQucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="account"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LnRpbWUuZGQuTU0ueXl5eX0="/&gt;
                            &lt;L7p:VariableToSet stringValue="date"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// initialize"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="PGgxPldlbGNvbWUgJHt1c2VyaW5mby51c2VybmFtZS5yZXN1bHR9IHRvIENBIE9USyBUdXRvcmlhbCBCYW5rITwvaDE+DQo8aHI+DQo8aDI+QWNjb3VudCBPdmVydmlldyAtIFRyYW5zYWN0aW9uczwvaDI+DQo8aDQ+PHN0cm9uZz5BY2NvdW50IG51bWJlcjogPC9zdHJvbmc+JHthY2NvdW50fTwvaDQ+DQoNCjxwPjxzdHJvbmc+RGF0ZTogPC9zdHJvbmc+JHtkYXRlfTwvcD4NCg0KPHRhYmxlIGNsYXNzPSJ0YWJsZSI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgPHRoIHNjb3BlPSJjb2wiPiM8L3RoPg0KICAgICAgICA8dGggc2NvcGU9ImNvbCI+SUQ8L3RoPg0KICAgICAgICA8dGggc2NvcGU9ImNvbCI+RGF0ZTwvdGg+DQogICAgICAgIDx0aCBzY29wZT0iY29sIj5UeXBlPC90aD4NCiAgICAgICAgPHRoIHNjb3BlPSJjb2wiPkFtb3VudDwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KICAgIDx0Ym9keT4NCiAgICA8dHI+DQogICAgICAgIDx0aCBzY29wZT0icm93Ij4xPC90aD4NCiAgICAgICAgPHRkPjExMTExMTwvdGQ+DQogICAgICAgIDx0ZD4ke2RhdGV9LTEzOjA1OjAwPC90ZD4NCiAgICAgICAgPHRkPkRlcG9zaXQ8L3RkPg0KICAgICAgICA8dGQ+MjAwLDAwPC90ZD4NCiAgICA8L3RyPg0KICAgIDx0cj4NCiAgICAgICAgPHRoIHNjb3BlPSJyb3ciPjI8L3RoPg0KICAgICAgICA8dGQ+MjIyMjIyPC90ZD4NCiAgICAgICAgPHRkPiR7ZGF0ZX0tMTI6NDY6MTU8L3RkPg0KICAgICAgICA8dGQ+RGVwb3NpdDwvdGQ+DQogICAgICAgIDx0ZD4yMjUsMDA8L3RkPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgICAgICA8dGggc2NvcGU9InJvdyI+MzwvdGg+DQogICAgICAgIDx0ZD4zMzMzMzM8L3RkPg0KICAgICAgICA8dGQ+JHtkYXRlfS0xMjozMzowMDwvdGQ+DQogICAgICAgIDx0ZD5XaXRoZHJhd2FsPC90ZD4NCiAgICAgICAgPHRkPi0zMzAsNDk8L3RkPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgICAgICA8dGggc2NvcGU9InJvdyI+NDwvdGg+DQogICAgICAgIDx0ZD40NDQ0NDQ8L3RkPg0KICAgICAgICA8dGQ+JHtkYXRlfS0wODowMjowMDwvdGQ+DQogICAgICAgIDx0ZD5EZXBvc2l0PC90ZD4NCiAgICAgICAgPHRkPjEzNSw5OTwvdGQ+DQogICAgPC90cj4NCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4="/&gt;
                            &lt;L7p:VariableToSet stringValue="welcomeMsg"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// find (optional) existing session created by IFTTT"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// initialize"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:VariableToSet stringValue="account"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// initialize"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="ICAgICAgICAgICAgPGgxPldlbGNvbWUgJHt1c2VyaW5mby51c2VybmFtZS5yZXN1bHR9IHRvIENBIE9USyBUdXRvcmlhbCBCYW5rITwvaDE+DQogICAgICAgICAgICA8aHI+DQogICAgICAgICAgICA8aDI+UGxlYXNlIGNob29zZSBmcm9tIHRoZSBsZWZ0IG1lbnUgdG8gc3RhcnQhPC9oMj4="/&gt;
                            &lt;L7p:VariableToSet stringValue="welcomeMsg"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// start without pre-selection"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// find (optional) existing session created by IFTTT"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="webTemplate"/&gt;
                    &lt;L7p:Regex stringValue="##welcomeMsg##"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${welcomeMsg}"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:Base64ResponseBody stringValue="JHt3ZWJUZW1wbGF0ZX0="/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                &lt;/L7p:HardcodedResponse&gt;
                &lt;L7p:ManageCookie&gt;
                    &lt;L7p:CookieAttributes mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="name"/&gt;
                            &lt;L7p:value nameValuePair="included"&gt;
                                &lt;L7p:Key stringValue="name"/&gt;
                                &lt;L7p:Value stringValue="otkTutorialToken"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="httpOnly"/&gt;
                            &lt;L7p:value nameValuePair="included"&gt;
                                &lt;L7p:Key stringValue="httpOnly"/&gt;
                                &lt;L7p:Value stringValue="true"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="secure"/&gt;
                            &lt;L7p:value nameValuePair="included"&gt;
                                &lt;L7p:Key stringValue="secure"/&gt;
                                &lt;L7p:Value stringValue="true"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="value"/&gt;
                            &lt;L7p:value nameValuePair="included"&gt;
                                &lt;L7p:Key stringValue="value"/&gt;
                                &lt;L7p:Value stringValue="${token.access_token.result}"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="domain"/&gt;
                            &lt;L7p:value nameValuePair="included"&gt;
                                &lt;L7p:Key stringValue="domain"/&gt;
                                &lt;L7p:Value stringValue="${gateway.cluster.hostname}"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:CookieAttributes&gt;
                    &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:ManageCookie&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// request access_token"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// initialize"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64Expression stringValue="ICAgICAgICAgICAgPGgxPldlbGNvbWUgdG8gQ0EgT1RLIFR1dG9yaWFsIEJhbmshPC9oMT4NCiAgICAgICAgICAgIDxocj4NCiAgICAgICAgICAgIDxoMj5QbGVhc2UgY2xpY2sgPGEgaHJlZj0iaHR0cHM6Ly8ke2dhdGV3YXkuY2x1c3Rlci5ob3N0bmFtZX0vdHV0b3JpYWwvb3RrL2lmdHR0L2Jhbms/YWN0aW9uPWxvZ2luIj5oZXJlPC9hPiB0byBsb2dpbiE8L2gyPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="welcomeMsg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="webTemplate"/&gt;
                    &lt;L7p:Regex stringValue="##welcomeMsg##"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${welcomeMsg}"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:Base64ResponseBody stringValue="JHt3ZWJUZW1wbGF0ZX0="/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                &lt;/L7p:HardcodedResponse&gt;
                &lt;L7p:ManageCookie&gt;
                    &lt;L7p:CookieCriteria mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="name"/&gt;
                            &lt;L7p:value cookieCriteria="included"&gt;
                                &lt;L7p:Key stringValue="name"/&gt;
                                &lt;L7p:Value stringValue="otkTutorial"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="domain"/&gt;
                            &lt;L7p:value cookieCriteria="included"&gt;
                                &lt;L7p:Key stringValue="domain"/&gt;
                                &lt;L7p:Value stringValue="${gateway.cluster.hostname}"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:CookieCriteria&gt;
                    &lt;L7p:Operation operation="REMOVE"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:ManageCookie&gt;
                &lt;L7p:ManageCookie&gt;
                    &lt;L7p:CookieCriteria mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="name"/&gt;
                            &lt;L7p:value cookieCriteria="included"&gt;
                                &lt;L7p:Key stringValue="name"/&gt;
                                &lt;L7p:Value stringValue="otkTutorialToken"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="domain"/&gt;
                            &lt;L7p:value cookieCriteria="included"&gt;
                                &lt;L7p:Key stringValue="domain"/&gt;
                                &lt;L7p:Value stringValue="${gateway.cluster.hostname}"/&gt;
                            &lt;/L7p:value&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:CookieCriteria&gt;
                    &lt;L7p:Operation operation="REMOVE"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:ManageCookie&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// no session, display info message"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Handle an existing oauth session or create one"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Service>
                    </l7:Resource>
                </l7:Item>
            </l7:References>
            <l7:Mappings>
                <l7:Mapping action="NewOrExisting" srcId="0000000000000000ffffffffffffec76" srcUri="https://05550dcdd451:443/restman/1.0/folders/0000000000000000ffffffffffffec76" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bc9792" srcUri="https://05550dcdd451:443/restman/1.0/folders/5dbe8b411167eae8d109f6a968bc9792" type="FOLDER"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bca4f8" srcUri="https://05550dcdd451:443/restman/1.0/folders/5dbe8b411167eae8d109f6a968bca4f8" type="FOLDER"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bca968" srcUri="https://05550dcdd451:443/restman/1.0/folders/5dbe8b411167eae8d109f6a968bca968" type="FOLDER"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bca5ac" srcUri="https://05550dcdd451:443/restman/1.0/folders/5dbe8b411167eae8d109f6a968bca5ac" type="FOLDER"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bca569" srcUri="https://05550dcdd451:443/restman/1.0/folders/5dbe8b411167eae8d109f6a968bca569" type="FOLDER"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bca63a" srcUri="https://05550dcdd451:443/restman/1.0/folders/5dbe8b411167eae8d109f6a968bca63a" type="FOLDER"/>
                <l7:Mapping action="NewOrUpdate" srcId="457652ee7bfc6625aa2134eb519226d9" srcUri="https://05550dcdd451:443/restman/1.0/folders/457652ee7bfc6625aa2134eb519226d9" type="FOLDER"/>
                <l7:Mapping action="NewOrUpdate" srcId="457652ee7bfc6625aa2134eb51922719" srcUri="https://05550dcdd451:443/restman/1.0/folders/457652ee7bfc6625aa2134eb51922719" type="FOLDER"/>
                <l7:Mapping action="NewOrUpdate" srcId="457652ee7bfc6625aa2134eb51924873" srcUri="https://05550dcdd451:443/restman/1.0/folders/457652ee7bfc6625aa2134eb51924873" type="FOLDER"/>
                <l7:Mapping action="NewOrUpdate" srcId="457652ee7bfc6625aa2134eb51926919" srcUri="https://05550dcdd451:443/restman/1.0/folders/457652ee7bfc6625aa2134eb51926919" type="FOLDER"/>
                
                <l7:Mapping action="NewOrExisting" srcId="161861da3a78c5dcdc62696d169147d0" srcUri="https://05550dcdd451:443/restman/1.0/folders/161861da3a78c5dcdc62696d169147d0" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="c2656fd5ff575252902a7e330e355f53" srcUri="https://05550dcdd451:443/restman/1.0/policies/c2656fd5ff575252902a7e330e355f53" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="161861da3a78c5dcdc62696d16914896" srcUri="https://05550dcdd451:443/restman/1.0/policies/161861da3a78c5dcdc62696d16914896" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="161861da3a78c5dcdc62696d16914883" srcUri="https://05550dcdd451:443/restman/1.0/policies/161861da3a78c5dcdc62696d16914883" type="POLICY"/>
                <l7:Mapping action="NewOrExisting" srcId="161861da3a78c5dcdc62696d1691481a" srcUri="https://05550dcdd451:443/restman/1.0/folders/161861da3a78c5dcdc62696d1691481a" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="161861da3a78c5dcdc62696d16914861" srcUri="https://05550dcdd451:443/restman/1.0/policies/161861da3a78c5dcdc62696d16914861" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="161861da3a78c5dcdc62696d16914bbb" srcUri="https://05550dcdd451:443/restman/1.0/policies/161861da3a78c5dcdc62696d16914bbb" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="161861da3a78c5dcdc62696d16914c21" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/161861da3a78c5dcdc62696d16914c21" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrExisting" srcId="161861da3a78c5dcdc62696d16914781" srcUri="https://05550dcdd451:443/restman/1.0/folders/161861da3a78c5dcdc62696d16914781" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="bc9a31b7578652a08a514d7d4fef9afd" srcUri="https://05550dcdd451:443/restman/1.0/policies/bc9a31b7578652a08a514d7d4fef9afd" type="POLICY"/>
                <l7:Mapping action="Ignore" type="ENCAPSULATED_ASSERTION">
                    <l7:Properties>
                        <l7:Property key="MapBy">
                            <l7:StringValue>guid</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="MapTo">
                            <l7:StringValue>15795857-d8a2-4b45-9722-94fc1ce9098a</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="161861da3a78c5dcdc62696d16914be5" srcUri="https://05550dcdd451:443/restman/1.0/policies/161861da3a78c5dcdc62696d16914be5" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="161861da3a78c5dcdc62696d16914c44" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/161861da3a78c5dcdc62696d16914c44" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrExisting" srcId="e001cfd0c1c1ffaa18e187b5e72fd08e" srcUri="https://05550dcdd451:443/restman/1.0/folders/e001cfd0c1c1ffaa18e187b5e72fd08e" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="d1bde3d2021a469e82ebf8cac288bbd1" srcUri="https://05550dcdd451:443/restman/1.0/policies/d1bde3d2021a469e82ebf8cac288bbd1" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="d1bde3d2021a469e82ebf8cac288bd97" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/d1bde3d2021a469e82ebf8cac288bd97" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bca807" srcUri="https://05550dcdd451:443/restman/1.0/policies/5dbe8b411167eae8d109f6a968bca807" type="POLICY"/>
                <l7:Mapping action="NewOrExisting" srcId="e001cfd0c1c1ffaa18e187b5e72fd6e8" srcUri="https://05550dcdd451:443/restman/1.0/folders/e001cfd0c1c1ffaa18e187b5e72fd6e8" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="d1bde3d2021a469e82ebf8cac288b778" srcUri="https://05550dcdd451:443/restman/1.0/policies/d1bde3d2021a469e82ebf8cac288b778" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="d1bde3d2021a469e82ebf8cac288b7c9" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/d1bde3d2021a469e82ebf8cac288b7c9" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bca37d" srcUri="https://05550dcdd451:443/restman/1.0/policies/5dbe8b411167eae8d109f6a968bca37d" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd946" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd946" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="3f6b5c92ca2ac3665bc7d8780bc4d876" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/3f6b5c92ca2ac3665bc7d8780bc4d876" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="24e6fd7c5b6fb3a96690246c8ac492ec" srcUri="https://05550dcdd451:443/restman/1.0/policies/24e6fd7c5b6fb3a96690246c8ac492ec" type="POLICY"/>
                <l7:Mapping action="NewOrExisting" srcId="e001cfd0c1c1ffaa18e187b5e72fc858" srcUri="https://05550dcdd451:443/restman/1.0/folders/e001cfd0c1c1ffaa18e187b5e72fc858" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd82d" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd82d" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fda9a" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fda9a" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrExisting" srcId="e001cfd0c1c1ffaa18e187b5e72fcfce" srcUri="https://05550dcdd451:443/restman/1.0/folders/e001cfd0c1c1ffaa18e187b5e72fcfce" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd86a" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd86a" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fdaa0" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fdaa0" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="24e6fd7c5b6fb3a96690246c8ac49304" srcUri="https://05550dcdd451:443/restman/1.0/policies/24e6fd7c5b6fb3a96690246c8ac49304" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fc9d0" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fc9d0" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fcac5" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fcac5" type="ENCAPSULATED_ASSERTION"/>
                
                <l7:Mapping action="NewOrExisting" srcId="e001cfd0c1c1ffaa18e187b5e72fcbcd" srcUri="https://05550dcdd451:443/restman/1.0/folders/e001cfd0c1c1ffaa18e187b5e72fcbcd" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fcc49" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fcc49" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fce1e" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fce1e" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrExisting" srcId="00000000000000000000000000000002:SSL" srcUri="https://05550dcdd451:443/restman/1.0/privateKeys/00000000000000000000000000000002:SSL" type="SSG_KEY_ENTRY">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd1ab" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd1ab" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd20f" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fd20f" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="d2fa9e7e0db9f0c56c13fe57e46309e1" srcUri="https://05550dcdd451:443/restman/1.0/policies/d2fa9e7e0db9f0c56c13fe57e46309e1" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="d003cc363d3af3fa8c1c0dfed091ccfe" srcUri="https://05550dcdd451:443/restman/1.0/policies/d003cc363d3af3fa8c1c0dfed091ccfe" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="d003cc363d3af3fa8c1c0dfed091cd38" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/d003cc363d3af3fa8c1c0dfed091cd38" type="ENCAPSULATED_ASSERTION"/>
                
                
                <l7:Mapping action="NewOrUpdate" srcId="24e6fd7c5b6fb3a96690246c8ac49335" srcUri="https://05550dcdd451:443/restman/1.0/policies/24e6fd7c5b6fb3a96690246c8ac49335" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd183" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd183" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd2da" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fd2da" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd147" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd147" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd28f" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fd28f" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fccc1" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fccc1" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fcdfa" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fcdfa" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd16f" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd16f" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd25d" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fd25d" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd1d3" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd1d3" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd322" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fd322" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrExisting" srcId="e001cfd0c1c1ffaa18e187b5e72fc898" srcUri="https://05550dcdd451:443/restman/1.0/folders/e001cfd0c1c1ffaa18e187b5e72fc898" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd0f6" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd0f6" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="35f5ccf02323692c2c4a2f0545010a90" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/35f5ccf02323692c2c4a2f0545010a90" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd1e7" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd1e7" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd336" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fd336" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd841" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd841" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="3f6b5c92ca2ac3665bc7d8780bc4d718" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/3f6b5c92ca2ac3665bc7d8780bc4d718" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="d0c2108b72b11af05b03eb6dd44c7fa2" srcUri="https://05550dcdd451:443/restman/1.0/services/d0c2108b72b11af05b03eb6dd44c7fa2" type="SERVICE"/>
                <l7:Mapping action="NewOrExisting" srcId="bc9a31b7578652a08a514d7d4fef309b" srcUri="https://05550dcdd451:443/restman/1.0/folders/bc9a31b7578652a08a514d7d4fef309b" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrUpdate" srcId="3b6761a5d0ee0e2d4452b1065da584bf" srcUri="https://05550dcdd451:443/restman/1.0/policies/3b6761a5d0ee0e2d4452b1065da584bf" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="3b6761a5d0ee0e2d4452b1065da5d85c" srcUri="https://05550dcdd451:443/restman/1.0/policies/3b6761a5d0ee0e2d4452b1065da5d85c" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="3b6761a5d0ee0e2d4452b1065da5d88a" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/3b6761a5d0ee0e2d4452b1065da5d88a" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="d0c2108b72b11af05b03eb6dd44cca29" srcUri="https://05550dcdd451:443/restman/1.0/services/d0c2108b72b11af05b03eb6dd44cca29" type="SERVICE"/>
                <l7:Mapping action="NewOrUpdate" srcId="24e6fd7c5b6fb3a96690246c8ac4931d" srcUri="https://05550dcdd451:443/restman/1.0/policies/24e6fd7c5b6fb3a96690246c8ac4931d" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd8ba" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd8ba" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fdbf2" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fdbf2" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd932" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd932" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fdb08" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fdb08" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="97975cf167f141f884f61a2392d544d2" srcUri="https://05550dcdd451:443/restman/1.0/policies/97975cf167f141f884f61a2392d544d2" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="49ed796ade964a2e886f779711689fd2" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/49ed796ade964a2e886f779711689fd2" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fcc99" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fcc99" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fce4a" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fce4a" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd95a" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd95a" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="3f6b5c92ca2ac3665bc7d8780bc4d892" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/3f6b5c92ca2ac3665bc7d8780bc4d892" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="3f42c73314d6b36fb7ebe93f600808ff" srcUri="https://05550dcdd451:443/restman/1.0/policies/3f42c73314d6b36fb7ebe93f600808ff" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="35f5ccf02323692c2c4a2f0545010a1d" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/35f5ccf02323692c2c4a2f0545010a1d" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fccd5" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fccd5" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fcdd8" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/e001cfd0c1c1ffaa18e187b5e72fcdd8" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="e001cfd0c1c1ffaa18e187b5e72fd7b5" srcUri="https://05550dcdd451:443/restman/1.0/policies/e001cfd0c1c1ffaa18e187b5e72fd7b5" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="3f6b5c92ca2ac3665bc7d8780bc4d7fc" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/3f6b5c92ca2ac3665bc7d8780bc4d7fc" type="ENCAPSULATED_ASSERTION"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bc9e46" srcUri="https://05550dcdd451:443/restman/1.0/services/5dbe8b411167eae8d109f6a968bc9e46" type="SERVICE"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bca775" srcUri="https://05550dcdd451:443/restman/1.0/services/5dbe8b411167eae8d109f6a968bca775" type="SERVICE"/>
                <l7:Mapping action="NewOrUpdate" srcId="5dbe8b411167eae8d109f6a968bca2f4" srcUri="https://05550dcdd451:443/restman/1.0/services/5dbe8b411167eae8d109f6a968bca2f4" type="SERVICE"/>
                
                
                <l7:Mapping action="NewOrUpdate" srcId="161861da3a78c5dcdc62696d16914bd0" srcUri="https://05550dcdd451:443/restman/1.0/policies/161861da3a78c5dcdc62696d16914bd0" type="POLICY"/>
                <l7:Mapping action="NewOrUpdate" srcId="161861da3a78c5dcdc62696d16914c2d" srcUri="https://05550dcdd451:443/restman/1.0/encapsulatedAssertions/161861da3a78c5dcdc62696d16914c2d" type="ENCAPSULATED_ASSERTION"/>
                
                
                <l7:Mapping action="NewOrUpdate" srcId="457652ee7bfc6625aa2134eb519249e7" srcUri="https://05550dcdd451:443/restman/1.0/services/457652ee7bfc6625aa2134eb519249e7" type="SERVICE"/>
            </l7:Mappings>
        </l7:Bundle>