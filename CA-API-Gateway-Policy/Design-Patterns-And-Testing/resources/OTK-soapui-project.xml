<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="fdde477c-81f0-4fd0-a7f9-4aa8fb53d377" activeEnvironment="Default" name="CA_World_2017-OTK-4.1" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:description>This project executes a complete OpenID Connect flow. Update these 'Custom Properties': host_iss, resource_owner, resource_owner_password</con:description><con:settings/><con:testSuite id="9adaf79a-8305-464e-8d78-5a527f340b03" name="WhatsNew"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f7d798f0-19b8-469a-aac0-952f53c69557" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OpenID-Config-Registration" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="GetConfiguration" id="34f3a985-0c85-4519-a79b-0f2882738c3f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a3b23d0d-1d5a-4945-a1d0-ddc278cd9540" name="GetConfiguration" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Get the OpenID server configuration</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#host_iss}${#Project#path_configuration}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="ConfigDetails" id="edb48cb6-22fc-44a6-b839-6e67953174d1"><con:description>Extract a few details such as the path to '/register'</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Path_Register</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetConfiguration</con:sourceStep><con:sourcePath>registration_endpoint</con:sourcePath><con:targetType>Endpoint</con:targetType><con:targetStep>DynamicClientRegistration</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Path_Token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetConfiguration</con:sourceStep><con:sourcePath>token_endpoint</con:sourcePath><con:targetType>path_token</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Path_Authorize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetConfiguration</con:sourceStep><con:sourcePath>authorization_endpoint</con:sourcePath><con:targetType>path_authorize</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Path_Userinfo</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetConfiguration</con:sourceStep><con:sourcePath>userinfo_endpoint</con:sourcePath><con:targetType>path_userinfo</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Path_JWKS</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetConfiguration</con:sourceStep><con:sourcePath>jwks_uri</con:sourcePath><con:targetType>path_jwks</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="GenerateOrg" id="5cf520c9-60e8-4c98-87d2-ea262568ee28"><con:description>This is used as 'fake' organization name to combine it with the client_name. This way, for the demo, we can register the 'same' client multiple times</con:description><con:settings/><con:config><script>def fakeOrg = new Date().format("HHmmss")</script></con:config></con:testStep><con:testStep type="transfer" name="TransferFakeOrg" id="1f9c8623-ab99-4ec1-8d4f-1c3bcc4720a9"><con:description>Extract the fakeOrg value into the property 'fakeOrg'</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fakeOrg</con:name><con:sourceType>result</con:sourceType><con:sourceStep>GenerateOrg</con:sourceStep><con:targetType>fakeOrg</con:targetType><con:targetStep>fakeOrg</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="fakeOrg" id="64fa6721-437d-45c0-bad7-ac1f0da23b65"><con:description>Property holding the value of 'fakeOrg'</con:description><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>fakeOrg</con:name><con:value>110504</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="DynamicClientRegistration" id="9000ffcc-6577-4529-ab3f-1609f1fed92e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="6bceded6-80a6-42ec-af39-b0a8a7db1e58" name="DynamicClientRegistration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Register a new client. If this fail the client has been registered beforehand with the same details</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://ssg-spr-ingress.ca.com:8443/openid/connect/register</con:endpoint><con:request>{
	"application_type": "${#Project#application_type}",
	"redirect_uris": ["${#Project#redirect_uri}"],
	"client_name": "${#Project#client_name}-${#fakeOrg}",
	"subject_type": "pairwise",
	"token_endpoint_auth_method": "client_secret_basic",
	"contacts": ["${#Project#contact_alias}","${#Project#contact_email}"]
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="RegistrationDetails" id="47141701-b6a0-48ce-a441-0befdfa1a395"><con:description>Extract details such as the access_token and registration_client_uri</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>client_id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>DynamicClientRegistration</con:sourceStep><con:sourcePath>client_id</con:sourcePath><con:targetType>client_id</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>client_secret</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>DynamicClientRegistration</con:sourceStep><con:sourcePath>client_secret</con:sourcePath><con:targetType>client_secret</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scope</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>DynamicClientRegistration</con:sourceStep><con:sourcePath>scope</con:sourcePath><con:targetType>scope</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="GenerateState" id="70ee75cd-eb7b-421a-965c-b7c7793cc823"><con:description>Using the time as 'state'. This would usually be something like a client sessionID</con:description><con:settings/><con:config><script>new Date().format("HHmmss")</script></con:config></con:testStep><con:testStep type="transfer" name="TransferState" id="6b0cb866-a65d-4c5f-a22c-ec6d842f72e5"><con:description>Move the generate 'state' into our authorization request</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>result</con:sourceType><con:sourceStep>GenerateState</con:sourceStep><con:targetType>state</con:targetType><con:targetStep>AuthorizationRequest - code</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="AuthorizationRequest - code" id="990996d9-b097-4d0d-864b-fe79eba4c731"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4fe1991a-a88f-418a-b529-5ad6c3be6ba8" name="AuthorizationRequest - code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Initiating the authorization code flow. The response is a redirect, 302, which we simply follow</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#TestSuite#path_authorize}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>client_id</con:name><con:value>${#TestSuite#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>response_type</con:name><con:value>code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>scope</con:name><con:value>${#TestSuite#scope}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>state</con:name><con:value>110504</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>prompt</con:name><con:value>login</con:value></con:parameter><con:parameter><con:name>id_token_hint</con:name><con:value>old-id-token</con:value></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="AuthorizationResponseDetails" id="97813b82-9051-46f1-92a6-dadb085355ab"><con:description>Extract details that we need for the next request</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>AuthorizationRequest - code</con:sourceStep><con:sourcePath>//input[@name='sessionID']/@value</con:sourcePath><con:targetType>sessionID</con:targetType><con:targetStep>Authentication</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionData</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>AuthorizationRequest - code</con:sourceStep><con:sourcePath>//input[@name='sessionData']/@value</con:sourcePath><con:targetType>sessionData</con:targetType><con:targetStep>Authentication</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>location</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>AuthorizationRequest - code</con:sourceStep><con:sourcePath>//form/@action</con:sourcePath><con:targetType>Endpoint</con:targetType><con:targetStep>Authentication</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="Authentication" id="a6c3f9e3-d441-46a1-be68-6d03787ed103"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2d4a94f2-41bf-49f3-85ea-b088fd75dcfa" name="Authentication" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Auhenticating the user. The request includes details of the previous response</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://ssg-spr-ingress.ca.com:8443/auth/oauth/v2/authorize/login</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>username</con:name><con:value>${#Project#resource_owner}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>password</con:name><con:value>${#Project#resource_owner_password}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sessionID</con:name><con:value>d4836f8b-277d-401a-b039-bdc9fa12f8bd</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sessionData</con:name><con:value>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.ew0KICAgICJzZXNzaW9uIjogew0KICAgICAgICAic2Vzc2lvbklEIjoiZDQ4MzZmOGItMjc3ZC00MDFhLWIwMzktYmRjOWZhMTJmOGJkIiwNCiAgICAgICAgImV4cCI6MTUxMDc3MjU1NSwNCiAgICAgICAgImN1cnJlbnRfdXNlcm5hbWUiOiIiLA0KICAgICAgICAiY3VycmVudF91c2VyX2NvbnNlbnQiOiJub25lIiwNCiAgICAgICAgImN1cnJlbnRfdXNlcl9yb2xlIjoiIiwNCiAgICAgICAgImN1cnJlbnRfdXNlcl9hY3IiOiIwIiwNCiAgICAgICAgImN1cnJlbnRfdXNlcl9hdXRoVGltZSI6IjAiLA0KICAgICAgICAic2FsdCI6IiIsDQogICAgICAgICJ0aGlyZF9wYXJ0eV9zc29fdG9rZW4iOiIiLA0KICAgICAgICAidGhpcmRfcGFydHlfc3NvX3Rva2VuX3R5cGUiOiIiDQogICAgfSwNCiAgICAicmVxdWVzdF9jb25zZW50Ijogew0KICAgICAgICAiY2xpZW50X25hbWUiOiJDQStXb3JsZCsyMDE3K0RlbW8rQXBwLTExMDUwNCIsDQogICAgICAgICJzY29wZV92ZXJpZmllZCI6Im9wZW5pZCtlbWFpbCtwcm9maWxlK29wZW5pZF9jbGllbnRfcmVnaXN0cmF0aW9uIg0KICAgIH0sDQogICAgInJlcXVlc3RfcGFyYW1ldGVycyI6IHsNCiAgICAgICAgImRpc3BsYXkiOiJwYWdlIiwNCiAgICAgICAgInByb21wdCI6ImxvZ2luK2NvbnNlbnQiLA0KICAgICAgICAiaWRfdG9rZW5faGludCI6IiIsDQogICAgICAgICJsb2dpbl9oaW50IjoiIiwNCiAgICAgICAgImFjcl92YWx1ZXMiOiIiLA0KICAgICAgICAiY2xpZW50X2lkIjoiMmUzMDBmZTItZmE5MS00YjdlLWE5ZmEtZDQwYWU2NDJhOGRhIiwNCiAgICAgICAgIm5vbmNlIjoiIiwNCiAgICAgICAgInNjb3BlIjoib3BlbmlkK2VtYWlsK3Byb2ZpbGUrb3BlbmlkX2NsaWVudF9yZWdpc3RyYXRpb24iLA0KICAgICAgICAibWF4X2FnZSI6ICIiDQogICAgfQ0KfQ.cpr6wD2mpLp7tnMuZLW0vPA0PM3OKhC2keLV1kCYTII</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>login</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="AuthenticationResponseDetails" id="bfb190a0-f647-4094-991c-c629eaf0086a"><con:description>Extract details for the next request</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Authentication</con:sourceStep><con:sourcePath>//input[@name='sessionID']/@value</con:sourcePath><con:targetType>sessionID</con:targetType><con:targetStep>ConsentRequest</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionData</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Authentication</con:sourceStep><con:sourcePath>//input[@name='sessionData']/@value</con:sourcePath><con:targetType>sessionData</con:targetType><con:targetStep>ConsentRequest</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Authentication</con:sourceStep><con:sourcePath>//input[@name='action']/@value</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>ConsentRequest</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>location</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Authentication</con:sourceStep><con:sourcePath>//form/@action</con:sourcePath><con:targetType>Endpoint</con:targetType><con:targetStep>ConsentRequest</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="ConsentRequest" id="14d1cbb9-ec19-4ccf-a10d-ec2fe674b363"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="63624d4d-e15c-4f2b-8278-55b57e17fae5" name="ConsentRequest" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Request the 'Consent' page</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://ssg-spr-ingress.ca.com:8443/auth/oauth/v2/authorize/consent</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>sessionID</con:name><con:value>d4836f8b-277d-401a-b039-bdc9fa12f8bd</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sessionData</con:name><con:value>eyJ0eXAiOiJKV1QiLCJjdHkiOiJKV1QiLCJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..7gm5_lZ-jCro1qAWANvGZg.Ij0cipSIZ7A_dlnCqD_CpMZ9yxZC-phn1gjJRtE3EmSNfvweXSH7GO5Zzec3zpGZnD7JlJrx0Ece1Z8pNwIV-T0vTwdtBKkBrC8yIS5xYfR2kM-bpDkTtSWAA5cWaoIGUVP7wOdZ2SZO_eAjevZLLAh4jO_mHqmuXwoSsAylKgZK3oQuQjg4w-PJ-vQnJg2Haw9RRW9FfSZf3sRam-jTjqNt7TEmSvOWMhe6hXFchlQXZglemRWdl7_cieH14Q5JnkU6mmyC3F3wHEu-D8ENkFKs_K0lwn0hP4MC4hSL-fplYDskRQNIhKAJp7NnyQhm3x5qDwFQT6Gdg2bHI_XFwqZOtTIz5TMLbzwmFuBADIG6IpLxntwLGP6LzgoALG6hoYkVBdsZtsqA-DNEJqcUqky3Y_4lM4NPj8RZC8eqtj4j78rLWbSyqvjN950KIcUUjdkyWhVYnN2Tq-g4xztDlytM9JfA0vj9ZG1KEp_gEjz5jQ6Hpe44_iohmcpjP62oX6HbQ7St1xc7ZQ4dWxyLaM40WJZx3OSLrO827jL8YOdcIXPZ0yDizAN3S6ycmR6WjZt-eJSxmU1RlXKHMihN194ElzmOIRjh4uT_y-xuUuRSqvW-m31e7z3rP8WNJgUTUj1IQ-KDGYdOKfnW4qTQtJg_X79_e0PHhVidYS5QzQIA1zZeoCHpUUhokVF9n9uSm7u8xvUvJOK7t_wWpbfW4TUxo6iwoTIcxZAC1_wCIaG6WVbf83rhe9e2Zf__QfJwQ1Kv8PfXcwF2rVeQbwtk3BLuJ27pOmkJ2k3ppTN2tZTpUmDi-0RpLE4Fstxz_Zfij9eAi3ObM9R4vPWDEZTku9F3uyQR-vKfKcAFl1Jy3n7HdCYxh12Bk2RzAmZmZJmmKAhYQr_YfPNoepUlLcMJkO3n2C0cstHuYK7-Erzw98ZsfBALEgXtf1J4SkM--9u_RpwV5qdYjBTYtxcgD9AgwA_pAOs1DXtzJ3sf7ENk61ocbe96gL2fbpY7H1PtSisGJXErmAmLjbJQ3wBGwQq94RVmPhnLw419Ctdhu15fI1HBj5N6gxXsOJL-OVGRm0flmosBZ8MXxfFa_-eDndhiiCvOZftmr2h95jqPeM2RpcGR1qZiqP1di5P4QFff8VNYuJbQt2_-I8FDHs4bj6t4wxWm1vrd_O0XonTviWqlknKcUpvT-mYQdLlfhK1H1rhKdRaeot5bTYXbjYUeAKipLbHsz5NINUYMUEc-kuIw0e7vOycUVydecSomG6Xr7Urx5k9X5DEKbUIFHozvakDriqAziQ50Wemz1p4jv-1p29p8PY_MUHf4WRLRM5_33DWaKNElhWn5tZpD9uVxSYw88Z9zp_dGvF4l-xrs3IEeGR-kYxsZ4N-QLJCdnbjg2Hvk5PTz0TVwGk--x7SQ4cktzHCCfN2I77-d6-mqH7-7rqrcofUK9ABSVTZPi9plOIX-ihWKuEX7hlFh46GACsmxpMN_VKH1UaVFvdUCNw2gOXvLdYod5t0Bjy5-_yUQs6v73SI0JrFX8kKYMsXXqW6XMypRPQISA00FrDNpB-vwkWYqpm8TBIDRfp_HU20rma2nXSQekGtJ0TCmBC1Y4zTP-XJ6_Xrg2X_G2hxoVE5yikLwi3COv_B30-Z6RUzvDhaaJYlVS8Cb09mU-ktoFt7RGFXBWBo1crUWtLEYGE8YeQVr8-P1cFplpboFTfhxXnnNFTSLwBgw_Fz44xkKCpBjGCE4SKJOzjagGATJqs8L0pG7FNUM72rJL-Y4TqN2gJ4zPtTNXZrn6sZpkadq2pSlDUypl5mpBcx2XyNfgr4XdP8.wUszWcF6GnUmDD1bIXIHnQ</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>consent</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="ConsentRequestDetails" id="d216157b-3378-40d0-8472-581ade5ca36c"><con:description>Extract details for the next request</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>ConsentRequest</con:sourceStep><con:sourcePath>//input[@name='sessionID']/@value</con:sourcePath><con:targetType>sessionID</con:targetType><con:targetStep>Consent</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionData</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>ConsentRequest</con:sourceStep><con:sourcePath>//input[@name='sessionData']/@value</con:sourcePath><con:targetType>sessionData</con:targetType><con:targetStep>Consent</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>location</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>ConsentRequest</con:sourceStep><con:sourcePath>//form/@action</con:sourcePath><con:targetType>Endpoint</con:targetType><con:targetStep>Consent</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="Consent" id="c4813f0b-090b-4c61-a949-add3909f227c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2fe0bc4d-61a9-4514-b6d5-a00d0e7357ea" name="Consent" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Grant (consent) access to my resources. Important with SOAPUI is to not follow the redirect in the response. That location does not exist!</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://ssg-spr-ingress.ca.com:8443/auth/oauth/v2/authorize/consent</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>sessionID</con:name><con:value>d4836f8b-277d-401a-b039-bdc9fa12f8bd</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sessionData</con:name><con:value>eyJ0eXAiOiJKV1QiLCJjdHkiOiJKV1QiLCJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..qvxybLO5t9Du60QCkEJXnA.zYSGUqrjvHqB9s_hbmcogcnnILp__9seN6E_ALbSWc9Vdm7p019a-fauZRavAVhQ_BT4Ra6mCdDYtIKuHlPf4qPiQ9ueCQ87ysBohACiQuDRjdObrR8pnNf8wNsViK7-KqJptFifKyKasEkOwr8YSbMokgs03THPbWfeCmW_TA8WAIvVM1c_McbzhYm-uyx2nftbpiL30nmvyfPMr_YWYs04LVzawnagYwUvQ87RBPDY6fxUx5i9TlSTrE2s-BpcaBE6z-07Jw6mQf2hcEaeVGxKwQmWa8GHpxHC8jy_btzRLPGYowCPWDJQGBwxL3idB1aA32N91_kfRDpGdjpeaIjt2xF8RlDX9Hs_NvPG4u5TjLW90s42g6Th7lYnHbhhHUMN5xg0tulXcIA6RPZcuRQgZm_uLD6Qx46IkRaKv0GMvZkM13Osok2MwEp_aOD8D1GU-guBZucqUoK3NgeJKombCuWGUEuF4bunqZtLhH8jYfLzRo5BCkSHATZ_YXwdEr-CXrNecrCBgk93fUDlt9m7T733d3OcWNAnpoOzHhdcXdvxPxGt2n9f17CIYuC-QdsfNaYS_JuyWka8el35KT8sf6K3p6uHaa1pg_6Xq3VEyaybzDRiKBDZAKK-Hlan0qKRQnTqwhUoEvWhlkq9HoLsyRV4m4eQ2FnIEv-SDTg3NbbQNPeflbkys75dM-7u_EOllq00XJz5pzIfvrAuIP9T7QNmi6anpUt1ymVSkoZrmqDvh_35D5I0K7T2mtT99iFaf88-nX78rS9NW0s4Jtfx3cbNWEmvqxBnr-0veJA7fZRffYogvTGz42KLyrjE16JN4ZjpyBkdMflz_eedB2iw_fdZn59j7NsLIPQIDC4hbHbWTAnRft1tEiEZg5ziNJtuXhov6c-59VeKQKItVnofj6UoVyBkrynXq8UM9PByBzgol6arI0YJyNu7JpEFI7hw8Ayg8ZtZ6xrk_15cgbRq9g-zgI2fNDYnTJdxFW_IVUg_KcEztL5hWHeY0pt35LtYSYLmGGudUbGndFcS3X748xZShdlhc-9vPU977wRL0i4FqcpXJo4Z8ydavu3zn_ch_-EO5siO1jKRa8dMMKeKnInAk4SONiRMSSidk0TI4qJvqUkUQZcOuein5u3uwUeHst-gMFELtPZdU5PhdkIdVLjCDku6KFK9gtq6qr9sdzGN-iYBPp_5b2dQiRZUY_TBJM0dZX3bjZf6_USE9a-EalWGT0Jrx6aJZrgN6scF6r5qmWsZK8hSNtcoRVs-jT1gz9N9fiSDHLgtqXzPfLNvBuN3v_ol3DKKPnltigZwd7O_-tPy-qTWouWokUuXGAzToxyQHb3IbsOpxVjRdIZ8gpnjx6PUBeYRWo4ra-L_rcmaptI74NjQeFhAmPN0JVHydMCou31N613wmPjWfq9lKcm9PXJcmvqnlXsENbBYE0e-9ybZyjL60Qx21bklE-FqkvSjZ1GSv7K8Bx6oX_xq6K2pT8vG3HLyma6r-IgDBQCVQK_StuPm-nRCithFvrueOkLB1MsX2uk03bEKEEN6T5uLVMtcFRLqow-wGHxqKFk4dWMnov0TrXpii5S93XjQHJ6Ab-GplQaSVaRWR_hWHbursq_0xG4NIerEJzf7AEFSNRUTQxO_HelgOL3vkL-Wp4us24_8XyExW6xtMnG6Fy5c1iaY2aXNKxbQKBNk7VVnc3Rqeg_qgjqSseKHkOjfuTgjvoBsHHtJykDe-eGWvNZeGWesTVTU4P7Io56IbajK5QyrvV8ls7Vafi45TIYSUDXjs2Cn4PJxo1D0-QQPkcbV78rFhu--76dgCMQ.ehGS3Czc7J_ibni58wDu4A</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>Grant</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="ExtractCode" id="cd21e13d-ca4b-490f-ac35-90ecbad31c11"><con:description>The 'code' was retured in the Location header. We now etract it from there</con:description><con:settings/><con:config><script>def location = testRunner.testCase.getTestStepByName("Consent").httpRequest.response.responseHeaders["Location"][0]
def m = location =~ /code=([^&amp;]+)/;
if (!m) {
throw new RuntimeException("No code returned!");
}
m.group(1);</script></con:config></con:testStep><con:testStep type="transfer" name="TransferCode" id="f0a6ff0c-4882-40e9-b8c2-3654f5584eca"><con:description>After extracting the 'code' we are using it in our 'TokenRequest'</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>code</con:name><con:sourceType>result</con:sourceType><con:sourceStep>ExtractCode</con:sourceStep><con:targetType>code</con:targetType><con:targetStep>TokenRequest</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="TokenRequest" id="fb3a3a0d-a80e-4eb7-bdb3-abed52bf6739"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="40f12287-ec84-4e44-a5c9-f1f9fa6a152b" name="TokenRequest" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Use the received 'code' to exchange it for an access_token</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="50d93b89-fb3b-4b09-ad1c-46773a0418f4" name="status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>client_id</con:name><con:value>${#TestSuite#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>${#TestSuite#client_secret}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>code</con:name><con:value>766a707a-c95c-48a9-871f-e17047d47514</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="TransferToken" id="63b09ad1-3cdd-41fa-9d66-246f4980db4a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>TokenRequest</con:sourceStep><con:sourcePath>access_token</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Userinfo</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="Userinfo" id="833fdb07-12ca-4780-9c9e-9e26fa11cc20"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="faee9095-b5f7-4060-989c-0def31a1dcdc" name="Userinfo" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Now we will use the received access_token to call the userinfo endpoint</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#path_userinfo}</con:endpoint><con:request/><con:assertion type="JsonPath Match" id="a533a2dc-0fd7-4c4e-ad08-ca0a191d7bde" name="preferred_username=resource_owner"><con:configuration><path>preferred_username</path><content>${#Project#resource_owner}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>access_token</con:name><con:value>6870b63e-7339-48dc-a717-d765f3e1d8b9</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>path_token</con:name><con:value>https://ssg-spr-ingress.ca.com:8443/auth/oauth/v2/token</con:value></con:property><con:property><con:name>path_authorize</con:name><con:value>https://ssg-spr-ingress.ca.com:8443/auth/oauth/v2/authorize</con:value></con:property><con:property><con:name>path_userinfo</con:name><con:value>https://ssg-spr-ingress.ca.com:8443/openid/connect/v1/userinfo</con:value></con:property><con:property><con:name>path_jwks</con:name><con:value>https://ssg-spr-ingress.ca.com:8443/openid/connect/jwks.json</con:value></con:property><con:property><con:name>client_id</con:name><con:value>2e300fe2-fa91-4b7e-a9fa-d40ae642a8da</con:value></con:property><con:property><con:name>client_secret</con:name><con:value>204542cd-441e-4ad5-a631-b9cfcee0befc</con:value></con:property><con:property><con:name>scope</con:name><con:value>openid email profile openid_client_registration</con:value></con:property></con:properties></con:testSuite><con:properties><con:property><con:name>host_iss</con:name><con:value>https://your-gateway.com:8443</con:value></con:property><con:property><con:name>resource_owner</con:name><con:value>your-username</con:value></con:property><con:property><con:name>resource_owner_password</con:name><con:value>your-password</con:value></con:property><con:property><con:name>path_configuration</con:name><con:value>/.well-known/openid-configuration</con:value></con:property><con:property><con:name>contact_alias</con:name><con:value>spiderman</con:value></con:property><con:property><con:name>contact_email</con:name><con:value>peter.parker@spiderman.com</con:value></con:property><con:property><con:name>client_name</con:name><con:value>CA World 2017 Demo App</con:value></con:property><con:property><con:name>application_type</con:name><con:value>web</con:value></con:property><con:property><con:name>redirect_uri</con:name><con:value>https://soapui.ca.com/caworld2017/client</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>